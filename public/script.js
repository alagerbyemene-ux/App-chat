// متغيرات عامة
let socket;
let currentUser = null;
let currentRoom = 1;
let isRecording = false;
let mediaRecorder;
let audioChunks = [];
let chatMode = 'public'; // public or private
let selectedUserId = null;
let quotedMessage = null;
let viewingUserId = null; // ← أضف هذا في الأعلى

// Available ranks
const RANKS = {
    visitor: { name: 'Visitor', emoji: '👋', level: 0, color: '#888' },
    bronze: { name: 'Bronze Member', emoji: '🥉', level: 1, color: '#cd7f32' },
    silver: { name: 'Silver Member', emoji: '🥈', level: 2, color: '#c0c0c0' },
    gold: { name: 'Gold Member', emoji: '🥇', level: 3, color: '#ffd700' },
    diamond: { name: 'Diamond Member', emoji: '💎', level: 4, color: '#b9f2ff' },
    crown: { name: 'Prince', emoji: '👑', level: 5, color: '#ff6b35' },
    moderator: { name: 'Moderator', emoji: '🛡️', level: 6, color: '#00bfff' },
    admin: { name: 'Admin', emoji: '⚡', level: 7, color: 'linear-gradient(45deg, #ff6b35, #f093fb)' },
    super: { name: 'Super', emoji: '⭐', level: 8, color: '#ffd700' },
    legend: { name: 'Legend', emoji: '🌟', level: 9, color: '#8a2be2' },
    chat_star: { name: 'Chat Owner', emoji: '🏆', level: 10, color: 'linear-gradient(45deg, #ffd700, #ff6b35)' }
};



// أسئلة المسابقات
const QUIZ_QUESTIONS = [

    {
        question: "ما هي عاصمة فرنسا؟",
        options: ["لندن", "برلين", "باريس", "روما"],
        correct: 2
    },
    {
        question: "كم عدد قارات العالم؟",
        options: ["5", "6", "7", "8"],
        correct: 2
    },
    {
        question: "ما هو أكبر محيط في العالم؟",
        options: ["الأطلسي", "الهندي", "المتجمد الشمالي", "الهادئ"],
        correct: 3
    },
    {
        question: "في أي عام تم اختراع الإنترنت؟",
        options: ["1969", "1975", "1983", "1991"],
        correct: 0
    },
    {
        question: "ما هو أطول نهر في العالم؟",
        options: ["النيل", "الأمازون", "اليانغتسي", "المسيسيبي"],
        correct: 0
    },
    {
        question: "ما هي عاصمة مصر؟",
        options: ["القاهرة", "الإسكندرية", "الجيزة", "أسوان"],
        correct: 0
    },
    {
        question: "من هو مؤسس شركة أبل؟",
        options: ["بيل جيتس", "ستيف جوبز", "إيلون ماسك", "مارك زوكربيرج"],
        correct: 1
    },
    {
        question: "كم عدد أيام السنة؟",
        options: ["360", "365", "366", "370"],
        correct: 1
    },
    {
        question: "ما هو أكبر حيوان بري؟",
        options: ["الفيل", "الزرافة", "الأسد", "النمر"],
        correct: 0
    },
    {
        question: "في أي قارة تقع أستراليا؟",
        options: ["أفريقيا", "أمريكا", "أوروبا", "أوقيانوسيا"],
        correct: 3
    },
    {
        question: "ما هي أكبر دولة في العالم من حيث المساحة؟",
        options: ["الصين", "كندا", "روسيا", "الولايات المتحدة"],
        correct: 2
    },
    {
        question: "كم عدد الأحرف في الأبجدية العربية؟",
        options: ["26", "28", "30", "32"],
        correct: 1
    },
    {
        question: "ما هو أعلى جبل في العالم؟",
        options: ["ك2", "إفرست", "كانتشينجونجا", "ماناسلو"],
        correct: 1
    },
    {
        question: "من هو أول رئيس للولايات المتحدة؟",
        options: ["توماس جيفرسون", "جورج واشنطن", "أبراهام لنكولن", "فرانكلين روزفلت"],
        correct: 1
    },
    {
        question: "ما هي العملة الرسمية لليابان؟",
        options: ["الين", "الدولار", "اليورو", "الروبية"],
        correct: 0
    },
    {
        question: "في أي قارة تقع مصر؟",
        options: ["آسيا", "أوروبا", "أفريقيا", "أوقيانوسيا"],
        correct: 2
    },
    {
        question: "كم عدد ألوان قوس قزح؟",
        options: ["6", "7", "8", "9"],
        correct: 1
    },
    {
        question: "ما هي عاصمة كندا؟",
        options: ["تورنتو", "مونتريال", "أوتاوا", "فانكوفر"],
        correct: 2
    },
    {
        question: "من هو مكتشف أمريكا؟",
        options: ["ماركو بولو", "كريستوفر كولومبوس", "فاسكو دا غاما", "ماجلان"],
        correct: 1
    },
    {
        question: "ما هو أكبر كوكب في المجموعة الشمسية؟",
        options: ["الأرض", "المشتري", "زحل", "الزهرة"],
        correct: 1
    },
    {
        question: "في أي عام انتهت الحرب العالمية الثانية؟",
        options: ["1944", "1945", "1946", "1947"],
        correct: 1
    },
    {
        question: "ما هي عاصمة أستراليا؟",
        options: ["سيدني", "ميلبورن", "كانبيرا", "بريزبان"],
        correct: 2
    },
    {
        question: "كم عدد أيام الشهر في التقويم الميلادي؟",
        options: ["28-31", "30", "31", "29"],
        correct: 0
    },
    {
        question: "ما هو أصغر دولة في العالم؟",
        options: ["موناكو", "الفاتيكان", "سان مارينو", "ليختنشتاين"],
        correct: 1
    },
    {
        question: "من هو أول رائد فضاء؟",
        options: ["نيل أرمسترونج", "يوري جاجارين", "بز ألدرين", "جون جلين"],
        correct: 1
    },
    {
        question: "ما هي عاصمة البرازيل؟",
        options: ["ريو دي جانيرو", "ساو باولو", "برازيليا", "ماناوس"],
        correct: 2
    },
    {
        question: "كم عدد الكواكب في المجموعة الشمسية؟",
        options: ["7", "8", "9", "10"],
        correct: 1
    },
    {
        question: "ما هو أطول حيوان في العالم؟",
        options: ["الفيل", "الحوت الأزرق", "الزرافة", "التمساح"],
        correct: 2
    },
    {
        question: "في أي قارة تقع جنوب أفريقيا؟",
        options: ["أمريكا الجنوبية", "أوروبا", "أفريقيا", "آسيا"],
        correct: 2
    },
    {
        question: "ما هي عاصمة الهند؟",
        options: ["بومباي", "دلهي", "نيو دلهي", "كلكتا"],
        correct: 2
    },
    {
        question: "من هو مؤسس شركة مايكروسوفت؟",
        options: ["ستيف جوبز", "بيل جيتس", "إيلون ماسك", "مارك زوكربيرج"],
        correct: 1
    },
    {
        question: "ما هو أكبر بحيرة في العالم؟",
        options: ["بحيرة فيكتوريا", "بحيرة بايكال", "بحيرة سوبيريور", "بحيرة كاسپية"],
        correct: 3
    },
    {
        question: "كم عدد الولايات في الولايات المتحدة؟",
        options: ["48", "50", "52", "55"],
        correct: 1
    },
    {
        question: "ما هي عاصمة المكسيك؟",
        options: ["غوادالاخارا", "مكسيكو سيتي", "مونتيري", "كانكون"],
        correct: 1
    },
    {
        question: "من هو أول إنسان هبط على القمر؟",
        options: ["بز ألدرين", "يوري جاجارين", "نيل أرمسترونج", "جون جلين"],
        correct: 2
    },
    {
        question: "ما هو أكثر عنصر شيوعاً في الغلاف الجوي؟",
        options: ["الأكسجين", "النيتروجين", "ثاني أكسيد الكربون", "الهيليوم"],
        correct: 1
    },
    {
        question: "في أي عام تم اختراع الطائرة؟",
        options: ["1900", "1903", "1905", "1910"],
        correct: 1
    },
    {
        question: "ما هي عاصمة تركيا؟",
        options: ["إسطنبول", "أنقرة", "إزمير", "أنطاليا"],
        correct: 1
    },
    {
        question: "كم عدد أسنان الإنسان البالغ؟",
        options: ["28", "30", "32", "34"],
        correct: 2
    },
    {
        question: "ما هو أسرع حيوان بري؟",
        options: ["الأسد", "النمر", "الفهد", "الغزال"],
        correct: 2
    },
    {
        question: "ما هي عاصمة إيطاليا؟",
        options: ["ميلان", "روما", "فينيسيا", "فلورنسا"],
        correct: 1
    },
    {
        question: "من هو مؤلف نظرية النسبية؟",
        options: ["إسحاق نيوتن", "ألبرت أينشتاين", "نيكولا تيسلا", "جاليليو"],
        correct: 1
    },
    {
        question: "ما هي أكبر جزيرة في العالم؟",
        options: ["مدغشقر", "غرينلاند", "نيوزيلندا", "كوبا"],
        correct: 1
    },
    {
        question: "في أي عام بدأت الحرب العالمية الأولى؟",
        options: ["1912", "1914", "1916", "1918"],
        correct: 1
    },
    {
        question: "ما هي عاصمة إسبانيا؟",
        options: ["برشلونة", "مدريد", "فالنسيا", "إشبيلية"],
        correct: 1
    },
    {
        question: "كم عدد ساعات اليوم؟",
        options: ["22", "23", "24", "25"],
        correct: 2
    },
    {
        question: "ما هو أكثر دولة سكاناً في العالم؟",
        options: ["الهند", "الصين", "الولايات المتحدة", "إندونيسيا"],
        correct: 1
    },
    {
        question: "ما هي عاصمة السويد؟",
        options: ["ستوكهولم", "غوتنبرغ", "مالمو", "أوبسالا"],
        correct: 0
    },
    {
        question: "من هو مكتشف الجاذبية؟",
        options: ["ألبرت أينشتاين", "إسحاق نيوتن", "جاليليو", "كوبرنيكوس"],
        correct: 1
    },
    {
        question: "ما هي عاصمة اليونان؟",
        options: ["أثينا", "ثيسالونيكي", "باترا", "إيراكليون"],
        correct: 0
    },
    {
        question: "كم عدد أيام الأسبوع؟",
        options: ["6", "7", "8", "9"],
        correct: 1
    },
    {
        question: "ما هو أكبر طائر في العالم؟",
        options: ["النسر", "الصقر", "النعامة", "البطريق"],
        correct: 2
    },

    // ========== 51-100: الدول العربية ==========
    {
        question: "ما هي عاصمة المملكة العربية السعودية؟",
        options: ["الرياض", "جدة", "الدمام", "الطائف"],
        correct: 0
    },
    {
        question: "أي بلد يُعرف بأرض الألف وادي؟",
        options: ["العراق", "سوريا", "الأردن", "لبنان"],
        correct: 0
    },
    {
        question: "ما هي عاصمة الإمارات العربية المتحدة؟",
        options: ["دبي", "أبوظبي", "شارجة", "عجمان"],
        correct: 1
    },
    {
        question: "أي دولة عربية تُعرف بالبلد الأخضر؟",
        options: ["المغرب", "تونس", "الجزائر", "ليبيا"],
        correct: 0
    },
    {
        question: "ما هي عاصمة المغرب؟",
        options: ["الرباط", "الدار البيضاء", "فاس", "مراكش"],
        correct: 0
    },
    {
        question: "أي بلد عربي يحتوي على أكبر صحراء في العالم؟",
        options: ["مصر", "السعودية", "الجزائر", "ليبيا"],
        correct: 2
    },
    {
        question: "ما هي عاصمة الأردن؟",
        options: ["عمان", "الزرقاء", "إربد", "العقبة"],
        correct: 0
    },
    {
        question: "أي دولة عربية تُعرف بأرض المليون شهيد؟",
        options: ["لبنان", "العراق", "سوريا", "فلسطين"],
        correct: 3
    },
    {
        question: "ما هي عاصمة لبنان؟",
        options: ["بيروت", "طرابلس", "صيدا", "بعلبك"],
        correct: 0
    },
    {
        question: "أي بلد يحتوي على أعلى قمة في الجزيرة العربية؟",
        options: ["السعودية", "اليمن", "عمان", "الإمارات"],
        correct: 0
    },
    {
        question: "ما هي عاصمة الكويت؟",
        options: ["السالمية", "حولي", "مدينة الكويت", "الجهراء"],
        correct: 2
    },
    {
        question: "أي دولة عربية تُعرف ببلاد الشام؟",
        options: ["مصر", "العراق", "سوريا", "السودان"],
        correct: 2
    },
    {
        question: "ما هي عاصمة قطر؟",
        options: ["الدوحة", "الريان", "الوكرة", "الخور"],
        correct: 0
    },
    {
        question: "أي بلد عربي يُعرف بأرض الحضارات؟",
        options: ["مصر", "العراق", "السعودية", "الأردن"],
        correct: 1
    },
    {
        question: "ما هي عاصمة البحرين؟",
        options: ["المنامة", "الريف", "المحرق", "عيسى"],
        correct: 0
    },
    {
        question: "أي دولة عربية تُعرف ببلاد الفيروز؟",
        options: ["عمان", "اليمن", "الإمارات", "قطر"],
        correct: 0
    },
    {
        question: "ما هي عاصمة عُمان؟",
        options: ["مسقط", "صلالة", "صحار", "نزوى"],
        correct: 0
    },
    {
        question: "أي بلد عربي يحتوي على مدينة البتراء؟",
        options: ["الأردن", "لبنان", "سوريا", "فلسطين"],
        correct: 0
    },
    {
        question: "ما هي عاصمة اليمن؟",
        options: ["صنعاء", "عدن", "تعز", "حديدة"],
        correct: 0
    },
    {
        question: "أي دولة عربية تُعرف بأرض البرتقال؟",
        options: ["تونس", "المغرب", "مصر", "السعودية"],
        correct: 2
    },
    {
        question: "ما هي عاصمة تونس؟",
        options: ["تونس", "صفاقس", "سوسة", "قابس"],
        correct: 0
    },
    {
        question: "أي بلد عربي يُعرف بأرض الزيتون؟",
        options: ["فلسطين", "سوريا", "لبنان", "كل الإجابات صحيحة"],
        correct: 3
    },
    {
        question: "ما هي عاصمة الجزائر؟",
        options: ["الجزائر", "وهران", "قسنطينة", "عنابة"],
        correct: 0
    },
    {
        question: "أي دولة عربية تُعرف ببلاد المغرب؟",
        options: ["تونس", "المغرب", "الجزائر", "ليبيا"],
        correct: 1
    },
    {
        question: "ما هي عاصمة ليبيا؟",
        options: ["طرابلس", "بنغازي", "مصراتة", "سبها"],
        correct: 0
    },
    {
        question: "أي بلد عربي يُعرف بأرض الرمال الذهبية؟",
        options: ["السعودية", "الإمارات", "قطر", "كل الإجابات صحيحة"],
        correct: 3
    },
    {
        question: "ما هي عاصمة السودان؟",
        options: ["الخرطوم", "أم درمان", "بورتسودان", "أطبرة"],
        correct: 0
    },
    {
        question: "أي دولة عربية تُعرف ببلاد النيل؟",
        options: ["مصر", "السودان", "إثيوبيا", "كل الإجابات صحيحة"],
        correct: 3
    },
    {
        question: "ما هي عاصمة سوريا؟",
        options: ["دمشق", "حلب", "حمص", "حماة"],
        correct: 0
    },
    {
        question: "أي بلد عربي يحتوي على أقدم مدينة في العالم؟",
        options: ["دمشق", "القدس", "بابل", "أريحا"],
        correct: 3
    },
    {
        question: "ما هي عاصمة العراق؟",
        options: ["بغداد", "البصرة", "الموصل", "الأنبار"],
        correct: 0
    },
    {
        question: "أي دولة عربية تُعرف بأرض الألف مسجد؟",
        options: ["السعودية", "مصر", "المغرب", "تركيا"],
        correct: 0
    },
    {
        question: "ما هي عاصمة فلسطين؟",
        options: ["القدس", "غزة", "رام الله", "نابلس"],
        correct: 0
    },
    {
        question: "أي بلد عربي يُعرف بأرض الثلج والنار؟",
        options: ["لبنان", "سوريا", "الأردن", "فلسطين"],
        correct: 0
    },
    {
        question: "ما هي عاصمة موريتانيا؟",
        options: ["نواكشوط", "نواذيبو", "رأس الغيمة", "كيهيدي"],
        correct: 0
    },
    {
        question: "أي دولة عربية تُعرف ببلاد الفرسان؟",
        options: ["السعودية", "الإمارات", "قطر", "البحرين"],
        correct: 0
    },
    {
        question: "ما هي عاصمة الصومال؟",
        options: ["مقديشو", "هرجيسا", "بورصعيد", "كيسمايو"],
        correct: 0
    },
    {
        question: "أي بلد عربي يحتوي على أكبر سوق للإبل؟",
        options: ["السعودية", "الإمارات", "قطر", "عمان"],
        correct: 0
    },
    {
        question: "ما هي عاصمة جيبوتي؟",
        options: ["جيبوتي", "علي صبيح", "تاجورة", "أوبوك"],
        correct: 0
    },
    {
        question: "أي دولة عربية تُعرف بأرض الواحات؟",
        options: ["السعودية", "مصر", "الإمارات", "عمان"],
        correct: 1
    },
    {
        question: "ما هي عاصمة جزر القمر؟",
        options: ["موروني", "ميتساميولي", "فومبوني", "موانزا"],
        correct: 0
    },
    {
        question: "أي بلد عربي يُعرف بأرض الذهب واللبان؟",
        options: ["عمان", "اليمن", "السعودية", "الإمارات"],
        correct: 1
    },

    // ========== 101-150: الإسلام والتاريخ الإسلامي ==========
    {
        question: "ما هي القرآن المديني؟",
        options: ["سورة البقرة", "سورة الفاتحة", "سورة الإخلاص", "سورة الناس"],
        correct: 0
    },
    {
        question: "من هو أول خليفة في الإسلام؟",
        options: ["عمر بن الخطاب", "أبو بكر الصديق", "عثمان بن عفان", "علي بن أبي طالب"],
        correct: 1
    },
    {
        question: "في أي شهر نزل القرآن؟",
        options: ["رمضان", "ذو الحجة", "محرم", "رجب"],
        correct: 0
    },
    {
        question: "ما هي أول سورة في القرآن؟",
        options: ["الفاتحة", "البقرة", "آل عمران", "النساء"],
        correct: 0
    },
    {
        question: "كم عدد أركان الإسلام؟",
        options: ["4", "5", "6", "7"],
        correct: 1
    },
    {
        question: "من هو النبي الذي سُمي بالصادق الأمين؟",
        options: ["عيسى عليه السلام", "موسى عليه السلام", "محمد صلى الله عليه وسلم", "إبراهيم عليه السلام"],
        correct: 2
    },
    {
        question: "ما هي أطول سورة في القرآن؟",
        options: ["البقرة", "آل عمران", "النساء", "المائدة"],
        correct: 0
    },
    {
        question: "في أي مدينة هاجر النبي صلى الله عليه وسلم؟",
        options: ["مكة", "المدينة", "الطائف", "يثرب"],
        correct: 1
    },
    {
        question: "ما هي أول معركة في الإسلام؟",
        options: ["بدر", "أحد", "الخندق", "فتح مكة"],
        correct: 0
    },
    {
        question: "كم عدد أبواب الجنة؟",
        options: ["7", "8", "9", "10"],
        correct: 0
    },
    {
        question: "من هو أول من أسلم من النساء؟",
        options: ["عائشة", "خديجة", "فاطمة", "زينب"],
        correct: 1
    },
    {
        question: "ما هي أقصر سورة في القرآن؟",
        options: ["الكوثر", "العصر", "النصر", "المسد"],
        correct: 0
    },
    {
        question: "في أي عام وقعت معركة بدر؟",
        options: ["2 هـ", "3 هـ", "4 هـ", "5 هـ"],
        correct: 0
    },
    {
        question: "من هو أول شهيد في الإسلام؟",
        options: ["عبدالله بن الزبير", "سمرة بن جندب", "عمار بن ياسر", "بلال بن رباح"],
        correct: 2
    },
    {
        question: "ما هي أول مسجد في الإسلام؟",
        options: ["مسجد قباء", "مسجد النبي", "المسجد الحرام", "مسجد الفتح"],
        correct: 0
    },
    {
        question: "كم عدد سور القرآن؟",
        options: ["110", "112", "114", "116"],
        correct: 2
    },
    {
        question: "من هو أول من كتب القرآن؟",
        options: ["زيد بن ثابت", "عثمان بن عفان", "علي بن أبي طالب", "أبي بن كعب"],
        correct: 0
    },
    {
        question: "في أي عام فتحت القسطنطينية؟",
        options: ["1451", "1453", "1455", "1457"],
        correct: 1
    },
    {
        question: "ما هي أول عاصمة للدولة الإسلامية؟",
        options: ["المدينة", "مكة", "الطائف", "اليمن"],
        correct: 0
    },
    {
        question: "من هو آخر من توفي في عهد النبي؟",
        options: ["أبو بكر", "عائشة", "فاطمة", "عبدالله بن عباس"],
        correct: 2
    },
    {
        question: "ما هي سورة الإخلاص؟",
        options: ["قل هو الله أحد", "قل أعوذ برب الفجر", "قل أعوذ برب الناس", "قل يا أيها الكافرون"],
        correct: 0
    },
    {
        question: "في أي عام وقعت معركة اليرموك؟",
        options: ["15 هـ", "16 هـ", "17 هـ", "18 هـ"],
        correct: 0
    },
    {
        question: "من هو أول قائد مسلم غزا القسطنطينية؟",
        options: ["عمر بن الخطاب", "عثمان بن عفان", "معاوية بن أبي سفيان", "عبد الرحمن بن معاوية"],
        correct: 2
    },
    {
        question: "ما هي أول دار للقرآن؟",
        options: ["دار العلقمي", "دار الأرقم", "دار الندوة", "دار الخلافة"],
        correct: 1
    },
    {
        question: "كم عدد أسماء الله الحسنى؟",
        options: ["99", "100", "101", "102"],
        correct: 0
    },
    {
        question: "من هو أول من أذّن في الإسلام؟",
        options: ["بلال بن رباح", "عبدالله بن أم مكتوم", "أبو محذورة", "سهيل بن عمرو"],
        correct: 0
    },
    {
        question: "في أي شهر حُرم القتال؟",
        options: ["رمضان", "ذو القعدة", "محرم", "رجب"],
        correct: 3
    },
    {
        question: "ما هي أول سورة مكية؟",
        options: ["العصر", "الفجر", "الضحى", "الشرح"],
        correct: 1
    },
    {
        question: "من هو أول من جمع القرآن؟",
        options: ["أبو بكر", "عمر بن الخطاب", "عثمان بن عفان", "علي بن أبي طالب"],
        correct: 0
    },
    {
        question: "في أي عام وقعت معركة الحديبية؟",
        options: ["6 هـ", "7 هـ", "8 هـ", "9 هـ"],
        correct: 0
    },
    {
        question: "ما هي أول غزوة في الإسلام؟",
        options: ["بدر", "أحد", "الأبواء", "بوات"],
        correct: 2
    },
    {
        question: "من هو أول من بنى المسجد الحرام؟",
        options: ["إبراهيم عليه السلام", "إسماعيل عليه السلام", "قريش", "عبد المطلب"],
        correct: 0
    },
    {
        question: "كم عدد الآيات في القرآن؟",
        options: ["6000", "6236", "7000", "8000"],
        correct: 1
    },
    {
        question: "في أي عام فتحت مكة؟",
        options: ["8 هـ", "9 هـ", "10 هـ", "11 هـ"],
        correct: 0
    },
    {
        question: "من هو أول من صلى في الكعبة؟",
        options: ["إبراهيم عليه السلام", "محمد صلى الله عليه وسلم", "أبو بكر", "عمر"],
        correct: 0
    },
    {
        question: "ما هي سورة الإسراء؟",
        options: ["سورة الإسراء والمعراج", "سورة الإسراء", "سورة بني إسرائيل", "كل الإجابات صحيحة"],
        correct: 3
    },
    {
        question: "من هو أول شاعر في الإسلام؟",
        options: ["حسان بن ثابت", "كعب بن زهير", "عبدالله بن رواحة", "النابغة الذبياني"],
        correct: 0
    },
    {
        question: "في أي عام وقعت معركة الخندق؟",
        options: ["5 هـ", "6 هـ", "7 هـ", "8 هـ"],
        correct: 0
    },
    {
        question: "ما هي أول آية نزلت؟",
        options: ["اقرأ باسم ربك", "يا أيها المل", "وَالْعَصْرِ", "الْحَمْدُ لِلَّهِ"],
        correct: 0
    },
    {
        question: "من هو أول من حج على الإسلام؟",
        options: ["أبو بكر", "عمر", "عثمان", "علي"],
        correct: 0
    },
    {
        question: "كم عدد ركعات صلاة الجمعة؟",
        options: ["2", "3", "4", "5"],
        correct: 0
    },
    {
        question: "في أي شهر يُحرم الصيد؟",
        options: ["رمضان", "ذو القعدة", "ذو الحجة", "محرم"],
        correct: 1
    },
    {
        question: "ما هي أول دار في مكة؟",
        options: ["دار العلقمي", "دار الأرقم", "دار الندوة", "دار الخلافة"],
        correct: 1
    },

    // ========== 151-200: العلوم والتكنولوجيا ==========
    {
        question: "ما هي العنصر الأساسي للماء؟",
        options: ["الأكسجين", "الهيدروجين", "الكربون", "النيتروجين"],
        correct: 1
    },
    {
        question: "من هو عالم الفيزياء الشهير؟",
        options: ["ألبرت أينشتاين", "إسحاق نيوتن", "جاليليو جاليلي", "كل الإجابات صحيحة"],
        correct: 3
    },
    {
        question: "ما هي كوكبة الشمس؟",
        options: ["الأرض", "القمر", "المريخ", "الزهرة"],
        correct: 0
    },
    {
        question: "كم عدد الكواكب في المجموعة الشمسية؟",
        options: ["7", "8", "9", "10"],
        correct: 1
    },
    {
        question: "ما هي وحدة قياس الطاقة الكهربائية؟",
        options: ["الأمبير", "الفولت", "الواط", "الجول"],
        correct: 3
    },
    {
        question: "من هو مخترع المصباح الكهربائي؟",
        options: ["توماس إديسون", "نيكولا تيسلا", "ألكسندر بيل", "جيمس وات"],
        correct: 0
    },
    {
        question: "ما هي العملية التي تحول الطعام إلى طاقة؟",
        options: ["التمثيل الضوئي", "الهضم", "التنفس", "التبخر"],
        correct: 1
    },
    {
        question: "كم عدد ألوان قوس قزح؟",
        options: ["6", "7", "8", "9"],
        correct: 1
    },
    {
        question: "ما هي سرعة الضوء؟",
        options: ["300,000 كم/ث", "150,000 كم/ث", "500,000 كم/ث", "1,000,000 كم/ث"],
        correct: 0
    },
    {
        question: "من هو أبو الطب؟",
        options: ["هيبوقراطس", "جالينوس", "أبقراط", "ابن سينا"],
        correct: 0
    },
    {
        question: "ما هي أول شركة تكنولوجيا في العالم؟",
        options: ["IBM", "Microsoft", "Apple", "Google"],
        correct: 0
    },
    {
        question: "من هو مؤسس فيسبوك؟",
        options: ["إيلون ماسك", "مارك زوكربيرج", "جيف بيزوس", "تيم كوك"],
        correct: 1
    },
    {
        question: "ما هو أول هاتف ذكي؟",
        options: ["iPhone", "BlackBerry", "Nokia", "Samsung"],
        correct: 1
    },
    {
        question: "كم سعة القرص الصلب الأول؟",
        options: ["5 ميجابايت", "10 ميجابايت", "50 ميجابايت", "100 ميجابايت"],
        correct: 0
    },
    {
        question: "ما هي لغة البرمجة الأولى؟",
        options: ["Python", "Java", "C", "Fortran"],
        correct: 3
    },
    {
        question: "من هو مخترع الويب؟",
        options: ["تيم بيرنرز لي", "بيل جيتس", "ستيف جوبز", "لاري بيج"],
        correct: 0
    },
    {
        question: "ما هي أول سيارة كهربائية؟",
        options: ["Tesla Model S", "Nissan Leaf", "Chevy Volt", "Baker Electric"],
        correct: 3
    },
    {
        question: "كم عدد الأزرار في لوحة المفاتيح؟",
        options: ["100", "101", "102", "103"],
        correct: 1
    },
    {
        question: "ما هو أسرع كمبيوتر في العالم؟",
        options: ["Supercomputer", "Quantum Computer", "Mainframe", "Personal Computer"],
        correct: 1
    },
    {
        question: "من هو أغنى رجل في العالم؟",
        options: ["إيلون ماسك", "جيف بيزوس", "بيل جيتس", "تغير حسب الوقت"],
        correct: 3
    },
    {
        question: "ما هي وحدة قياس السرعة؟",
        options: ["متر/ثانية", "كيلو متر/ساعة", "كل الإجابات صحيحة", "السرعة"],
        correct: 2
    },
    {
        question: "من هو مخترع الهاتف؟",
        options: ["توماس إديسون", "ألكسندر غراهام بيل", "نيكولا تيسلا", "جيمس وات"],
        correct: 1
    },
    {
        question: "ما هي أول لغة برمجة حديثة؟",
        options: ["C", "Java", "Python", "JavaScript"],
        correct: 0
    },
    {
        question: "كم عدد البايت في كيلو بايت؟",
        options: ["512", "1024", "2048", "4096"],
        correct: 1
    },
    {
        question: "ما هو أول برنامج في العالم؟",
        options: ["Word", "Excel", "Ada", "Fortran"],
        correct: 2
    },
    {
        question: "من هو مؤسس شركة أمازون؟",
        options: ["جيف بيزوس", "إيلون ماسك", "بيل جيتس", "مارك زوكربيرج"],
        correct: 0
    },
    {
        question: "ما هي أول لغة ويب؟",
        options: ["HTML", "CSS", "JavaScript", "PHP"],
        correct: 0
    },
    {
        question: "كم عدد الألوان في الشاشة؟",
        options: ["16 مليون", "256", "16", "65,536"],
        correct: 0
    },
    {
        question: "ما هو أول جهاز كمبيوتر شخصي؟",
        options: ["IBM PC", "Apple II", "Commodore 64", "Amiga"],
        correct: 1
    },
    {
        question: "من هو مخترع الراديو؟",
        options: ["ماركوني", "تيسلا", "إديسون", "فاراداي"],
        correct: 0
    },
    {
        question: "ما هي أول قمر صناعي؟",
        options: ["سفوتنيك 1", "أبولو 11", "فوياجر", "هابيل"],
        correct: 0
    },
    {
        question: "كم سرعة المعالج الأول؟",
        options: ["1 ميجاهرز", "4 ميجاهرز", "8 ميجاهرز", "16 ميجاهرز"],
        correct: 0
    },
    {
        question: "ما هو أول نظام تشغيل؟",
        options: ["Windows", "MS-DOS", "UNIX", "CP/M"],
        correct: 2
    },
    {
        question: "من هو مؤسس شركة تسلا؟",
        options: ["إيلون ماسك", "جيف بيزوس", "بيل جيتس", "ستيف جوبز"],
        correct: 0
    },
    {
        question: "ما هي أول شبكة إنترنت؟",
        options: ["ARPANET", "Internet", "WWW", "TCP/IP"],
        correct: 0
    },
    {
        question: "كم عدد المستخدمين الأوائل للإنترنت؟",
        options: ["1000", "5000", "10000", "50000"],
        correct: 1
    },
    {
        question: "ما هو أول بريد إلكتروني؟",
        options: ["1971", "1980", "1985", "1990"],
        correct: 0
    },
    {
        question: "من هو مخترع التليفزيون؟",
        options: ["جون لوجي بيرد", "فيليو فارنزورث", "كل الإجابات صحيحة", "والتر براتن"],
        correct: 2
    },
    {
        question: "ما هي أول ذاكرة؟",
        options: ["RAM", "ROM", "Magnetic Core", "Floppy Disk"],
        correct: 2
    },
    {
        question: "كم سعة أول قرص مضغوط؟",
        options: ["100 ميجابايت", "650 ميجابايت", "700 ميجابايت", "4.7 جيجابايت"],
        correct: 1
    },
    {
        question: "ما هو أول لعبة فيديو؟",
        options: ["Pong", "Spacewar!", "Pac-Man", "Tetris"],
        correct: 1
    },
    {
        question: "من هو مؤسس شركة أوراكل؟",
        options: ["لاري إليسون", "بيل جيتس", "ستيف جوبز", "إيلون ماسك"],
        correct: 0
    },

    // ========== 201-250: التاريخ والحضارات ==========
    {
        question: "في أي عام سقطت القسطنطينية؟",
        options: ["1453", "1454", "1452", "1451"],
        correct: 0
    },
    {
        question: "من هو قائد الثورة الفرنسية الشهير؟",
        options: ["نابليون بونابرت", "لويس السادس عشر", "ماري أنطوانيت", "روبسبيير"],
        correct: 0
    },
    {
        question: "ما هي الحرب العالمية الثانية؟",
        options: ["1939-1945", "1914-1918", "1950-1953", "1967-1973"],
        correct: 0
    },
    {
        question: "من هو أول رئيس للاتحاد السوفيتي؟",
        options: ["لينين", "ستالين", "خروتشوف", "بريجنيف"],
        correct: 0
    },
    {
        question: "أين وقعت معركة واترلو؟",
        options: ["فرنسا", "بلجيكا", "ألمانيا", "هولندا"],
        correct: 1
    },
    {
        question: "من هو مؤسس الإمبراطورية المغولية؟",
        options: ["جنكيز خان", "هولاكو", "تيمورلنك", "كوبلاي خان"],
        correct: 0
    },
    {
        question: "ما هي أقدم حضارة في العالم؟",
        options: ["الحضارة المصرية", "الحضارة السومرية", "الحضارة الصينية", "الحضارة الهندية"],
        correct: 1
    },
    {
        question: "من هو مكتشف أمريكا الجنوبية؟",
        options: ["كريستوفر كولومبوس", "أميركو فسبوتشي", "فرديناند ماجلان", "فرنسيسكو بيزارو"],
        correct: 1
    },
    {
        question: "ما هي العاصمة القديمة لإمبراطورية الأزتك؟",
        options: ["تيوتيهواكان", "تينوتشتيتلان", "تشيتشن إيتزا", "بالينكي"],
        correct: 1
    },
    {
        question: "من هو آخر فرعون لمصر القديمة؟",
        options: ["رمسيس الثاني", "تحتمس الثالث", "كليوباترا السابعة", "توت عنخ آمون"],
        correct: 2
    },
    {
        question: "أين وقعت معركة ماراثون؟",
        options: ["اليونان", "روما", "مصر", "فارس"],
        correct: 0
    },
    {
        question: "من هو موحد المملكة العربية السعودية؟",
        options: ["عبدالعزيز آل سعود", "فيصل بن عبدالعزيز", "سعود بن عبدالعزيز", "خالد بن عبدالعزيز"],
        correct: 0
    },
    {
        question: "ما هي أقدم جامعة في العالم؟",
        options: ["جامعة القرويين", "جامعة الأزهر", "جامعة بولونيا", "جامعة أكسفورد"],
        correct: 0
    },
    {
        question: "من هو مؤسس الدين البوذي؟",
        options: ["كونفوشيوس", "بوذا", "مهافيرا", "زرادشت"],
        correct: 1
    },
    {
        question: "ما هي الحرب التي أدت إلى سقوط الإمبراطورية العثمانية؟",
        options: ["الحرب العالمية الأولى", "الحرب العالمية الثانية", "حرب القرم", "حرب البلقان"],
        correct: 0
    },
    {
        question: "من هو مكتشف قبر توت عنخ آمون؟",
        options: ["هاوارد كارتر", "فلايندرز بيتري", "جون غاردنر ويلكنسون", "جين فرانسوا شامبليون"],
        correct: 0
    },
    {
        question: "ما هي أقدم مدينة مأهولة باستمرار في العالم؟",
        options: ["دمشق", "أثينا", "روما", "بيروت"],
        correct: 0
    },
    {
        question: "من هو أول إمبراطور روماني؟",
        options: ["يوليوس قيصر", "أغسطس", "نيرون", "كاليجولا"],
        correct: 1
    },
    {
        question: "أين وقعت معركة القادسية؟",
        options: ["العراق", "سوريا", "مصر", "إيران"],
        correct: 0
    },
    {
        question: "من هو موحد إيطاليا الحديثة؟",
        options: ["جيوسيبي غاريبالدي", "فيكتور إيمانويل الثاني", "كونت كافور", "جوزيبي مازيني"],
        correct: 0
    },
    {
        question: "ما هي أقدم لغة مكتوبة؟",
        options: ["اللغة المصرية", "اللغة السومرية", "اللغة الصينية", "اللغة اليونانية"],
        correct: 1
    },
    {
        question: "من هو مكتشف حجر رشيد؟",
        options: ["نابليون بونابرت", "جان فرانسوا شامبليون", "بيير فرانسوا بوشار", "هوارد كارتر"],
        correct: 2
    },
    {
        question: "ما هي الإمبراطورية التي حكمت أكبر مساحة في التاريخ؟",
        options: ["الإمبراطورية البريطانية", "الإمبراطورية المغولية", "الإمبراطورية الرومانية", "الإمبراطورية الروسية"],
        correct: 0
    },
    {
        question: "من هو مؤسس الإمبراطورية الفارسية الأخمينية؟",
        options: ["كورش الكبير", "دارا الأول", "خامنئي", "أردشير الأول"],
        correct: 0
    },
    {
        question: "ما هي أقدم ديمقراطية في العالم؟",
        options: ["اليونان القديمة", "روما القديمة", "الهند القديمة", "الصين القديمة"],
        correct: 0
    },
    {
        question: "من هو موحد ألمانيا الحديثة؟",
        options: ["أوتو فون بسمارك", "فيلهلم الأول", "فيلهلم الثاني", "فريدريك الكبير"],
        correct: 0
    },
    {
        question: "ما هي الحرب التي أدت إلى توحيد إيطاليا؟",
        options: ["حرب القرم", "حرب الاستقلال الإيطالية", "حرب النمسا-بروسيا", "حرب فرنسا-بروسيا"],
        correct: 1
    },
    {
        question: "من هو آخر قيصر لروسيا؟",
        options: ["نيكولاس الأول", "ألكسندر الثاني", "نيكولاس الثاني", "ألكسندر الثالث"],
        correct: 2
    },
    {
        question: "ما هي أقدم دولة في العالم؟",
        options: ["مصر", "الصين", "إيران", "اليابان"],
        correct: 3
    },
    {
        question: "من هو مؤسس الإمبراطورية البيزنطية؟",
        options: ["قسطنطين الأول", "جستنيان الأول", "هيراكليوس", "ليو الثالث"],
        correct: 0
    },
    {
        question: "ما هي الحرب التي أدت إلى توحيد ألمانيا؟",
        options: ["حرب النمسا-بروسيا", "حرب فرنسا-بروسيا", "حرب السبع سنوات", "حرب الثلاثين عاماً"],
        correct: 1
    },
    {
        question: "من هو موحد الهند الحديثة؟",
        options: ["مهاتما غاندي", "جواهر لال نهرو", "سوراجيا براكاش باتيل", "ساردار باتيل"],
        correct: 3
    },
    {
        question: "ما هي أقدم دولة ديمقراطية في العالم؟",
        options: ["الولايات المتحدة", "سويسرا", "المملكة المتحدة", "فرنسا"],
        correct: 1
    },
    {
        question: "من هو مؤسس الإمبراطورية العثمانية؟",
        options: ["عثمان الأول", "أورخان غازي", "مراد الأول", "بايزيد الأول"],
        correct: 0
    },
    {
        question: "ما هي الحرب التي أدت إلى استقلال الولايات المتحدة؟",
        options: ["حرب الاستقلال الأمريكية", "حرب 1812", "الحرب الأهلية الأمريكية", "حرب الهند الفرنسية"],
        correct: 0
    },
    {
        question: "من هو موحد البرازيل الحديثة؟",
        options: ["بيدرو الأول", "بيدرو الثاني", "جواو السادس", "تيريزا كريستينا"],
        correct: 0
    },
    {
        question: "ما هي أقدم جمهورية في العالم؟",
        options: ["سان مارينو", "سويسرا", "الولايات المتحدة", "فرنسا"],
        correct: 0
    },
    {
        question: "من هو مؤسس الإمبراطورية الماورية في الهند؟",
        options: ["بابور", "همايون", "أكبر", "شاه جهان"],
        correct: 0
    },
    {
        question: "ما هي الحرب التي أدت إلى سقوط الإمبراطورية الرومانية الغربية؟",
        options: ["غزو الهون", "غزو القوط الغربيين", "غزو الفاندال", "غزو البربر"],
        correct: 1
    },
    {
        question: "من هو موحد كندا الحديثة؟",
        options: ["جون أ. ماكدونالد", "جورج إتيان كارتييه", "ويلفريد لورييه", "روبرت بوردن"],
        correct: 0
    },
    {
        question: "ما هي أقدم دولة في الأمريكتين؟",
        options: ["الولايات المتحدة", "كندا", "المكسيك", "البرازيل"],
        correct: 2
    },
    {
        question: "من هو مؤسس الإمبراطورية الإنكا؟",
        options: ["باشاراكوتي", "فيراكوتشا", "بوتشاكوتي", "أتاهوالبا"],
        correct: 2
    },
    {
        question: "ما هي الحرب التي أدت إلى توحيد الصين؟",
        options: ["حرب الدول المتحاربة", "حرب تشين ضد الدول الست", "حرب هان ضد شيونغنو", "حرب تانغ ضد التبت"],
        correct: 1
    },
    {
        question: "من هو موحد اليابان الحديثة؟",
        options: ["أودا نوبوناغا", "توكوغاوا إيهاسو", "تويوتومي هيديوشي", "توكوغاوا إييسو"],
        correct: 1
    },
    {
        question: "ما هي أقدم دولة في إفريقيا؟",
        options: ["مصر", "إثيوبيا", "المغرب", "تونس"],
        correct: 1
    },
    {
        question: "من هو مؤسس الإمبراطورية المغولية في الهند؟",
        options: ["بابور", "همايون", "أكبر", "أورنكزيب"],
        correct: 0
    },
    {
        question: "ما هي الحرب التي أدت إلى استقلال الهند؟",
        options: ["حرب الاستقلال الهندية", "حركة عدم التعاون", "حركة الملح", "حملة كويس"],
        correct: 0
    },
    {
        question: "من هو موحد أستراليا الحديثة؟",
        options: ["هنري باركس", "إدموند باركر", "ألفرد ديكين", "جون كيرتن"],
        correct: 0
    },
    {
        question: "ما هي أقدم دولة في أوروبا؟",
        options: ["اليونان", "إيطاليا", "فرنسا", "سان مارينو"],
        correct: 3
    },
    {
        question: "من هو مؤسس الإمبراطورية الفرنسية الأولى؟",
        options: ["نابليون بونابرت", "لويس السادس عشر", "شارل العاشر", "لويس فيليب"],
        correct: 0
    },
    {
        question: "ما هي الحرب التي أدت إلى توحيد إيطاليا؟",
        options: ["حرب الاستقلال الإيطالية", "حرب القرم", "حرب النمسا-بروسيا", "حرب فرنسا-بروسيا"],
        correct: 0
    },
    {
        question: "من هو موحد جنوب إفريقيا الحديثة؟",
        options: ["سيسيل رودس", "بول كروجر", "يان سموتس", "لويس بوثا"],
        correct: 3
    },
    {
        question: "ما هي أقدم دولة في آسيا؟",
        options: ["الصين", "اليابان", "إيران", "كوريا"],
        correct: 1
    },
    {
        question: "من هو مؤسس الإمبراطورية الروسية؟",
        options: ["إيفان الرهيب", "بيتر الأكبر", "كاترين العظيمة", "ألكسندر الأول"],
        correct: 1
    },
    {
        question: "ما هي الحرب التي أدت إلى استقلال البرازيل؟",
        options: ["حرب الاستقلال البرازيلية", "حرب فرنسا-بروسيا", "حرب النمسا-بروسيا", "حرب القرم"],
        correct: 0
    },
    {
        question: "من هو موحد الأرجنتين الحديثة؟",
        options: ["خوسيه دي سان مارتين", "مانويل بيلغرا诺", "خوان مانويل دي روساس", "بارتولومي ميتري"],
        correct: 2
    },
    {
        question: "ما هي أقدم دولة في أوقيانوسيا؟",
        options: ["أستراليا", "نيوزيلندا", "بابوا غينيا الجديدة", "جزر سليمان"],
        correct: 1
    },
    {
        question: "من هو مؤسس الإمبراطورية الإسبانية؟",
        options: ["فرديناند الثاني", "إيزابيلا الأولى", "كارلوس الأول", "فيليب الثاني"],
        correct: 2
    },
    {
        question: "ما هي الحرب التي أدت إلى استقلال المكسيك؟",
        options: ["حرب الاستقلال المكسيكية", "حرب الإصلاح", "الثورة المكسيكية", "حرب التكساس"],
        correct: 0
    },
    {
        question: "من هو موحد تشيلي الحديثة؟",
        options: ["برناردو أوهيغينز", "خوسيه ميغيل كاريرا", "دييغو بورتاليس", "مانويل بوليفار"],
        correct: 0
    },
    {
        question: "ما هي أقدم دولة في الشرق الأوسط؟",
        options: ["مصر", "إيران", "تركيا", "العراق"],
        correct: 1
    },
    {
        question: "من هو مؤسس الإمبراطورية البرتغالية؟",
        options: ["هنري الملاح", "أفونسو الخامس", "مانويل الأول", "جون الأول"],
        correct: 3
    },
    {
        question: "ما هي الحرب التي أدت إلى استقلال كندا؟",
        options: ["حرب 1812", "تمردات 1837", "الكونفدرالية الكندية", "حرب الانفصال الأمريكية"],
        correct: 2
    },
    {
        question: "من هو موحد بيرو الحديثة؟",
        options: ["خوسيه دي سان مارتين", "سيمون بوليفار", "أندريس دي سانتا كروز", "رامون كاستيلا"],
        correct: 0
    },
    {
        question: "ما هي أقدم دولة في الكاريبي؟",
        options: ["كوبا", "هايتي", "جامايكا", "جمهورية الدومينيكان"],
        correct: 1
    },
    {
        question: "من هو مؤسس الإمبراطورية الهولندية؟",
        options: ["فيليم أورانج", "موريس ناسو", "فريدريك هنريك", "فيليم الثاني"],
        correct: 0
    },
    {
        question: "ما هي الحرب التي أدت إلى استقلال الولايات المتحدة؟",
        options: ["حرب الاستقلال الأمريكية", "حرب 1812", "الحرب الأهلية الأمريكية", "حرب الهند الفرنسية"],
        correct: 0
    },
    {
        question: "من هو موحد فنزويلا الحديثة؟",
        options: ["سيمون بوليفار", "فرانسيسكو دي ميراندا", "خوسيه أنطونيو بايز", "أنطونيو غوزمان بلانكو"],
        correct: 0
    },
    {
        question: "ما هي أقدم دولة في أمريكا الجنوبية؟",
        options: ["البرازيل", "الأرجنتين", "بيرو", "كولومبيا"],
        correct: 2
    },
    {
        question: "من هو مؤسس الإمبراطورية البريطانية؟",
        options: ["هنري الثامن", "إليزابيث الأولى", "جيمس الأول", "تشارلز الأول"],
        correct: 1
    },
    {
        question: "ما هي الحرب التي أدت إلى استقلال كولومبيا؟",
        options: ["حرب الاستقلال الكولومبية", "حرب المائة يوم", "حرب الألف يوم", "حرب المحيط الهادئ"],
        correct: 0
    },
    {
        question: "من هو موحد إكوادور الحديثة؟",
        options: ["خوان خوسيه فلوريس", "فينسينتي روكافويرتي", "غابرييل غارثيا موريللو", "إيسيدورو أياورو"],
        correct: 0
    },
    {
        question: "ما هي أقدم دولة في أمريكا الشمالية؟",
        options: ["الولايات المتحدة", "كندا", "المكسيك", "غرينلاند"],
        correct: 2
    },
    {
        question: "من هو مؤسس الإمبراطورية الألمانية؟",
        options: ["أوتو فون بسمارك", "فيلهلم الأول", "فيلهلم الثاني", "فريدريك الثالث"],
        correct: 0
    },
    {
        question: "ما هي الحرب التي أدت إلى استقلال الأوروغواي؟",
        options: ["حرب سيسبلاتينا", "حرب الترينتا", "حرب الأشقاء", "حرب المحيط الهادئ"],
        correct: 0
    },
    {
        question: "من هو موحد باراغواي الحديثة؟",
        options: ["خوسيه غاسبار رودريغيز دي فرانثيا", "كارلوس أنطونيو لوبيز", "فرانثيسكو سولانو لوبيز", "خوسيه فيليكس إستيغاريبيا"],
        correct: 0
    },
    {
        question: "ما هي أقدم دولة في أمريكا الوسطى؟",
        options: ["غواتيمالا", "هندوراس", "السلفادور", "نيكاراغوا"],
        correct: 0
    },
    {
        question: "من هو مؤسس الإمبراطورية النمساوية؟",
        options: ["فرانتس الأول", "ماريا تيريزا", "جوزيف الثاني", "فرانتس جوزيف الأول"],
        correct: 0
    },
    {
        question: "ما هي الحرب التي أدت إلى استقلال كوستاريكا؟",
        options: ["حرب الاستقلال الكوستاريكية", "حرب الورع", "حرب 1856", "حرب الألف يوم"],
        correct: 0
    },
    {
        question: "من هو موحد بنما الحديثة؟",
        options: ["مانويل أمادور غيريرو", "بيليساريو بوراس", "أرنولفو أرياس", "أوكتافيو مينديتا"],
        correct: 0
    },
    {
        question: "ما هي أقدم دولة في جنوب شرق آسيا؟",
        options: ["فيتنام", "تايلاند", "ميانمار", "كمبوديا"],
        correct: 1
    },
    {
        question: "من هو مؤسس الإمبراطورية العثمانية؟",
        options: ["عثمان الأول", "أورخان غازي", "مراد الأول", "بايزيد الأول"],
        correct: 0
    },
    {
        question: "ما هي الحرب التي أدت إلى استقلال الفلبين؟",
        options: ["حرب الاستقلال الفلبينية", "حرب الفلبين-الولايات المتحدة", "حرب المحيط الهادئ", "ثورة الشعب"],
        correct: 0
    },
    {
        question: "من هو موحد إندونيسيا الحديثة؟",
        options: ["سوكرنو", "سوهارتو", "محمد حatta", "سوتومو"],
        correct: 0
    },
    {
        question: "ما هي أقدم دولة في شرق آسيا؟",
        options: ["الصين", "اليابان", "كوريا", "فيتنام"],
        correct: 1
    },
    {
        question: "من هو مؤسس الإمبراطورية الصينية؟",
        options: ["تشين شي هوانغ", "هان وو دي", "تانغ تايزونغ", "سونغ تايزو"],
        correct: 0
    },
    {
        question: "ما هي الحرب التي أدت إلى استقلال ماليزيا؟",
        options: ["حرب الطوارئ الماليزية", "أزمة سنغافورة", "حرب المحيط الهادئ", "ثورة 13 مايو"],
        correct: 0
    },
    {
        question: "من هو موحد سنغافورة الحديثة؟",
        options: ["لي كوان يو", "غوه تشوك تونغ", "سري راما كريشنا", "يوجين لاي"],
        correct: 0
    },
    {
        question: "ما هي أقدم دولة في جنوب آسيا؟",
        options: ["الهند", "باكستان", "سريلانكا", "نيبال"],
        correct: 2
    },
    {
        question: "من هو مؤسس الإمبراطورية الهندية المغولية؟",
        options: ["بابور", "همايون", "أكبر", "أورنكزيب"],
        correct: 0
    },
    {
        question: "ما هي الحرب التي أدت إلى استقلال باكستان؟",
        options: ["حرب الاستقلال الباكستانية", "تقسيم الهند", "حرب 1947", "حرب 1965"],
        correct: 1
    },
    {
        question: "من هو موحد بنغلاديش الحديثة؟",
        options: ["شيخ مجibur رحمن", "ضياء الرحمن", "حسين محمد إرشاد", "شيخ حسيبة واجد"],
        correct: 0
    },
    {
        question: "ما هي أقدم دولة في وسط آسيا؟",
        options: ["أوزبكستان", "كازاخستان", "قيرغيزستان", "طاجيكستان"],
        correct: 0
    },
    {
        question: "من هو مؤسس الإمبراطورية المغولية؟",
        options: ["جنكيز خان", "هولاكو", "تيمورلنك", "كوبلاي خان"],
        correct: 0
    },
    {
        question: "ما هي الحرب التي أدت إلى استقلال كازاخستان؟",
        options: ["حرب الاستقلال الكازاخستانية", "تفكك الاتحاد السوفيتي", "تمرد 1916", "حرب القيرغيز"],
        correct: 1
    },
    {
        question: "من هو موحد أوزبكستان الحديثة؟",
        options: ["إسلام كريموف", "شافكات ميرضيائيف", "عبد الله أريبوف", "نصر الدين كوميلوف"],
        correct: 0
    },
    {
        question: "ما هي أقدم دولة في شمال آسيا؟",
        options: ["روسيا", "منغوليا", "كازاخستان", "أوزبكستان"],
        correct: 1
    },
    {
        question: "من هو مؤسس الإمبراطورية الروسية؟",
        options: ["إيفان الرهيب", "بيتر الأكبر", "كاترين العظيمة", "ألكسندر الأول"],
        correct: 1
    },
    {
        question: "ما هي الحرب التي أدت إلى استقلال منغوليا؟",
        options: ["حرب الاستقلال المنغولية", "ثورة 1911", "حرب المحيط الهادئ", "حرب روسيا-اليابان"],
        correct: 0
    },
    {
        question: "من هو موحد منغوليا الحديثة؟",
        options: ["سوكهباتار", "غندن", "تشويبالسامبو", "تسندن"],
        correct: 0
    },
    {
        question: "ما هي أقدم دولة في غرب آسيا؟",
        options: ["إيران", "تركيا", "العراق", "سوريا"],
        correct: 0
    },
    {
        question: "من هو مؤسس الإمبراطورية الفارسية الأخمينية؟",
        options: ["كورش الكبير", "دارا الأول", "خامنئي", "أردشير الأول"],
        correct: 0
    },
    {
        question: "ما هي الحرب التي أدت إلى استقلال تركيا؟",
        options: ["حرب الاستقلال التركية", "حرب البلقان", "الحرب العالمية الأولى", "حرب القرم"],
        correct: 0
    },
    {
        question: "من هو موحد تركيا الحديثة؟",
        options: ["مصطفى كمال أتاتورك", "إسماعيل أنور", "فؤاد باشا", "رفعت باشا"],
        correct: 0
    },
    {
        question: "ما هي أقدم دولة في جنوب غرب آسيا؟",
        options: ["اليمن", "عمان", "الإمارات", "قطر"],
        correct: 0
    },
    {
        question: "من هو مؤسس الإمبراطورية العمانية؟",
        options: ["ناصر بن مرشد", "سلطان بن سيف", "سعيد بن سلطان", "قابوس بن سعيد"],
        correct: 0
    },
    {
        question: "ما هي الحرب التي أدت إلى استقلال اليمن؟",
        options: ["حرب الاستقلال اليمنية", "ثورة 26 سبتمبر", "حرب 1994", "حرب 2015"],
        correct: 0
    },
    {
        question: "من هو موحد اليمن الحديثة؟",
        options: ["علي عبد الله صالح", "عبد ربه منصور هادي", "علي محسن الأحمر", "عبد الملك الحوثي"],
        correct: 0
    },
    {
        question: "ما هي أقدم دولة في شمال إفريقيا؟",
        options: ["مصر", "ليبيا", "تونس", "الجزائر"],
        correct: 0
    },
    {
        question: "من هو مؤسس الدولة الفاطمية؟",
        options: ["عبيد الله المهدي", "المعز لدين الله", "العزيز بالله", "الحاكم بأمر الله"],
        correct: 0
    },
    {
        question: "ما هي الحرب التي أدت إلى استقلال ليبيا؟",
        options: ["حرب الاستقلال الليبية", "ثورة الفاتح", "حرب 2011", "حرب تشاد-ليبيا"],
        correct: 0
    },
    {
        question: "من هو موحد ليبيا الحديثة؟",
        options: ["إدريس الأول", "معمر القذافي", "عبد الفتاح يونس", "محمود جبريل"],
        correct: 0
    },
    {
        question: "ما هي أقدم دولة في غرب إفريقيا؟",
        options: ["نيجيريا", "غانا", "ساحل العاج", "مالي"],
        correct: 3
    },
    {
        question: "من هو مؤسس إمبراطورية مالي؟",
        options: ["سوندياتا كيتا", "مانسا موسى", "سليمان", "ماغان كونكاتي"],
        correct: 0
    },
    {
        question: "ما هي الحرب التي أدت إلى استقلال نيجيريا؟",
        options: ["حرب الاستقلال النيجيرية", "حرب بيافرا", "تمرد مايدوغي", "حرب المحيط الأطلسي"],
        correct: 0
    },
    {
        question: "من هو موحد نيجيريا الحديثة؟",
        options: ["نناميدي أزيكيوي", "أحمدو بيلو", "أوبافيمي أوولوو", "أحمدو بابا"],
        correct: 0
    },
    {
        question: "ما هي أقدم دولة في وسط إفريقيا؟",
        options: ["تشاد", "الكاميرون", "جمهورية إفريقيا الوسطى", "الكونغو"],
        correct: 0
    },
    {
        question: "من هو مؤسس إمبراطورية الكونغو؟",
        options: ["نيمي لو نيمي", "أفونسو الأول", "بيدرو الرابع", "أنطونيو الأول"],
        correct: 0
    },
    {
        question: "ما هي الحرب التي أدت إلى استقلال تشاد؟",
        options: ["حرب الاستقلال التشادية", "حرب تشاد-ليبيا", "حرب تشاد-نيجيريا", "حرب تشاد-السودان"],
        correct: 0
    },
    {
        question: "من هو موحد تشاد الحديثة؟",
        options: ["فرانسوا تومبالباي", "هيسيني هابري", "إدريس ديبي", "محمد ديبي"],
        correct: 0
    },
    {
        question: "ما هي أقدم دولة في شرق إفريقيا؟",
        options: ["إثيوبيا", "كينيا", "تنزانيا", "أوغندا"],
        correct: 0
    },
    {
        question: "من هو مؤسس إمبراطورية أكسوم؟",
        options: ["زوسكاليس", "عزانا", "كاليب", "أرماه"],
        correct: 0
    },
    {
        question: "ما هي الحرب التي أدت إلى استقلال كينيا؟",
        options: ["حرب ماو ماو", "حرب الاستقلال الكينية", "حرب كينيا-أوغندا", "حرب كينيا-تنزانيا"],
        correct: 0
    },
    {
        question: "من هو موحد كينيا الحديثة؟",
        options: ["جومو كينياتا", "توم مبويا", "أوهورو كينياتا", "دانيال أراب موي"],
        correct: 0
    },
    {
        question: "ما هي أقدم دولة في جنوب إفريقيا؟",
        options: ["جنوب إفريقيا", "ناميبيا", "بوتسوانا", "ليسوتو"],
        correct: 3
    },
    {
        question: "من هو مؤسس مملكة ليسوتو؟",
        options: ["موشوشو الأول", "موشوشو الثاني", "ليتسي الثالث", "سيسو II"],
        correct: 0
    },
    {
        question: "ما هي الحرب التي أدت إلى استقلال جنوب إفريقيا؟",
        options: ["حرب البوير", "حرب الاستقلال الجنوب إفريقية", "حرب جنوب إفريقيا-أنغولا", "حرب جنوب إفريقيا-ناميبيا"],
        correct: 0
    },
    {
        question: "من هو موحد جنوب إفريقيا الحديثة؟",
        options: ["سيسيل رودس", "بول كروجر", "يان سموتس", "نيلسون مانديلا"],
        correct: 3
    },
    {
        question: "ما هي أقدم دولة في جزر المحيط الهندي؟",
        options: ["مدغشقر", "جزر القمر", "سيشل", "موريشيوس"],
        correct: 0
    },
    {
        question: "من هو مؤسس مملكة مدغشقر؟",
        options: ["أندرانانامبوا", "أندريريانامبوا", "أندريريانامبوا", "أندريريانامبوا"],
        correct: 0
    },
    {
        question: "ما هي الحرب التي أدت إلى استقلال مدغشقر؟",
        options: ["حرب الاستقلال الملغاشية", "ثورة 1947", "حرب مدغشقر-فرنسا", "حرب مدغشقر-جزر القمر"],
        correct: 0
    },
    {
        question: "من هو موحد مدغشقر الحديثة؟",
        options: ["ديدييه راتسيراكا", "ماركو رافالومانانا", "هيريني راجاوناريمامبيانينا", "أندري راجولينا"],
        correct: 0
    },
    {
        question: "ما هي أقدم دولة في جزر المحيط الهادئ؟",
        options: ["فيجي", "ساموا", "تونغا", "فانواتو"],
        correct: 2
    },
    {
        question: "من هو مؤسس مملكة تونغا؟",
        options: ["جورج توبو الأول", "جورج توبو الثاني", "جورج توبو الثالث", "تاوفااهو توبو الرابع"],
        correct: 0
    },
    {
        question: "ما هي الحرب التي أدت إلى استقلال فيجي؟",
        options: ["حرب الاستقلال الفيجية", "ثورة 1987", "ثورة 2000", "ثورة 2006"],
        correct: 0
    },
    {
        question: "من هو موحد فيجي الحديثة؟",
        options: ["كاميسيس", "سيتويف", "كوماناتابوا", "كوبوسي"],
        correct: 0
    },
    {
        question: "ما هي أقدم دولة في جزر الكاريبي؟",
        options: ["كوبا", "هايتي", "جامايكا", "جمهورية الدومينيكان"],
        correct: 1
    },
    {
        question: "من هو مؤسس جمهورية هايتي؟",
        options: ["توسين لوفرتور", "جان جاك ديسالين", "هنري كريستوف", "ألكسندر بيتيون"],
        correct: 1
    },
    {
        question: "ما هي الحرب التي أدت إلى استقلال كوبا؟",
        options: ["حرب الاستقلال الكوبية", "حرب العشر سنوات", "حرب 1895", "ثورة 1959"],
        correct: 0
    },
    {
        question: "من هو موحد كوبا الحديثة؟",
        options: ["خوسيه مارتي", "ماكسيمو غوميز", "أنطونيو ماسيو", "فيدل كاسترو"],
        correct: 3
    },
    {
        question: "ما هي أقدم دولة في أمريكا الوسطى؟",
        options: ["غواتيمالا", "هندوراس", "السلفادور", "نيكاراغوا"],
        correct: 0
    },
    {
        question: "من هو مؤسس إمبراطورية المايا؟",
        options: ["كينتش أهوا", "كينتش أهوا", "كينتش أهوا", "كينتش أهوا"],
        correct: 0
    },
    {
        question: "ما هي الحرب التي أدت إلى استقلال غواتيمالا؟",
        options: ["حرب الاستقلال الغواتيمالية", "ثورة 1944", "حرب 1954", "حرب 1980"],
        correct: 0
    },
    {
        question: "من هو موحد غواتيمالا الحديثة؟",
        options: ["خوستو روفينو باريوس", "مانويل استرادا كابانياس", "خورخي أوبيكو", "خاكوبو أربينز"],
        correct: 0
    },
    {
        question: "ما هي أقدم دولة في أمريكا الجنوبية؟",
        options: ["البرازيل", "الأرجنتين", "بيرو", "كولومبيا"],
        correct: 2
    },
    {
        question: "من هو مؤسس إمبراطورية الإنكا؟",
        options: ["باشاراكوتي", "فيراكوتشا", "بوتشاكوتي", "أتاهوالبا"],
        correct: 2
    },
    {
        question: "ما هي الحرب التي أدت إلى استقلال بيرو؟",
        options: ["حرب الاستقلال البيروفية", "حرب المحيط الهادئ", "حرب تشيلي-بيرو", "حرب الإكوادور-بيرو"],
        correct: 0
    },
    {
        question: "من هو موحد بيرو الحديثة؟",
        options: ["خوسيه دي سان مارتين", "سيمون بوليفار", "أندريس دي سانتا كروز", "رامون كاستيلا"],
        correct: 0
    },
    {
        question: "ما هي أقدم دولة في أمريكا الشمالية؟",
        options: ["الولايات المتحدة", "كندا", "المكسيك", "غرينلاند"],
        correct: 2
    },
    {
        question: "من هو مؤسس إمبراطورية الأزتك؟",
        options: ["تيزوك", "أهويتسوتل", "موكتيزوما الأول", "موكتيزوما الثاني"],
        correct: 2
    },
    {
        question: "ما هي الحرب التي أدت إلى استقلال المكسيك؟",
        options: ["حرب الاستقلال المكسيكية", "حرب الإصلاح", "الثورة المكسيكية", "حرب التكساس"],
        correct: 0
    },
    {
        question: "من هو موحد المكسيك الحديثة؟",
        options: ["أغustin دي إيتوربيدي", "بينيتو خواريز", "بورفيريودياس", "فرانسيسكو ماديرو"],
        correct: 0
    },
    {
        question: "ما هي أقدم دولة في أوروبا الغربية؟",
        options: ["فرنسا", "ألمانيا", "إيطاليا", "إسبانيا"],
        correct: 0
    },
    {
        question: "من هو مؤسس الإمبراطورية الفرنسية الأولى؟",
        options: ["نابليون بونابرت", "لويس السادس عشر", "شارل العاشر", "لويس فيليب"],
        correct: 0
    },
    {
        question: "ما هي الحرب التي أدت إلى استقلال فرنسا؟",
        options: ["حرب المائة عام", "حرب الاستقلال الفرنسية", "حرب الثورة الفرنسية", "حرب نابليون"],
        correct: 0
    },
    {
        question: "من هو موحد فرنسا الحديثة؟",
        options: ["شارل السابع", "لويس الحادي عشر", "فرانسوا الأول", "هنري الرابع"],
        correct: 1
    },
    {
        question: "ما هي أقدم دولة في أوروبا الشرقية؟",
        options: ["روسيا", "بولندا", "المجر", "رومانيا"],
        correct: 1
    },
    {
        question: "من هو مؤسس إمبراطورية بولندا-ليتوانيا؟",
        options: ["سيغيسموند الأول", "سيغيسموند الثاني أوغسطس", "ستيفن باثورى", "سيغيسموند الثالث فاسا"],
        correct: 1
    },
    {
        question: "ما هي الحرب التي أدت إلى استقلال بولندا؟",
        options: ["حرب الاستقلال البولندية", "حرب بولندا-السويد", "حرب بولندا-روسيا", "حرب بولندا-أوكرانيا"],
        correct: 0
    },
    {
        question: "من هو موحد بولندا الحديثة؟",
        options: ["يوسف بيلسودسكي", "رومان دموفسكي", "إغناسي موسيتشكي", "فويتشخ ياروزيلسكي"],
        correct: 0
    },
    {
        question: "ما هي أقدم دولة في أوروبا الشمالية؟",
        options: ["السويد", "النرويج", "فنلندا", "الدنمارك"],
        correct: 3
    },
    {
        question: "من هو مؤسس إمبراطورية الدنمارك-النرويج؟",
        options: ["كريستيان الأول", "هانز", "كريستيان الثاني", "فريدريك الأول"],
        correct: 0
    },
    {
        question: "ما هي الحرب التي أدت إلى استقلال الدنمارك؟",
        options: ["حرب الاستقلال الدنماركية", "حرب التحرير الدنماركية", "حرب الدنمارك-السويد", "حرب الدنمارك-ألمانيا"],
        correct: 0
    },
    {
        question: "من هو موحد الدنمارك الحديثة؟",
        options: ["كريستيان التاسع", "فريدريك الثامن", "كريستيان العاشر", "فريدريك التاسع"],
        correct: 0
    },
    {
        question: "ما هي أقدم دولة في أوروبا الجنوبية؟",
        options: ["اليونان", "إيطاليا", "إسبانيا", "البرتغال"],
        correct: 0
    },
    {
        question: "من هو مؤسس الإمبراطورية البيزنطية؟",
        options: ["قسطنطين الأول", "جستنيان الأول", "هيراكليوس", "ليو الثالث"],
        correct: 0
    },
    {
        question: "ما هي الحرب التي أدت إلى استقلال اليونان؟",
        options: ["حرب الاستقلال اليونانية", "حرب البلقان", "الحرب العالمية الأولى", "الحرب العالمية الثانية"],
        correct: 0
    },
    {
        question: "من هو موحد اليونان الحديثة؟",
        options: ["يوannis Kapodistrias", "أوتون بافاريا", "جورج الأول", "إلياس الأول"],
        correct: 0
    },
    {
        question: "ما هي أقدم دولة في أوروبا الوسطى؟",
        options: ["سويسرا", "النمسا", "تشيكيا", "سلوفاكيا"],
        correct: 0
    },
    {
        question: "من هو مؤسس الاتحاد السويسري؟",
        options: ["رودولف الأول", "ألبرت الأول", "أوتون الأول", "أدولف"],
        correct: 0
    },
    {
        question: "ما هي الحرب التي أدت إلى استقلال سويسرا؟",
        options: ["حرب الاستقلال السويسرية", "معركة مورغاتن", "معركة سيمباخ", "معركة نافا"],
        correct: 0
    },
    {
        question: "من هو موحد سويسرا الحديثة؟",
        options: ["نيكولاس فون فلو", "ألفريد إشر", "فيلهلم ماتياس نايفر", "جاك شواب"],
        correct: 0
    },
    {
        question: "ما هي أقدم دولة في أوروبا الجنوبية الشرقية؟",
        options: ["بلغاريا", "صربيا", "كرواتيا", "سلوفينيا"],
        correct: 0
    },
    {
        question: "من هو مؤسس الإمبراطورية البلغارية الأولى؟",
        options: ["أسباروخ", "تيرفيل", "كروم", "عمرتاج"],
        correct: 0
    },
    {
        question: "ما هي الحرب التي أدت إلى استقلال بلغاريا؟",
        options: ["حرب الاستقلال البلغارية", "حرب البلقان", "الحرب العالمية الأولى", "الحرب العالمية الثانية"],
        correct: 0
    },
    {
        question: "من هو موحد بلغاريا الحديثة؟",
        options: ["ألكسندر الأول", "فرديناند الأول", "بوريس الثالث", "سيمون الثاني"],
        correct: 0
    },
    {
        question: "ما هي أقدم دولة في أوروبا الغربية الشمالية؟",
        options: ["هولندا", "بلجيكا", "لوكسمبورغ", "أيرلندا"],
        correct: 0
    },
    {
        question: "من هو مؤسس جمهورية هولندا؟",
        options: ["فيليم أورانج", "موريس ناسو", "فريدريك هنريك", "فيليم الثاني"],
        correct: 0
    },
    {
        question: "ما هي الحرب التي أدت إلى استقلال هولندا؟",
        options: ["حرب الثمانين عاماً", "حرب الاستقلال الهولندية", "حرب هولندا-إسبانيا", "حرب هولندا-فرنسا"],
        correct: 0
    },
    {
        question: "من هو موحد هولندا الحديثة؟",
        options: ["فيليم الأول", "فيليم الثاني", "فيليم الثالث", "فيلهلمينا"],
        correct: 0
    },
    {
        question: "ما هي أقدم دولة في أوروبا الغربية الجنوبية؟",
        options: ["إسبانيا", "البرتغال", "أندورا", "موناكو"],
        correct: 2
    },
    {
        question: "من هو مؤسس مملكة أندورا؟",
        options: ["شارلماين", "لويس البيوس", "شارل الثاني", "لويس الرابع"],
        correct: 0
    },
    {
        question: "ما هي الحرب التي أدت إلى استقلال أندورا؟",
        options: ["حرب الاستقلال الأندورية", "حرب المائة عام", "حرب التحرير الأندورية", "حرب أندورا-إسبانيا"],
        correct: 0
    },
    {
        question: "من هو موحد أندورا الحديثة؟",
        options: ["فرانسيسك كامينو", "أنطون فاريس", "ألفونس جوردانا", "أنطونيو مارتي"],
        correct: 0
    },
    {
        question: "ما هي أقدم دولة في أوروبا الشرقية الشمالية؟",
        options: ["إستونيا", "لاتفيا", "ليتوانيا", "فنلندا"],
        correct: 2
    },
    {
        question: "من هو مؤسس دوقية ليتوانيا الكبرى؟",
        options: ["ميندوغاس", "تريدينيس", "غديميناس", "أوليغيرد"],
        correct: 0
    },
    {
        question: "ما هي الحرب التي أدت إلى استقلال ليتوانيا؟",
        options: ["حرب الاستقلال الليتوانية", "حرب ليتوانيا-روسيا", "حرب ليتوانيا-بولندا", "حرب ليتوانيا-ألمانيا"],
        correct: 0
    },
    {
        question: "من هو موحد ليتوانيا الحديثة؟",
        options: ["أنطاناس سمتانا", "أوغوستيناس فولديماراس", "أنطاناس سنيكا", "أنطاناس ميركيس"],
        correct: 0
    },
    {
        question: "ما هي أقدم دولة في أوروبا الشرقية الجنوبية؟",
        options: ["رومانيا", "مولدوفا", "أوكرانيا", "بيلاروسيا"],
        correct: 0
    },
    {
        question: "من هو مؤسس إمارة والاشيا؟",
        options: ["باساراب الأول", "نيكولاي الأول", "كارول الأول", "فرديناند الأول"],
        correct: 0
    },
    {
        question: "ما هي الحرب التي أدت إلى استقلال رومانيا؟",
        options: ["حرب الاستقلال الرومانية", "حرب القرم", "حرب البلقان", "الحرب العالمية الأولى"],
        correct: 0
    },
    {
        question: "من هو موحد رومانيا الحديثة؟",
        options: ["ألكسندر إيوان كوزا", "كارول الأول", "فرديناند الأول", "مايكل الأول"],
        correct: 0
    },
    {
        question: "ما هي أقدم دولة في أوروبا الوسطى الشرقية؟",
        options: ["سلوفاكيا", "سلوفينيا", "كرواتيا", "البوسنة والهرسك"],
        correct: 1
    },
    {
        question: "من هو مؤسس دوقية كارانتانيا؟",
        options: ["فالوك", "غوديسلاف", "بوروت", "تشيسلاف"],
        correct: 0
    },
    {
        question: "ما هي الحرب التي أدت إلى استقلال سلوفينيا؟",
        options: ["حرب الاستقلال السلوفينية", "حرب الأيام العشرة", "حرب البلقان", "الحرب العالمية الثانية"],
        correct: 0
    },
    {
        question: "من هو موحد سلوفينيا الحديثة؟",
        options: ["ميلان كوتشان", "يانز درنوفشيك", "بوروت باهوتش", "دانيلو تورك"],
        correct: 0
    },
    {
        question: "ما هي أقدم دولة في أوروبا الوسطى الغربية؟",
        options: ["ألمانيا", "فرنسا", "سويسرا", "بلجيكا"],
        correct: 0
    },
    {
        question: "من هو مؤسس الإمبراطورية الألمانية؟",
        options: ["أوتو فون بسمارك", "فيلهلم الأول", "فيلهلم الثاني", "فريدريك الثالث"],
        correct: 0
    },
    {
        question: "ما هي الحرب التي أدت إلى استقلال ألمانيا؟",
        options: ["حرب الاستقلال الألمانية", "حرب التحرير الألمانية", "حرب ألمانيا-فرنسا", "حرب ألمانيا-النمسا"],
        correct: 0
    },
    {
        question: "من هو موحد ألمانيا الحديثة؟",
        options: ["أوتو فون بسمارك", "فيلهلم الأول", "فيلهلم الثاني", "فريدريك الثالث"],
        correct: 0
    },
    {
        question: "ما هي أقدم دولة في أوروبا الوسطى الشمالية؟",
        options: ["التشيك", "سلوفاكيا", "بولندا", "ألمانيا"],
        correct: 0
    },
    {
        question: "من هو مؤسس مملكة البوهيميا؟",
        options: ["بريميسيل الأول", "أولدرش", "بريميسيل الثاني", "فانتسلاف الأول"],
        correct: 0
    },
    {
        question: "ما هي الحرب التي أدت إلى استقلال التشيك؟",
        options: ["حرب الاستقلال التشيكية", "حرب الثلاثين عاماً", "حرب التحرير التشيكية", "حرب التشيك-سلوفاكيا"],
        correct: 0
    },
    {
        question: "من هو موحد التشيك الحديثة؟",
        options: ["توماس ماساريك", "إدوارد بينيش", "فاتسلاف هافيل", "فاتسلاف كلاوس"],
        correct: 2
    },
    {
        question: "ما هي أقدم دولة في أوروبا الوسطى الجنوبية؟",
        options: ["النمسا", "سلوفينيا", "كرواتيا", "المجر"],
        correct: 3
    },
    {
        question: "من هو مؤسس الإمبراطورية النمساوية المجرية؟",
        options: ["فرانتس جوزيف الأول", "فرانتس الأول", "فرانتس الثاني", "فرانتس الثالث"],
        correct: 0
    },
    {
        question: "ما هي الحرب التي أدت إلى استقلال المجر؟",
        options: ["حرب الاستقلال المجرية", "ثورة 1848", "ثورة 1956", "حرب المجر-النمسا"],
        correct: 0
    },
    {
        question: "من هو موحد المجر الحديثة؟",
        options: ["ستيفن الأول", "ماتياس كورفينوس", "فرانز ديكل", "إمري سيكلي"],
        correct: 0
    },
    {
        question: "ما هي أقدم دولة في أوروبا الغربية الوسطى؟",
        options: ["بلجيكا", "هولندا", "لوكسمبورغ", "فرنسا"],
        correct: 0
    },
    {
        question: "من هو مؤسس مملكة بلجيكا؟",
        options: ["ليوبولد الأول", "ليوبولد الثاني", "ألبرت الأول", "ليوبولد الثالث"],
        correct: 0
    },
    {
        question: "ما هي الحرب التي أدت إلى استقلال بلجيكا؟",
        options: ["حرب الاستقلال البلجيكية", "ثورة 1830", "حرب بلجيكا-هولندا", "حرب بلجيكا-فرنسا"],
        correct: 0
    },
    {
        question: "من هو موحد بلجيكا الحديثة؟",
        options: ["شارل روجيه", "لوي دي بوتيه", "جوستاف فان دير نوت", "فيلهلم تيودور"],
        correct: 0
    },
    {
        question: "ما هي أقدم دولة في أوروبا الشرقية الوسطى؟",
        options: ["أوكرانيا", "بيلاروسيا", "مولدوفا", "بولندا"],
        correct: 0
    },
    {
        question: "من هو مؤسس دوقية كييف؟",
        options: ["أوليج", "إيغور", "سفياتوسلاف", "فلاديمير الكبير"],
        correct: 0
    },
    {
        question: "ما هي الحرب التي أدت إلى استقلال أوكرانيا؟",
        options: ["حرب الاستقلال الأوكرانية", "ثورة 2004", "ثورة 2014", "حرب أوكرانيا-روسيا"],
        correct: 0
    },
    {
        question: "من هو موحد أوكرانيا الحديثة؟",
        options: ["ليونيد كرافتشوك", "ليونيد كوتشما", "فيكتور يوشتشنكو", "فيكتور يانوكوفيتش"],
        correct: 0
    },
    {
        question: "ما هي أقدم دولة في أوروبا الشمالية الغربية؟",
        options: ["أيرلندا", "أيسلندا", "النرويج", "السويد"],
        correct: 1
    },
    {
        question: "من هو مؤسس جمهورية آيسلندا؟",
        options: ["أنغوس فنغر", "هالدور لاغرمان", "أولافور ثوردارسون", "إيغيل سكارا"],
        correct: 0
    },
    {
        question: "ما هي الحرب التي أدت إلى استقلال آيسلندا؟",
        options: ["حرب الاستقلال الآيسلندية", "ثورة 1944", "حرب آيسلندا-الدنمارك", "حرب آيسلندا-بريطانيا"],
        correct: 0
    },
    {
        question: "من هو موحد آيسلندا الحديثة؟",
        options: ["سفيرين بيورنسون", "أوسكار بورغفوس", "فيرني هيرمانسون", "فيونار بندكتسون"],
        correct: 0
    },
    {
        question: "ما هي أقدم دولة في أوروبا الشمالية الشرقية؟",
        options: ["فنلندا", "إستونيا", "لاتفيا", "ليتوانيا"],
        correct: 0
    },
    {
        question: "من هو مؤسس دوقية فنلندا الكبرى؟",
        options: ["ألكسندر الأول", "نيكولاي الأول", "ألكسندر الثاني", "ألكسندر الثالث"],
        correct: 0
    },
    {
        question: "ما هي الحرب التي أدت إلى استقلال فنلندا؟",
        options: ["حرب الاستقلال الفنلندية", "حرب فنلندا-روسيا", "حرب فنلندا-السويد", "حرب فنلندا-ألمانيا"],
        correct: 0
    },
    {
        question: "من هو موحد فنلندا الحديثة؟",
        options: ["كارل جوستاف إميل مانرهايم", "كاولو ستولبيرغ", "روبرت كارياجا", "أورهو كيفي"],
        correct: 0
    },
    {
        question: "ما هي أقدم دولة في أوروبا الجنوبية الغربية؟",
        options: ["البرتغال", "إسبانيا", "أندورا", "موناكو"],
        correct: 0
    },
    {
        question: "من هو مؤسس مملكة البرتغال؟",
        options: ["أفونسو هنريكيش", "سانشو الأول", "أفونسو الثاني", "سانشو الثاني"],
        correct: 0
    },
    {
        question: "ما هي الحرب التي أدت إلى استقلال البرتغال؟",
        options: ["حرب الاستقلال البرتغالية", "حرب التحرير البرتغالية", "حرب البرتغال-إسبانيا", "حرب البرتغال-فرنسا"],
        correct: 0
    },
    {
        question: "من هو موحد البرتغال الحديثة؟",
        options: ["أفونسو الأول", "جواو الأول", "مانويل الأول", "جواو الرابع"],
        correct: 3
    },
    {
        question: "ما هي أقدم دولة في أوروبا الجنوبية الشرقية؟",
        options: ["اليونان", "بلغاريا", "صربيا", "ألبانيا"],
        correct: 0
    },
    {
        question: "من هو مؤسس إمبراطورية إبيروس؟",
        options: ["ميخائيل الأول", "ثيودوروس كومنينوس", "مانويل كومنينوس", "ميخائيل الثاني"],
        correct: 0
    },
    {
        question: "ما هي الحرب التي أدت إلى استقلال ألبانيا؟",
        options: ["حرب الاستقلال الألبانية", "حرب البلقان", "الحرب العالمية الأولى", "الحرب العالمية الثانية"],
        correct: 0
    },
    {
        question: "من هو موحد ألبانيا الحديثة؟",
        options: ["إسماعيل قمالي", "أحمد زوغو", "إنفير هوتشا", "راميز عليا"],
        correct: 0
    },
    {
        question: "ما هي أقدم دولة في أوروبا الوسطى الجنوبية الغربية؟",
        options: ["إيطاليا", "سويسرا", "فرنسا", "إسبانيا"],
        correct: 0
    },
    {
        question: "من هو مؤسس مملكة إيطاليا؟",
        options: ["فيكتور إيمانويل الثاني", "كاميلو كافور", "جيوسيبي غاريبالدي", "جيوسيبي مازيني"],
        correct: 0
    },
    {
        question: "ما هي الحرب التي أدت إلى استقلال إيطاليا؟",
        options: ["حرب الاستقلال الإيطالية", "حرب القرم", "حرب النمسا-إيطاليا", "حرب فرنسا-إيطاليا"],
        correct: 0
    },
    {
        question: "من هو موحد إيطاليا الحديثة؟",
        options: ["جيوسيبي غاريبالدي", "فيكتور إيمانويل الثاني", "كونت كافور", "جوزيبي مازيني"],
        correct: 0
    },
    {
        question: "ما هي أقدم دولة في أوروبا الوسطى الجنوبية الشرقية؟",
        options: ["كرواتيا", "سلوفينيا", "البوسنة والهرسك", "صربيا"],
        correct: 0
    },
    {
        question: "من هو مؤسس مملكة كرواتيا؟",
        options: ["توميسلاف", "ستيفان درزيسلاف", "بيتر كريشمير", "ديميتريوس زفونيمير"],
        correct: 0
    },
    {
        question: "ما هي الحرب التي أدت إلى استقلال كرواتيا؟",
        options: ["حرب الاستقلال الكرواتية", "حرب البلقان", "الحرب العالمية الأولى", "الحرب العالمية الثانية"],
        correct: 0
    },
    {
        question: "من هو موحد كرواتيا الحديثة؟",
        options: ["فرانجو تودجمان", "ستيبان ميسيتش", "إيفو يوسيبوفيتش", "كوليندا غرابار كيتاروفيتش"],
        correct: 0
    },
    {
        question: "ما هي أقدم دولة في أوروبا الوسطى الشمالية الغربية؟",
        options: ["ألمانيا", "النمسا", "سويسرا", "فرنسا"],
        correct: 0
    },
    {
        question: "من هو مؤسس الإمبراطورية الرومانية المقدسة؟",
        options: ["أوتو الأول", "أوتو الثاني", "أوتو الثالث", "هنري الثاني"],
        correct: 0
    },
    {
        question: "ما هي الحرب التي أدت إلى استقلال النمسا؟",
        options: ["حرب الاستقلال النمساوية", "حرب التحرير النمساوية", "حرب النمسا-فرنسا", "حرب النمسا-بروسيا"],
        correct: 0
    },
    {
        question: "من هو موحد النمسا الحديثة؟",
        options: ["فرانتس جوزيف الأول", "فرانتس الأول", "فرانتس الثاني", "فرانتس الثالث"],
        correct: 0
    },
    {
        question: "ما هي أقدم دولة في أوروبا الوسطى الشمالية الشرقية؟",
        options: ["بولندا", "تشيكيا", "سلوفاكيا", "ألمانيا"],
        correct: 0
    },
    {
        question: "من هو مؤسس مملكة بولندا؟",
        options: ["بوليسلو الأول", "ميزكو الأول", "بوليسلو الثاني", "ميزكو الثاني"],
        correct: 0
    },
    {
        question: "ما هي الحرب التي أدت إلى استقلال سلوفاكيا؟",
        options: ["حرب الاستقلال السلوفاكية", "ثورة 1944", "ثورة 1989", "حرب سلوفاكيا-تشيكيا"],
        correct: 0
    },
    {
        question: "من هو موحد سلوفاكيا الحديثة؟",
        options: ["فاديم ديزور", "يان كوتشاك", "روبرت فيكو", "زوزانا كابوتوفا"],
        correct: 0
    },
    {
        question: "ما هي أقدم دولة في أوروبا الغربية الشمالية الغربية؟",
        options: ["أيرلندا", "أيسلندا", "النرويج", "السويد"],
        correct: 0
    },
    {
        question: "من هو مؤسس مملكة أيرلندا؟",
        options: ["بريان بورو", "تيردال ماك مورتشادا", "روديرك أورورك", "جون دو لاسي"],
        correct: 0
    },
    {
        question: "ما هي الحرب التي أدت إلى استقلال أيرلندا؟",
        options: ["حرب الاستقلال الأيرلندية", "ثورة 1916", "حرب أيرلندا-بريطانيا", "حرب أيرلندا الشمالية"],
        correct: 0
    },
    {
        question: "من هو موحد أيرلندا الحديثة؟",
        options: ["إيامون دي فاليرا", "مايكل كولينز", "ويليام تي كوزغريف", "سيان ليماس"],
        correct: 0
    },
    {
        question: "ما هي أقدم دولة في أوروبا الغربية الشمالية الشرقية؟",
        options: ["السويد", "فنلندا", "إستونيا", "لاتفيا"],
        correct: 0
    },
    {
        question: "من هو مؤسس الإمبراطورية السويدية؟",
        options: ["غوستاف الأول فاسا", "إريك الرابع عشر", "يوهان الثالث", "سيغسموند"],
        correct: 0
    },
    {
        question: "ما هي الحرب التي أدت إلى استقلال السويد؟",
        options: ["حرب الاستقلال السويدية", "معركة بروك", "معركة فيستريت", "معركة ليندا نيس"],
        correct: 0
    },
    {
        question: "من هو موحد السويد الحديثة؟",
        options: ["غوستاف فاسا", "غوستاف الثاني أدولف", "كارل الثاني عشر", "غوستاف الثالث"],
        correct: 0
    },
    {
        question: "ما هي أقدم دولة في أوروبا الغربية الجنوبية الغربية؟",
        options: ["البرتغال", "إسبانيا", "أندورا", "موناكو"],
        correct: 0
    },
    {
        question: "من هو مؤسس إمارة موناكو؟",
        options: ["فرانسوا غريمالدي", "شارل الأول", "هونوري الثاني", "لويس الأول"],
        correct: 0
    },
    {
        question: "ما هي الحرب التي أدت إلى استقلال موناكو؟",
        options: ["حرب الاستقلال الموناكية", "حرب التحرير الموناكية", "حرب موناكو-فرنسا", "حرب موناكو-إيطاليا"],
        correct: 0
    },
    {
        question: "من هو موحد موناكو الحديثة؟",
        options: ["شارل الثالث", "ألبرت الأول", "لويس الثاني", "رانير الثالث"],
        correct: 0
    },
    {
        question: "ما هي أقدم دولة في أوروبا الغربية الجنوبية الشرقية؟",
        options: ["إسبانيا", "أندورا", "موناكو", "إيطاليا"],
        correct: 0
    },
    {
        question: "من هو مؤسس مملكة إسبانيا؟",
        options: ["فرديناند الثاني", "إيزابيلا الأولى", "كارلوس الأول", "فيليب الثاني"],
        correct: 0
    },
    {
        question: "ما هي الحرب التي أدت إلى استقلال إسبانيا؟",
        options: ["حرب الاستقلال الإسبانية", "حرب التحرير الإسبانية", "حرب إسبانيا-فرنسا", "حرب إسبانيا-بريطانيا"],
        correct: 0
    },
    {
        question: "من هو موحد إسبانيا الحديثة؟",
        options: ["فرديناند الثاني", "إيزابيلا الأولى", "كارلوس الأول", "فيليب الثاني"],
        correct: 0
    },
    {
        question: "ما هي أقدم دولة في أوروبا الشرقية الشمالية الغربية؟",
        options: ["إستونيا", "لاتفيا", "ليتوانيا", "فنلندا"],
        correct: 0
    },
    {
        question: "من هو مؤسس جمهورية إستونيا؟",
        options: ["كونستانتين باتس", "يان تونيسون", "يورى أولوتس", "كونراد يوهانسون"],
        correct: 0
    },
    {
        question: "ما هي الحرب التي أدت إلى استقلال إستونيا؟",
        options: ["حرب الاستقلال الإستونية", "ثورة 1918", "ثورة 1989", "حرب إستونيا-روسيا"],
        correct: 0
    },
    {
        question: "من هو موحد إستونيا الحديثة؟",
        options: ["كونستانتين باتس", "لينارت ميري", "أرنولد رووتل", "تووماس هندريك إلفيس"],
        correct: 1
    },
    {
        question: "ما هي أقدم دولة في أوروبا الشرقية الشمالية الشرقية؟",
        options: ["لاتفيا", "إستونيا", "ليتوانيا", "روسيا"],
        correct: 0
    },
    {
        question: "من هو مؤسس جمهورية لاتفيا؟",
        options: ["كارليس أولمانيس", "يانيس تشاكستيس", "أندريفس نييدرا", "بيتريس ستويكا"],
        correct: 0
    },
    {
        question: "ما هي الحرب التي أدت إلى استقلال لاتفيا؟",
        options: ["حرب الاستقلال اللاتفية", "ثورة 1918", "ثورة 1989", "حرب لاتفيا-روسيا"],
        correct: 0
    },
    {
        question: "من هو موحد لاتفيا الحديثة؟",
        options: ["غونتيس أولمانيس", "فيزما بيلس", "فالديس زاتليرس", "أندريس بيرزينش"],
        correct: 0
    },
    {
        question: "ما هي أقدم دولة في أوروبا الشرقية الجنوبية الغربية؟",
        options: ["رومانيا", "بلغاريا", "صربيا", "مولدوفا"],
        correct: 0
    },
    {
        question: "من هو مؤسس جمهورية مولدوفا؟",
        options: ["ميرسيا سناتور", "بيتر لوتشينسكي", "فولوديمير فورونين", "نيكولاي تيموفتي"],
        correct: 0
    },
    {
        question: "ما هي الحرب التي أدت إلى استقلال مولدوفا؟",
        options: ["حرب الاستقلال المولدوفية", "ثورة 1989", "ثورة 2009", "حرب مولدوفا-روسيا"],
        correct: 0
    },
    {
        question: "من هو موحد مولدوفا الحديثة؟",
        options: ["ميرسيا سناتور", "بيتر لوتشينسكي", "فولوديمير فورونين", "نيكولاي تيموفتي"],
        correct: 0
    },
    {
        question: "ما هي أقدم دولة في أوروبا الشرقية الجنوبية الشرقية؟",
        options: ["أوكرانيا", "بيلاروسيا", "روسيا", "مولدوفا"],
        correct: 1
    },
    {
        question: "من هو مؤسس جمهورية بيلاروسيا؟",
        options: ["ستانيسلاف شوشكيفيتش", "فياتشيسلاف كوزنتسوف", "ألكسندر لوكاشينكو", "سيرجي سيدورسكي"],
        correct: 0
    },
    {
        question: "ما هي الحرب التي أدت إلى استقلال بيلاروسيا؟",
        options: ["حرب الاستقلال البيلاروسية", "ثورة 1991", "ثورة 2020", "حرب بيلاروسيا-روسيا"],
        correct: 0
    },
    {
        question: "من هو موحد بيلاروسيا الحديثة؟",
        options: ["ستانيسلاف شوشكيفيتش", "فياتشيسلاف كوزنتسوف", "ألكسندر لوكاشينكو", "سيرجي سيدورسكي"],
        correct: 2
    },
    {
        question: "ما هي أقدم دولة في أوروبا الوسطى الشرقية الشمالية؟",
        options: ["لاتفيا", "ليتوانيا", "إستونيا", "بولندا"],
        correct: 1
    },
    {
        question: "من هو مؤسس جمهورية ليتوانيا؟",
        options: ["أنطاناس سمتانا", "أوغوستيناس فولديماراس", "أنطاناس سنيكا", "أنطاناس ميركيس"],
        correct: 0
    },
    {
        question: "ما هي الحرب التي أدت إلى استقلال ليتوانيا؟",
        options: ["حرب الاستقلال الليتوانية", "ثورة 1918", "ثورة 1989", "حرب ليتوانيا-روسيا"],
        correct: 0
    },
    {
        question: "من هو موحد ليتوانيا الحديثة؟",
        options: ["أنطاناس سمتانا", "أوغوستيناس فولديماراس", "أنطاناس سنيكا", "أنطاناس ميركيس"],
        correct: 0
    },
    {
        question: "ما هي أقدم دولة في أوروبا الوسطى الشرقية الجنوبية؟",
        options: ["أوكرانيا", "مولدوفا", "رومانيا", "بلغاريا"],
        correct: 0
    },
    {
        question: "من هو مؤسس جمهورية أوكرانيا؟",
        options: ["ليونيد كرافتشوك", "ليونيد كوتشما", "فيكتور يوشتشنكو", "فيكتور يانوكوفيتش"],
        correct: 0
    },
    {
        question: "ما هي الحرب التي أدت إلى استقلال أوكرانيا؟",
        options: ["حرب الاستقلال الأوكرانية", "ثورة 2004", "ثورة 2014", "حرب أوكرانيا-روسيا"],
        correct: 0
    },
    {
        question: "من هو موحد أوكرانيا الحديثة؟",
        options: ["ليونيد كرافتشوك", "ليونيد كوتشما", "فيكتور يوشتشنكو", "فيكتور يانوكوفيتش"],
        correct: 0
    },
    {
        question: "ما هي أقدم دولة في أوروبا الوسطى الغربية الشمالية؟",
        options: ["ألمانيا", "هولندا", "بلجيكا", "لوكسمبورغ"],
        correct: 0
    },
    {
        question: "من هو مؤسس جمهورية ألمانيا الاتحادية؟",
        options: ["كونراد أديناور", "لودفيغ إيرهارد", "كورت جورج كيزينجر", "فيلهلم براون"],
        correct: 0
    },
    {
        question: "ما هي الحرب التي أدت إلى استقلال ألمانيا؟",
        options: ["حرب الاستقلال الألمانية", "حرب التحرير الألمانية", "حرب ألمانيا-فرنسا", "حرب ألمانيا-النمسا"],
        correct: 0
    },
    {
        question: "من هو موحد ألمانيا الحديثة؟",
        options: ["أوتو فون بسمارك", "فيلهلم الأول", "فيلهلم الثاني", "هيلموت كول"],
        correct: 3
    },
    {
        question: "ما هي أقدم دولة في أوروبا الوسطى الغربية الجنوبية؟",
        options: ["فرنسا", "سويسرا", "إيطاليا", "إسبانيا"],
        correct: 1
    },
    {
        question: "من هو مؤسس الجمهورية السويسرية؟",
        options: ["نيكولاس فون فلو", "ألفريد إشر", "فيلهلم ماتياس نايفر", "جاك شواب"],
        correct: 0
    },
    {
        question: "ما هي الحرب التي أدت إلى استقلال سويسرا؟",
        options: ["حرب الاستقلال السويسرية", "معركة مورغاتن", "معركة سيمباخ", "معركة نافا"],
        correct: 0
    },
    {
        question: "من هو موحد سويسرا الحديثة؟",
        options: ["نيكولاس فون فلو", "ألفريد إشر", "فيلهلم ماتياس نايفر", "جاك شواب"],
        correct: 0
    },
    {
        question: "ما هي أقدم دولة في أوروبا الوسطى الشمالية الغربية؟",
        options: ["التشيك", "سلوفاكيا", "بولندا", "ألمانيا"],
        correct: 0
    },
    {
        question: "من هو مؤسس جمهورية التشيك؟",
        options: ["توماس ماساريك", "إدوارد بينيش", "فاتسلاف هافيل", "فاتسلاف كلاوس"],
        correct: 2
    },
    {
        question: "ما هي الحرب التي أدت إلى استقلال التشيك؟",
        options: ["حرب الاستقلال التشيكية", "حرب الثلاثين عاماً", "حرب التحرير التشيكية", "حرب التشيك-سلوفاكيا"],
        correct: 0
    },
    {
        question: "من هو موحد التشيك الحديثة؟",
        options: ["توماس ماساريك", "إدوارد بينيش", "فاتسلاف هافيل", "فاتسلاف كلاوس"],
        correct: 2
    },
    {
        question: "ما هي أقدم دولة في أوروبا الوسطى الشمالية الشرقية؟",
        options: ["بولندا", "سلوفاكيا", "التشيك", "ألمانيا"],
        correct: 0
    },
    {
        question: "من هو مؤسس جمهورية بولندا الثانية؟",
        options: ["يوسف بيلسودسكي", "رومان دموفسكي", "إغناسي موسيتشكي", "فويتشخ ياروزيلسكي"],
        correct: 0
    },
    {
        question: "ما هي الحرب التي أدت إلى استقلال بولندا؟",
        options: ["حرب الاستقلال البولندية", "حرب بولندا-السويد", "حرب بولندا-روسيا", "حرب بولندا-أوكرانيا"],
        correct: 0
    },
    {
        question: "من هو موحد بولندا الحديثة؟",
        options: ["يوسف بيلسودسكي", "رومان دموفسكي", "إغناسي موسيتشكي", "فويتشخ ياروزيلسكي"],
        correct: 0
    },
    {
        question: "ما هي أقدم دولة في أوروبا الوسطى الجنوبية الغربية؟",
        options: ["إيطاليا", "فرنسا", "سويسرا", "إسبانيا"],
        correct: 0
    },
    {
        question: "من هو مؤسس الجمهورية الإيطالية؟",
        options: ["ألتشيدي دي غاسبيري", "غيوسيبي بارونتشيلي", "غريكو بارونتشيلي", "غريكو بارونتشيلي"],
        correct: 0
    },
    {
        question: "ما هي الحرب التي أدت إلى استقلال إيطاليا؟",
        options: ["حرب الاستقلال الإيطالية", "حرب القرم", "حرب النمسا-إيطاليا", "حرب فرنسا-إيطاليا"],
        correct: 0
    },
    {
        question: "من هو موحد إيطاليا الحديثة؟",
        options: ["جيوسيبي غاريبالدي", "فيكتور إيمانويل الثاني", "كونت كافور", "جوزيبي مازيني"],
        correct: 0
    },
    {
        question: "ما هي أقدم دولة في أوروبا الوسطى الجنوبية الشرقية؟",
        options: ["سلوفينيا", "كرواتيا", "البوسنة والهرسك", "صربيا"],
        correct: 0
    },
    {
        question: "من هو مؤسس جمهورية سلوفينيا؟",
        options: ["ميلان كوتشان", "يانز درنوفشيك", "بوروت باهوتش", "دانيلو تورك"],
        correct: 0
    },
    {
        question: "ما هي الحرب التي أدت إلى استقلال سلوفينيا؟",
        options: ["حرب الاستقلال السلوفينية", "حرب الأيام العشرة", "حرب البلقان", "الحرب العالمية الثانية"],
        correct: 0
    },
    {
        question: "من هو موحد سلوفينيا الحديثة؟",
        options: ["ميلان كوتشان", "يانز درنوفشيك", "بوروت باهوتش", "دانيلو تورك"],
        correct: 0
    },
    {
        question: "ما هي أقدم دولة في أوروبا الشرقية الشمالية الغربية؟",
        options: ["إستونيا", "لاتفيا", "ليتوانيا", "فنلندا"],
        correct: 0
    },
    {
        question: "من هو مؤسس جمهورية إستونيا؟",
        options: ["كونستانتين باتس", "يان تونيسون", "يورى أولوتس", "كونراد يوهانسون"],
        correct: 0
    },
    {
        question: "ما هي الحرب التي أدت إلى استقلال إستونيا؟",
        options: ["حرب الاستقلال الإستونية", "ثورة 1918", "ثورة 1989", "حرب إستونيا-روسيا"],
        correct: 0
    },
    {
        question: "من هو موحد إستونيا الحديثة؟",
        options: ["كونستانتين باتس", "لينارت ميري", "أرنولد رووتل", "تووماس هندريك إلفيس"],
        correct: 1
    },
    {
        question: "ما هي أقدم دولة في أوروبا الشرقية الشمالية الشرقية؟",
        options: ["لاتفيا", "إستونيا", "ليتوانيا", "روسيا"],
        correct: 0
    },
    {
        question: "من هو مؤسس جمهورية لاتفيا؟",
        options: ["كارليس أولمانيس", "يانيس تشاكستيس", "أندريفس نييدرا", "بيتريس ستويكا"],
        correct: 0
    },
    {
        question: "ما هي الحرب التي أدت إلى استقلال لاتفيا؟",
        options: ["حرب الاستقلال اللاتفية", "ثورة 1918", "ثورة 1989", "حرب لاتفيا-روسيا"],
        correct: 0
    },
    {
        question: "من هو موحد لاتفيا الحديثة؟",
        options: ["غونتيس أولمانيس", "فيزما بيلس", "فالديس زاتليرس", "أندريس بيرزينش"],
        correct: 0
    },
    {
        question: "ما هي أقدم دولة في أوروبا الشرقية الجنوبية الغربية؟",
        options: ["رومانيا", "بلغاريا", "صربيا", "مولدوفا"],
        correct: 0
    },
    {
        question: "من هو مؤسس جمهورية مولدوفا؟",
        options: ["ميرسيا سناتور", "بيتر لوتشينسكي", "فولوديمير فورونين", "نيكولاي تيموفتي"],
        correct: 0
    },
    {
        question: "ما هي الحرب التي أدت إلى استقلال مولدوفا؟",
        options: ["حرب الاستقلال المولدوفية", "ثورة 1989", "ثورة 2009", "حرب مولدوفا-روسيا"],
        correct: 0
    },
    {
        question: "من هو موحد مولدوفا الحديثة؟",
        options: ["ميرسيا سناتور", "بيتر لوتشينسكي", "فولوديمير فورونين", "نيكولاي تيموفتي"],
        correct: 0
    },
    {
        question: "ما هي أقدم دولة في أوروبا الشرقية الجنوبية الشرقية؟",
        options: ["أوكرانيا", "بيلاروسيا", "روسيا", "مولدوفا"],
        correct: 1
    },
    {
        question: "من هو مؤسس جمهورية بيلاروسيا؟",
        options: ["ستانيسلاف شوشكيفيتش", "فياتشيسلاف كوزنتسوف", "ألكسندر لوكاشينكو", "سيرجي سيدورسكي"],
        correct: 0
    },
    {
        question: "ما هي الحرب التي أدت إلى استقلال بيلاروسيا؟",
        options: ["حرب الاستقلال البيلاروسية", "ثورة 1991", "ثورة 2020", "حرب بيلاروسيا-روسيا"],
        correct: 0
    },
    {
        question: "من هو موحد بيلاروسيا الحديثة؟",
        options: ["ستانيسلاف شوشكيفيتش", "فياتشيسلاف كوزنتسوف", "ألكسندر لوكاشينكو", "سيرجي سيدورسكي"],
        correct: 2
    },
    {
        question: "ما هي أقدم دولة في أوروبا الغربية الشمالية الغربية؟",
        options: ["أيرلندا", "أيسلندا", "النرويج", "السويد"],
        correct: 1
    },
    {
        question: "من هو مؤسس جمهورية آيسلندا؟",
        options: ["أنغوس فنغر", "هالدور لاغرمان", "أولافور ثوردارسون", "إيغيل سكارا"],
        correct: 0
    },
    {
        question: "ما هي الحرب التي أدت إلى استقلال آيسلندا؟",
        options: ["حرب الاستقلال الآيسلندية", "ثورة 1944", "حرب آيسلندا-الدنمارك", "حرب آيسلندا-بريطانيا"],
        correct: 0
    },
    {
        question: "من هو موحد آيسلندا الحديثة؟",
        options: ["سفيرين بيورنسون", "أوسكار بورغفوس", "فيرني هيرمانسون", "فيونار بندكتسون"],
        correct: 0
    },
    {
        question: "ما هي أقدم دولة في أوروبا الغربية الشمالية الشرقية؟",
        options: ["السويد", "فنلندا", "إستونيا", "لاتفيا"],
        correct: 0
    },
    {
        question: "من هو مؤسس الإمبراطورية السويدية؟",
        options: ["غوستاف الأول فاسا", "إريك الرابع عشر", "يوهان الثالث", "سيغسموند"],
        correct: 0
    },
    {
        question: "ما هي الحرب التي أدت إلى استقلال السويد؟",
        options: ["حرب الاستقلال السويدية", "معركة بروك", "معركة فيستريت", "معركة ليندا نيس"],
        correct: 0
    },
    {
        question: "من هو موحد السويد الحديثة؟",
        options: ["غوستاف فاسا", "غوستاف الثاني أدولف", "كارل الثاني عشر", "غوستاف الثالث"],
        correct: 0
    },
    {
        question: "ما هي أقدم دولة في أوروبا الغربية الجنوبية الغربية؟",
        options: ["البرتغال", "إسبانيا", "أندورا", "موناكو"],
        correct: 0
    },
    {
        question: "من هو مؤسس إمارة موناكو؟",
        options: ["فرانسوا غريمالدي", "شارل الأول", "هونوري الثاني", "لويس الأول"],
        correct: 0
    },
    {
        question: "ما هي الحرب التي أدت إلى استقلال موناكو؟",
        options: ["حرب الاستقلال الموناكية", "حرب التحرير الموناكية", "حرب موناكو-فرنسا", "حرب موناكو-إيطاليا"],
        correct: 0
    },
    {
        question: "من هو موحد موناكو الحديثة؟",
        options: ["شارل الثالث", "ألبرت الأول", "لويس الثاني", "رانير الثالث"],
        correct: 0
    },
    {
        question: "ما هي أقدم دولة في أوروبا الغربية الجنوبية الشرقية؟",
        options: ["إسبانيا", "أندورا", "موناكو", "إيطاليا"],
        correct: 0
    },
    {
        question: "من هو مؤسس مملكة إسبانيا؟",
        options: ["فرديناند الثاني", "إيزابيلا الأولى", "كارلوس الأول", "فيليب الثاني"],
        correct: 0
    },
    {
        question: "ما هي الحرب التي أدت إلى استقلال إسبانيا؟",
        options: ["حرب الاستقلال الإسبانية", "حرب التحرير الإسبانية", "حرب إسبانيا-فرنسا", "حرب إسبانيا-بريطانيا"],
        correct: 0
    },
    {
        question: "من هو موحد إسبانيا الحديثة؟",
        options: ["فرديناند الثاني", "إيزابيلا الأولى", "كارلوس الأول", "فيليب الثاني"],
        correct: 0
    },
    {
        question: "ما هي أقدم دولة في أوروبا الشرقية الشمالية الغربية؟",
        options: ["إستونيا", "لاتفيا", "ليتوانيا", "فنلندا"],
        correct: 0
    },
    {
        question: "من هو مؤسس جمهورية إستونيا؟",
        options: ["كونستانتين باتس", "يان تونيسون", "يورى أولوتس", "كونراد يوهانسون"],
        correct: 0
    },
    {
        question: "ما هي الحرب التي أدت إلى استقلال إستونيا؟",
        options: ["حرب الاستقلال الإستونية", "ثورة 1918", "ثورة 1989", "حرب إستونيا-روسيا"],
        correct: 0
    },
    {
        question: "من هو موحد إستونيا الحديثة؟",
        options: ["كونستانتين باتس", "لينارت ميري", "أرنولد رووتل", "تووماس هندريك إلفيس"],
        correct: 1
    },
    {
        question: "ما هي أقدم دولة في أوروبا الشرقية الشمالية الشرقية؟",
        options: ["لاتفيا", "إستونيا", "ليتوانيا", "روسيا"],
        correct: 0
    },
    {
        question: "من هو مؤسس جمهورية لاتفيا؟",
        options: ["كارليس أولمانيس", "يانيس تشاكستيس", "أندريفس نييدرا", "بيتريس ستويكا"],
        correct: 0
    },
    {
        question: "ما هي الحرب التي أدت إلى استقلال لاتفيا؟",
        options: ["حرب الاستقلال اللاتفية", "ثورة 1918", "ثورة 1989", "حرب لاتفيا-روسيا"],
        correct: 0
    },
    {
        question: "من هو موحد لاتفيا الحديثة؟",
        options: ["غونتيس أولمانيس", "فيزما بيلس", "فالديس زاتليرس", "أندريس بيرزينش"],
        correct: 0
    },
    {
        question: "ما هي أقدم دولة في أوروبا الشرقية الجنوبية الغربية؟",
        options: ["رومانيا", "بلغاريا", "صربيا", "مولدوفا"],
        correct: 0
    },
    {
        question: "من هو مؤسس جمهورية مولدوفا؟",
        options: ["ميرسيا سناتور", "بيتر لوتشينسكي", "فولوديمير فورونين", "نيكولاي تيموفتي"],
        correct: 0
    },
    {
        question: "ما هي الحرب التي أدت إلى استقلال مولدوفا؟",
        options: ["حرب الاستقلال المولدوفية", "ثورة 1989", "ثورة 2009", "حرب مولدوفا-روسيا"],
        correct: 0
    },
    {
        question: "من هو موحد مولدوفا الحديثة؟",
        options: ["ميرسيا سناتور", "بيتر لوتشينسكي", "فولوديمير فورونين", "نيكولاي تيموفتي"],
        correct: 0
    },
    {
        question: "ما هي أقدم دولة في أوروبا الشرقية الجنوبية الشرقية؟",
        options: ["أوكرانيا", "بيلاروسيا", "روسيا", "مولدوفا"],
        correct: 1
    },
    {
        question: "من هو مؤسس جمهورية بيلاروسيا؟",
        options: ["ستانيسلاف شوشكيفيتش", "فياتشيسلاف كوزنتسوف", "ألكسندر لوكاشينكو", "سيرجي سيدورسكي"],
        correct: 0
    },
    {
        question: "ما هي الحرب التي أدت إلى استقلال بيلاروسيا؟",
        options: ["حرب الاستقلال البيلاروسية", "ثورة 1991", "ثورة 2020", "حرب بيلاروسيا-روسيا"],
        correct: 0
    },
    {
        question: "من هو موحد بيلاروسيا الحديثة؟",
        options: ["ستانيسلاف شوشكيفيتش", "فياتشيسلاف كوزنتسوف", "ألكسندر لوكاشينكو", "سيرجي سيدورسكي"],
        correct: 2
    },
    {
        question: "ما هي أقدم دولة في أوروبا الوسطى الشرقية الشمالية؟",
        options: ["لاتفيا", "ليتوانيا", "إستونيا", "بولندا"],
        correct: 1
    },
    {
        question: "من هو مؤسس جمهورية ليتوانيا؟",
        options: ["أنطاناس سمتانا", "أوغوستيناس فولديماراس", "أنطاناس سنيكا", "أنطاناس ميركيس"],
        correct: 0
    },
    {
        question: "ما هي الحرب التي أدت إلى استقلال ليتوانيا؟",
        options: ["حرب الاستقلال الليتوانية", "ثورة 1918", "ثورة 1989", "حرب ليتوانيا-روسيا"],
        correct: 0
    },
    {
        question: "من هو موحد ليتوانيا الحديثة؟",
        options: ["أنطاناس سمتانا", "أوغوستيناس فولديماراس", "أنطاناس سنيكا", "أنطاناس ميركيس"],
        correct: 0
    },
    {
        question: "ما هي أقدم دولة في أوروبا الوسطى الشرقية الجنوبية؟",
        options: ["أوكرانيا", "مولدوفا", "رومانيا", "بلغاريا"],
        correct: 0
    },
    {
        question: "من هو مؤسس جمهورية أوكرانيا؟",
        options: ["ليونيد كرافتشوك", "ليونيد كوتشما", "فيكتور يوشتشنكو", "فيكتور يانوكوفيتش"],
        correct: 0
    },
    {
        question: "ما هي الحرب التي أدت إلى استقلال أوكرانيا؟",
        options: ["حرب الاستقلال الأوكرانية", "ثورة 2004", "ثورة 2014", "حرب أوكرانيا-روسيا"],
        correct: 0
    },
    {
        question: "من هو موحد أوكرانيا الحديثة؟",
        options: ["ليونيد كرافتشوك", "ليونيد كوتشما", "فيكتور يوشتشنكو", "فيكتور يانوكوفيتش"],
        correct: 0
    },
    {
        question: "ما هي أقدم دولة في أوروبا الوسطى الغربية الشمالية؟",
        options: ["ألمانيا", "هولندا", "بلجيكا", "لوكسمبورغ"],
        correct: 0
    },
    {
        question: "من هو مؤسس جمهورية ألمانيا الاتحادية؟",
        options: ["كونراد أديناور", "لودفيغ إيرهارد", "كورت جورج كيزينجر", "فيلهلم براون"],
        correct: 0
    },
    {
        question: "ما هي الحرب التي أدت إلى استقلال ألمانيا؟",
        options: ["حرب الاستقلال الألمانية", "حرب التحرير الألمانية", "حرب ألمانيا-فرنسا", "حرب ألمانيا-النمسا"],
        correct: 0
    },
    {
        question: "من هو موحد ألمانيا الحديثة؟",
        options: ["أوتو فون بسمارك", "فيلهلم الأول", "فيلهلم الثاني", "هيلموت كول"],
        correct: 3
    },
    {
        question: "ما هي أقدم دولة في أوروبا الوسطى الغربية الجنوبية؟",
        options: ["فرنسا", "سويسرا", "إيطاليا", "إسبانيا"],
        correct: 1
    },
    {
        question: "من هو مؤسس الجمهورية السويسرية؟",
        options: ["نيكولاس فون فلو", "ألفريد إشر", "فيلهلم ماتياس نايفر", "جاك شواب"],
        correct: 0
    },
    {
        question: "ما هي الحرب التي أدت إلى استقلال سويسرا؟",
        options: ["حرب الاستقلال السويسرية", "معركة مورغاتن", "معركة سيمباخ", "معركة نافا"],
        correct: 0
    },
    {
        question: "من هو موحد سويسرا الحديثة؟",
        options: ["نيكولاس فون فلو", "ألفريد إشر", "فيلهلم ماتياس نايفر", "جاك شواب"],
        correct: 0
    },
    {
        question: "ما هي أقدم دولة في أوروبا الوسطى الشمالية الغربية؟",
        options: ["التشيك", "سلوفاكيا", "بولندا", "ألمانيا"],
        correct: 0
    },
    {
        question: "من هو مؤسس جمهورية التشيك؟",
        options: ["توماس ماساريك", "إدوارد بينيش", "فاتسلاف هافيل", "فاتسلاف كلاوس"],
        correct: 2
    },
    {
        question: "ما هي الحرب التي أدت إلى استقلال التشيك؟",
        options: ["حرب الاستقلال التشيكية", "حرب الثلاثين عاماً", "حرب التحرير التشيكية", "حرب التشيك-سلوفاكيا"],
        correct: 0
    },
    {
        question: "من هو موحد التشيك الحديثة؟",
        options: ["توماس ماساريك", "إدوارد بينيش", "فاتسلاف هافيل", "فاتسلاف كلاوس"],
        correct: 2
    },
    {
        question: "ما هي أقدم دولة في أوروبا الوسطى الشمالية الشرقية؟",
        options: ["بولندا", "سلوفاكيا", "التشيك", "ألمانيا"],
        correct: 0
    },
    {
        question: "من هو مؤسس جمهورية بولندا الثانية؟",
        options: ["يوسف بيلسودسكي", "رومان دموفسكي", "إغناسي موسيتشكي", "فويتشخ ياروزيلسكي"],
        correct: 0
    },
    {
        question: "ما هي الحرب التي أدت إلى استقلال بولندا؟",
        options: ["حرب الاستقلال البولندية", "حرب بولندا-السويد", "حرب بولندا-روسيا", "حرب بولندا-أوكرانيا"],
        correct: 0
    },
    {
        question: "من هو موحد بولندا الحديثة؟",
        options: ["يوسف بيلسودسكي", "رومان دموفسكي", "إغناسي موسيتشكي", "فويتشخ ياروزيلسكي"],
        correct: 0
    },
    {
        question: "ما هي أقدم دولة في أوروبا الوسطى الجنوبية الغربية؟",
        options: ["إيطاليا", "فرنسا", "سويسرا", "إسبانيا"],
        correct: 0
    },
    {
        question: "من هو مؤسس الجمهورية الإيطالية؟",
        options: ["ألتشيدي دي غاسبيري", "غيوسيبي بارونتشيلي", "غريكو بارونتشيلي", "غريكو بارونتشيلي"],
        correct: 0
    },
    {
        question: "ما هي الحرب التي أدت إلى استقلال إيطاليا؟",
        options: ["حرب الاستقلال الإيطالية", "حرب القرم", "حرب النمسا-إيطاليا", "حرب فرنسا-إيطاليا"],
        correct: 0
    },
    {
        question: "من هو موحد إيطاليا الحديثة؟",
        options: ["جيوسيبي غاريبالدي", "فيكتور إيمانويل الثاني", "كونت كافور", "جوزيبي مازيني"],
        correct: 0
    },
    {
        question: "ما هي أقدم دولة في أوروبا الوسطى الجنوبية الشرقية؟",
        options: ["سلوفينيا", "كرواتيا", "البوسنة والهرسك", "صربيا"],
        correct: 0
    },
    {
        question: "من هو مؤسس جمهورية سلوفينيا؟",
        options: ["ميلان كوتشان", "يانز درنوفشيك", "بوروت باهوتش", "دانيلو تورك"],
        correct: 0
    },
    {
        question: "ما هي الحرب التي أدت إلى استقلال سلوفينيا؟",
        options: ["حرب الاستقلال السلوفينية", "حرب الأيام العشرة", "حرب البلقان", "الحرب العالمية الثانية"],
        correct: 0
    },
    {
        question: "من هو موحد سلوفينيا الحديثة؟",
        options: ["ميلان كوتشان", "يانز درنوفشيك", "بوروت باهوتش", "دانيلو تورك"],
        correct: 0
    },
    {
        question: "ما هي أقدم دولة في أوروبا الشرقية الشمالية الغربية؟",
        options: ["إستونيا", "لاتفيا", "ليتوانيا", "فنلندا"],
        correct: 0
    },
    {
        question: "من هو مؤسس جمهورية إستونيا؟",
        options: ["كونستانتين باتس", "يان تونيسون", "يورى أولوتس", "كونراد يوهانسون"],
        correct: 0
    },
    {
        question: "ما هي الحرب التي أدت إلى استقلال إستونيا؟",
        options: ["حرب الاستقلال الإستونية", "ثورة 1918", "ثورة 1989", "حرب إستونيا-روسيا"],
        correct: 0
    },
    {
        question: "من هو موحد إستونيا الحديثة؟",
        options: ["كونستانتين باتس", "لينارت ميري", "أرنولد رووتل", "تووماس هندريك إلفيس"],
        correct: 1
    },
    {
        question: "ما هي أقدم دولة في أوروبا الشرقية الشمالية الشرقية؟",
        options: ["لاتفيا", "إستونيا", "ليتوانيا", "روسيا"],
        correct: 0
    },
    {
        question: "من هو مؤسس جمهورية لاتفيا؟",
        options: ["كارليس أولمانيس", "يانيس تشاكستيس", "أندريفس نييدرا", "بيتريس ستويكا"],
        correct: 0
    },
    {
        question: "ما هي الحرب التي أدت إلى استقلال لاتفيا؟",
        options: ["حرب الاستقلال اللاتفية", "ثورة 1918", "ثورة 1989", "حرب لاتفيا-روسيا"],
        correct: 0
    },
    {
        question: "من هو موحد لاتفيا الحديثة؟",
        options: ["غونتيس أولمانيس", "فيزما بيلس", "فالديس زاتليرس", "أندريس بيرزينش"],
        correct: 0
    },
    {
        question: "ما هي أقدم دولة في أوروبا الشرقية الجنوبية الغربية؟",
        options: ["رومانيا", "بلغاريا", "صربيا", "مولدوفا"],
        correct: 0
    },
    {
        question: "من هو مؤسس جمهورية مولدوفا؟",
        options: ["ميرسيا سناتور", "بيتر لوتشينسكي", "فولوديمير فورونين", "نيكولاي تيموفتي"],
        correct: 0
    },
    {
        question: "ما هي الحرب التي أدت إلى استقلال مولدوفا؟",
        options: ["حرب الاستقلال المولدوفية", "ثورة 1989", "ثورة 2009", "حرب مولدوفا-روسيا"],
        correct: 0
    },
    {
        question: "من هو موحد مولدوفا الحديثة؟",
        options: ["ميرسيا سناتور", "بيتر لوتشينسكي", "فولوديمير فورونين", "نيكولاي تيموفتي"],
        correct: 0
    },
    {
        question: "ما هي أقدم دولة في أوروبا الشرقية الجنوبية الشرقية؟",
        options: ["أوكرانيا", "بيلاروسيا", "روسيا", "مولدوفا"],
        correct: 1
    },
    {
        question: "من هو مؤسس جمهورية بيلاروسيا؟",
        options: ["ستانيسلاف شوشكيفيتش", "فياتشيسلاف كوزنتسوف", "ألكسندر لوكاشينكو", "سيرجي سيدورسكي"],
        correct: 0
    },
    {
        question: "ما هي الحرب التي أدت إلى استقلال بيلاروسيا؟",
        options: ["حرب الاستقلال البيلاروسية", "ثورة 1991", "ثورة 2020", "حرب بيلاروسيا-روسيا"],
        correct: 0
    },
    {
        question: "من هو موحد بيلاروسيا الحديثة؟",
        options: ["ستانيسلاف شوشكيفيتش", "فياتشيسلاف كوزنتسوف", "ألكسندر لوكاشينكو", "سيرجي سيدورسكي"],
        correct: 2
    },
    {
        question: "ما هي أقدم دولة في أوروبا الغربية الشمالية الغربية؟",
        options: ["أيرلندا", "أيسلندا", "النرويج", "السويد"],
        correct: 1
    },
    {
        question: "من هو مؤسس جمهورية آيسلندا؟",
        options: ["أنغوس فنغر", "هالدور لاغرمان", "أولافور ثوردارسون", "إيغيل سكارا"],
        correct: 0
    },
    {
        question: "ما هي الحرب التي أدت إلى استقلال آيسلندا؟",
        options: ["حرب الاستقلال الآيسلندية", "ثورة 1944", "حرب آيسلندا-الدنمارك", "حرب آيسلندا-بريطانيا"],
        correct: 0
    },
    {
        question: "من هو موحد آيسلندا الحديثة؟",
        options: ["سفيرين بيورنسون", "أوسكار بورغفوس", "فيرني هيرمانسون", "فيونار بندكتسون"],
        correct: 0
    },
    {
        question: "ما هي أقدم دولة في أوروبا الغربية الشمالية الشرقية؟",
        options: ["السويد", "فنلندا", "إستونيا", "لاتفيا"],
        correct: 0
    },
    {
        question: "من هو مؤسس الإمبراطورية السويدية؟",
        options: ["غوستاف الأول فاسا", "إريك الرابع عشر", "يوهان الثالث", "سيغسموند"],
        correct: 0
    },
    {
        question: "ما هي الحرب التي أدت إلى استقلال السويد؟",
        options: ["حرب الاستقلال السويدية", "معركة بروك", "معركة فيستريت", "معركة ليندا نيس"],
        correct: 0
    },
    {
        question: "من هو موحد السويد الحديثة؟",
        options: ["غوستاف فاسا", "غوستاف الثاني أدولف", "كارل الثاني عشر", "غوستاف الثالث"],
        correct: 0
    },
    {
        question: "ما هي أقدم دولة في أوروبا الغربية الجنوبية الغربية؟",
        options: ["البرتغال", "إسبانيا", "أندورا", "موناكو"],
        correct: 0
    },
    {
        question: "من هو مؤسس إمارة موناكو؟",
        options: ["فرانسوا غريمالدي", "شارل الأول", "هونوري الثاني", "لويس الأول"],
        correct: 0
    },
    {
        question: "ما هي الحرب التي أدت إلى استقلال موناكو؟",
        options: ["حرب الاستقلال الموناكية", "حرب التحرير الموناكية", "حرب موناكو-فرنسا", "حرب موناكو-إيطاليا"],
        correct: 0
    },
    {
        question: "من هو موحد موناكو الحديثة؟",
        options: ["شارل الثالث", "ألبرت الأول", "لويس الثاني", "رانير الثالث"],
        correct: 0
    },
    {
        question: "ما هي أقدم دولة في أوروبا الغربية الجنوبية الشرقية؟",
        options: ["إسبانيا", "أندورا", "موناكو", "إيطاليا"],
        correct: 0
    },
    {
        question: "من هو مؤسس مملكة إسبانيا؟",
        options: ["فرديناند الثاني", "إيزابيلا الأولى", "كارلوس الأول", "فيليب الثاني"],
        correct: 0
    },
    {
        question: "ما هي الحرب التي أدت إلى استقلال إسبانيا؟",
        options: ["حرب الاستقلال الإسبانية", "حرب التحرير الإسبانية", "حرب إسبانيا-فرنسا", "حرب إسبانيا-بريطانيا"],
        correct: 0
    },
    {
        question: "من هو موحد إسبانيا الحديثة؟",
        options: ["فرديناند الثاني", "إيزابيلا الأولى", "كارلوس الأول", "فيليب الثاني"],
        correct: 0
    },
    {
        question: "ما هي أقدم دولة في أوروبا الشرقية الشمالية الغربية؟",
        options: ["إستونيا", "لاتفيا", "ليتوانيا", "فنلندا"],
        correct: 0
    },
    {
        question: "من هو مؤسس جمهورية إستونيا؟",
        options: ["كونستانتين باتس", "يان تونيسون", "يورى أولوتس", "كونراد يوهانسون"],
        correct: 0
    },
    {
        question: "ما هي الحرب التي أدت إلى استقلال إستونيا؟",
        options: ["حرب الاستقلال الإستونية", "ثورة 1918", "ثورة 1989", "حرب إستونيا-روسيا"],
        correct: 0
    },
    {
        question: "من هو موحد إستونيا الحديثة؟",
        options: ["كونستانتين باتس", "لينارت ميري", "أرنولد رووتل", "تووماس هندريك إلفيس"],
        correct: 1
    },
    {
        question: "ما هي أقدم دولة في أوروبا الشرقية الشمالية الشرقية؟",
        options: ["لاتفيا", "إستونيا", "ليتوانيا", "روسيا"],
        correct: 0
    },
    {
        question: "من هو مؤسس جمهورية لاتفيا؟",
        options: ["كارليس أولمانيس", "يانيس تشاكستيس", "أندريفس نييدرا", "بيتريس ستويكا"],
        correct: 0
    },
    {
        question: "ما هي الحرب التي أدت إلى استقلال لاتفيا؟",
        options: ["حرب الاستقلال اللاتفية", "ثورة 1918", "ثورة 1989", "حرب لاتفيا-روسيا"],
        correct: 0
    },
    {
        question: "من هو موحد لاتفيا الحديثة؟",
        options: ["غونتيس أولمانيس", "فيزما بيلس", "فالديس زاتليرس", "أندريس بيرزينش"],
        correct: 0
    },
    {
        question: "ما هي أقدم دولة في أوروبا الشرقية الجنوبية الغربية؟",
        options: ["رومانيا", "بلغاريا", "صربيا", "مولدوفا"],
        correct: 0
    },
    {
        question: "من هو مؤسس جمهورية مولدوفا؟",
        options: ["ميرسيا سناتور", "بيتر لوتشينسكي", "فولوديمير فورونين", "نيكولاي تيموفتي"],
        correct: 0
    },
    {
        question: "ما هي الحرب التي أدت إلى استقلال مولدوفا؟",
        options: ["حرب الاستقلال المولدوفية", "ثورة 1989", "ثورة 2009", "حرب مولدوفا-روسيا"],
        correct: 0
    },
    {
        question: "من هو موحد مولدوفا الحديثة؟",
        options: ["ميرسيا سناتور", "بيتر لوتشينسكي", "فولوديمير فورونين", "نيكولاي تيموفتي"],
        correct: 0
    },
    {
        question: "ما هي أقدم دولة في أوروبا الشرقية الجنوبية الشرقية؟",
        options: ["أوكرانيا", "بيلاروسيا", "روسيا", "مولدوفا"],
        correct: 1
    },
    {
        question: "من هو مؤسس جمهورية بيلاروسيا؟",
        options: ["ستانيسلاف شوشكيفيتش", "فياتشيسلاف كوزنتسوف", "ألكسندر لوكاشينكو", "سيرجي سيدورسكي"],
        correct: 0
    },
    {
        question: "ما هي الحرب التي أدت إلى استقلال بيلاروسيا؟",
        options: ["حرب الاستقلال البيلاروسية", "ثورة 1991", "ثورة 2020", "حرب بيلاروسيا-روسيا"],
        correct: 0
    },
    {
        question: "من هو موحد بيلاروسيا الحديثة؟",
        options: ["ستانيسلاف شوشكيفيتش", "فياتشيسلاف كوزنتسوف", "ألكسندر لوكاشينكو", "سيرجي سيدورسكي"],
        correct: 2
    },
    {
        question: "ما هي أقدم دولة في أوروبا الوسطى الشرقية الشمالية؟",
        options: ["لاتفيا", "ليتوانيا", "إستونيا", "بولندا"],
        correct: 1
    },
    {
        question: "من هو مؤسس جمهورية ليتوانيا؟",
        options: ["أنطاناس سمتانا", "أوغوستيناس فولديماراس", "أنطاناس سنيكا", "أنطاناس ميركيس"],
        correct: 0
    },
    {
        question: "ما هي الحرب التي أدت إلى استقلال ليتوانيا؟",
        options: ["حرب الاستقلال الليتوانية", "ثورة 1918", "ثورة 1989", "حرب ليتوانيا-روسيا"],
        correct: 0
    },
    {
        question: "من هو موحد ليتوانيا الحديثة؟",
        options: ["أنطاناس سمتانا", "أوغوستيناس فولديماراس", "أنطاناس سنيكا", "أنطاناس ميركيس"],
        correct: 0
    },
    {
        question: "ما هي أقدم دولة في أوروبا الوسطى الشرقية الجنوبية؟",
        options: ["أوكرانيا", "مولدوفا", "رومانيا", "بلغاريا"],
        correct: 0
    }
];


// تهيئة التطبيق
document.addEventListener('DOMContentLoaded', function() {
    initializeApp();
    setupEventListeners();
    checkAuthStatus();
});

// تهيئة التطبيق
function initializeApp() {
    // إخفاء جميع الشاشات
    document.querySelectorAll('.screen').forEach(screen => {
        screen.classList.remove('active');
    });

    // عرض شاشة تسجيل الدخول
    document.getElementById('loginScreen').classList.add('active');

    // تهيئة الأصوات
    initializeAudio();
}

// إعداد مستمعي الأحداث
function setupEventListeners() {
    // تسجيل الدخول
    document.getElementById('loginForm').addEventListener('submit', handleLogin);
    document.getElementById('registerForm').addEventListener('submit', handleRegister);
    document.getElementById('guestForm').addEventListener('submit', handleGuestLogin);

    // إرسال الرسائل
    document.getElementById('messageInput').addEventListener('keypress', function(e) {
        if (e.key === 'Enter' && !e.shiftKey) {
            e.preventDefault();
            sendMessage();
        }
    });

    // رفع الصور
    document.getElementById('imageInput').addEventListener('change', handleImageUpload);

    // تغيير الغرفة
    document.getElementById('roomSelect').addEventListener('change', changeRoom);

    // إغلاق المودالات عند النقر خارجها
    document.addEventListener('click', function(e) {
        if (e.target.classList.contains('modal')) {
            closeAllModals();
        }
    });
}

// التحقق من حالة المصادقة
function checkAuthStatus() {
    const token = localStorage.getItem('chatToken');
    if (token) {
        // التحقق من صحة التوكن
        fetch('/api/user/profile', {
            headers: {
                'Authorization': `Bearer ${token}`
            }
        })
        .then(response => {
            if (response.ok) {
                return response.json();
            }
            throw new Error('Invalid token');
        })
        .then(user => {
            currentUser = user;
            showMainScreen();
            initializeSocket();
        })
        .catch(() => {
            localStorage.removeItem('chatToken');
            showLoginScreen();
        });
    } else {
        showLoginScreen();
    }
}

// عرض شاشة تسجيل الدخول
function showLoginScreen() {
    document.querySelectorAll('.screen').forEach(screen => {
        screen.classList.remove('active');
    });
    document.getElementById('loginScreen').classList.add('active');
}

// عرض الشاشة الرئيسية - النسخة المُحسّنة لحل مشكلة السحب اليدوي
function showMainScreen() {
    // 1. إخفاء جميع الشاشات
    document.querySelectorAll('.screen').forEach(screen => {
        screen.classList.remove('active');
    });

    // 2. عرض الشاشة الرئيسية فقط
    const mainScreen = document.getElementById('mainScreen');
    if (mainScreen) {
        mainScreen.classList.add('active');
    }

    // 3. التمرير الفوري للأعلى (لضمان عدم بقاء المستخدم في أسفل الصفحة)
    window.scrollTo(0, 0);
    document.documentElement.scrollTop = 0;
    document.body.scrollTop = 0;

    // 4. تحديث واجهة المستخدم
    updateUserInterface();

    // 5. تحميل البيانات بعد عرض الشاشة
    loadRooms();
    loadMessages();

    // 6. (اختياري) تأكيد التمرير بعد تحميل المحتوى (لضمان الظهور الصحيح)
    setTimeout(() => {
        window.scrollTo(0, 0);
    }, 100);
}

// تحديث واجهة المستخدم - نفس الكود مع تحسين بسيط
function updateUserInterface() {
    if (!currentUser) return;

    // تحديث معلومات المستخدم في الشريط العلوي
    document.getElementById('headerUserName').textContent = currentUser.display_name || currentUser.email;
    document.getElementById('headerUserRank').textContent = RANKS[currentUser.rank]?.name || 'زائر';

    // تحديث صورة المستخدم
    const avatarImg = document.getElementById('headerUserAvatar');
    if (currentUser.profile_image1) {
        avatarImg.src = currentUser.profile_image1;
    }

    // إظهار أزرار الإدارة حسب الدور
    const adminBtn = document.getElementById('adminPanelBtn');
    const roomsBtn = document.getElementById('roomsManagerBtn');
    const clearBtn = document.getElementById('clearChatBtn');

    if (currentUser.role === 'admin' || currentUser.role === 'owner') {
        if (adminBtn) adminBtn.style.display = 'block';
        if (roomsBtn) roomsBtn.style.display = 'block';
        if (clearBtn) clearBtn.style.display = 'block';
    }

    // تعيين دور المستخدم في الجسم
    document.body.setAttribute('data-user-role', currentUser.role);
}

// تهيئة Socket.IO
function initializeSocket() {
    const token = localStorage.getItem('chatToken');
    socket = io({
        auth: {
            token: token
        }
    });

    // الاتصال
    socket.on('connect', () => {
        console.log('متصل بالخادم');
        socket.emit('join', {
            userId: currentUser.id,
            displayName: currentUser.display_name,
            rank: currentUser.rank,
            email: currentUser.email,
            roomId: currentRoom,
            token: token
        });
    });

    // رسالة جديدة
    socket.on('newMessage', (message) => {
        displayMessage(message);
        playNotificationSound();
    });

    // رسالة خاصة جديدة
    socket.on('newPrivateMessage', (message) => {
        if (chatMode === 'private' && 
            (message.user_id === selectedUserId || message.receiver_id === currentUser.id)) {
            displayPrivateMessage(message);
        }
        playNotificationSound();
        updateNotificationCount();
    });

    // تحديث قائمة المستخدمين
    socket.on('roomUsersList', (users) => {
        updateUsersList(users);
    });

    // حذف رسالة
    socket.on('messageDeleted', (messageId) => {
        const messageElement = document.querySelector(`[data-message-id="${messageId}"]`);
        if (messageElement) {
            messageElement.remove();
        }
    });

    // إشعار جديد
    socket.on('newNotification', (notification) => {
        showNotification(notification.message, notification.type || 'info');
        updateNotificationCount();
        notificationsList.push(notification);
    });

    // تحديث قائمة المتصلين
    socket.on('onlineUsersUpdated', (users) => {
        onlineUsersList = users;
        // تحديث العدد في الشريط الجانبي
        const sidebarCount = document.getElementById('onlineCount');
        if (sidebarCount) {
            sidebarCount.textContent = users.length;
        }

        // تحديث قائمة المتصلين في المودال إذا كان مفتوحاً
        const modal = document.getElementById('onlineUsersModal');
        if (modal && modal.classList.contains('modal') && modal.style.display !== 'none') {
            displayOnlineUsers();
        }
    });

    // قطع الاتصال
    socket.on('disconnect', () => {
        console.log('انقطع الاتصال بالخادم');
        showNotification('انقطع الاتصال بالخادم', 'error');
    });

    // معالجة أخطاء الأمان
    socket.on('error', (errorMessage) => {
        console.error('خطأ في الأمان:', errorMessage);
        showNotification('خطأ في الأمان: ' + errorMessage, 'error');
        // إعادة توجيه لصفحة تسجيل الدخول
        localStorage.removeItem('chatToken');
        showLoginScreen();
    });
}

// تسجيل الدخول
async function handleLogin(e) {
    e.preventDefault();

    const email = document.getElementById('loginEmail').value;
    const password = document.getElementById('loginPassword').value;

    if (!email || !password) {
        showError('يرجى ملء جميع الحقول');
        return;
    }

    try {
        showLoading(true);

        const response = await fetch('/api/login', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ email, password })
        });

        const data = await response.json();

        if (response.ok) {
            localStorage.setItem('chatToken', data.token);
            currentUser = data.user;

            // إذا المستخدم محظور، أظهر له رسالة تنبيه فقط
            if (currentUser.isBanned) {
                showNotification(`أنت محظور! السبب: ${currentUser.banReason}`, 'error');
                return; 
            }

            // المستخدم غير محظور، يدخل الشات مباشرة
            showMainScreen();      // ✅ هذا يكفي الآن
            initializeSocket();
            showNotification('تم تسجيل الدخول بنجاح', 'success');
            // ❌ تم حذف scrollToChat() لأن showMainScreen() تتعامل مع التمرير تلقائيًا
        } else {
            showError(data.error);
        }
    } catch (error) {
        showError('حدث خطأ في الاتصال');
    } finally {
        showLoading(false);
    }
}

// إنشاء حساب جديد
async function handleRegister(e) {
    e.preventDefault();

    const displayName = document.getElementById('registerDisplayName').value;
    const email = document.getElementById('registerEmail').value;
    const password = document.getElementById('registerPassword').value;

    if (!email || !password) {
        showError('يرجى ملء جميع الحقول المطلوبة');
        return;
    }

    if (password.length < 6) {
        showError('كلمة المرور يجب أن تكون 6 أحرف على الأقل');
        return;
    }

    try {
        showLoading(true);

        const response = await fetch('/api/register', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ email, password, display_name: displayName })
        });

        const data = await response.json();

        if (response.ok) {
            localStorage.setItem('chatToken', data.token);
            currentUser = data.user;
            showMainScreen();      // ✅ هذا يكفي الآن
            initializeSocket();
            showNotification('تم إنشاء الحساب بنجاح', 'success');
            // ❌ تم حذف scrollToChat()
        } else {
            showError(data.error);
        }
    } catch (error) {
        showError('حدث خطأ في الاتصال');
    } finally {
        showLoading(false);
    }
}

// دخول كزائر
async function handleGuestLogin(e) {
    e.preventDefault();

    const name = document.getElementById('guestName').value;
    const age = document.getElementById('guestAge').value;
    const gender = document.getElementById('guestGender').value;

    if (!name || !age || !gender) {
        showError('يرجى ملء جميع الحقول');
        return;
    }

    if (age < 13 || age > 99) {
        showError('العمر يجب أن يكون بين 13 و 99 سنة');
        return;
    }

    // إنشاء مستخدم زائر مؤقت
    currentUser = {
        id: Date.now(),
        display_name: name,
        email: `guest_${Date.now()}@temp.com`,
        role: 'user',
        rank: 'visitor',
        age: parseInt(age),
        gender: gender,
        isGuest: true
    };

    showMainScreen();          // ✅ هذا يكفي الآن
    initializeSocket();
    showNotification('مرحباً بك كزائر', 'success');
    // ❌ تم حذف scrollToChat()
}

// التحقق من حالة الحظر مع عرض السبب ومنع الدخول إذا محظور
async function checkBanStatus() {
    const token = localStorage.getItem('chatToken');
    if (!token) {
        showLoginScreen();
        return;
    }

    try {
        const response = await fetch('/api/user/profile', {
            headers: {
                'Authorization': `Bearer ${token}`
            }
        });

        if (response.ok) {
            const user = await response.json();
            currentUser = user;

            if (user.isBanned) {
                // المستخدم محظور، عرض سبب الحظر ومنعه من الدخول
                showBanScreen(user.banReason);
                return;
            }

            // المستخدم مسموح له بالدخول
            showMainScreen();
            initializeSocket();
            showNotification('تم رفع الحظر', 'success');


        } else {
            showError('تعذر التحقق من المستخدم');
        }

    } catch (error) {
        showError('حدث خطأ في التحقق من حالة الحظر');
    }
}

// دالة عرض شاشة الحظر مع السبب
function showBanScreen(reason) {
    document.body.innerHTML = `
        <div style="text-align:center; margin-top:50px; font-family:sans-serif;">
            <h1 style="color:red;">أنت محظور</h1>
            <p>السبب: ${reason}</p>
        </div>
    `;
}

// ✨ دالة التمرير التلقائي الفوري للشات - الحل النهائي
function scrollToChat() {
    // إزالة السكرول فوراً
    document.body.scrollTop = 0;
    document.documentElement.scrollTop = 0;
    window.scrollTo(0, 0);

    // إخفاء صفحة التسجيل تماماً
    const authSection = document.getElementById('authSection');
    if (authSection) {
        authSection.style.display = 'none';
        authSection.style.position = 'absolute';
        authSection.style.visibility = 'hidden';
        authSection.style.height = '0';
        authSection.style.overflow = 'hidden';
        authSection.style.zIndex = '-9999';
    }

    // التأكد من ظهور الشات
    const chatSection = document.getElementById('chatSection');
    if (chatSection) {
        chatSection.style.display = 'flex';
        chatSection.style.visibility = 'visible';
        chatSection.style.position = 'relative';
        chatSection.style.zIndex = '1';
    }

    // تنفيذ مرة ثانية للتأكد
    setTimeout(() => {
        window.scrollTo({ top: 0, behavior: 'instant' });
        document.body.scrollTop = 0;
        document.documentElement.scrollTop = 0;
    }, 50);

    // تنفيذ مرة ثالثة بعد تحميل العناصر
    setTimeout(() => {
        window.scrollTo(0, 0);
    }, 200);
}

// تحميل الغرف
async function loadRooms() {
    try {
        const token = localStorage.getItem('chatToken');
        const response = await fetch('/api/rooms', {
            headers: {
                'Authorization': `Bearer ${token}`
            }
        });

        if (response.ok) {
            const rooms = await response.json();
            updateRoomsSelect(rooms);
        }
    } catch (error) {
        console.error('خطأ في تحميل الغرف:', error);
    }
}

// تحديث قائمة الغرف
function updateRoomsSelect(rooms) {
    const select = document.getElementById('roomSelect');
    select.innerHTML = '';

    rooms.forEach(room => {
        const option = document.createElement('option');
        option.value = room.id;
        option.textContent = room.name;
        if (room.id === currentRoom) {
            option.selected = true;
        }
        select.appendChild(option);
    });
}

// تغيير الغرفة
function changeRoom() {
    const newRoomId = parseInt(document.getElementById('roomSelect').value);
    if (newRoomId !== currentRoom) {
        currentRoom = newRoomId;

        // إشعار الخادم بتغيير الغرفة
        if (socket) {
            socket.emit('changeRoom', newRoomId);
        }

        // تحديث اسم الغرفة
        const roomName = document.getElementById('roomSelect').selectedOptions[0].textContent;
        document.getElementById('currentRoomName').textContent = roomName;

        // مسح الرسائل وتحميل رسائل الغرفة الجديدة
        document.getElementById('messagesContainer').innerHTML = '';
        loadMessages();
    }
}

// تحميل الرسائل
async function loadMessages() {
    try {
        const token = localStorage.getItem('chatToken');
        if (!token && !currentUser?.isGuest) return;

        const headers = {};
        if (token) {
            headers['Authorization'] = `Bearer ${token}`;
        }

        const response = await fetch(`/api/messages/${currentRoom}`, { headers });

        if (response.ok) {
            const messages = await response.json();
            const container = document.getElementById('messagesContainer');
            container.innerHTML = '';

            messages.forEach(message => {
                displayMessage(message);
            });

            scrollToBottom();
        }
    } catch (error) {
        console.error('خطأ في تحميل الرسائل:', error);
    }
}

// عرض رسالة - النسخة المُصححة
function displayMessage(message) {
    const container = document.getElementById('messagesContainer');
    const messageDiv = document.createElement('div');
    messageDiv.className = `message ${message.user_id === currentUser?.id ? 'own' : ''}`;
    messageDiv.setAttribute('data-message-id', message.id);

    const rank = RANKS[message.rank] || RANKS.visitor;
    const time = new Date(message.timestamp).toLocaleTimeString('ar-SA', {
        hour: '2-digit',
        minute: '2-digit'
    });

    let messageContent = '';

    // ✅ التحقق من نوع المحتوى
        if (message.message || message.content) {
        messageContent = `<div class="message-text">${escapeHtml(message.message)}</div>`;
    } else if (message.voice_url) {
        messageContent = `<audio class="message-audio" controls>
            <source src="${message.voice_url}" type="audio/webm">
            متصفحك لا يدعم تشغيل الصوت
        </audio>`;
    } else if (message.image_url) {
        messageContent = `<img class="message-image" src="${message.image_url}" alt="صورة" onclick="openImageModal('${message.image_url}')">`;
    }

    messageDiv.innerHTML = `
        <img class="message-avatar" 
             src="${message.profile_image1 || 'https://images.pexels.com/photos/771742/pexels-photo-771742.jpeg?auto=compress&cs=tinysrgb&w=100&h=100&fit=crop'}" 
             alt="صورة ${message.display_name}" 
             onclick="openUserProfile(${message.user_id})">
        <div class="message-content" style="${message.message_background ? `background-image: url(${message.message_background})` : ''}">
            <div class="message-header">
                <span class="message-author rank-${message.rank}" onclick="openUserProfile(${message.user_id})">${escapeHtml(message.display_name)}</span>
                <span class="message-rank">${rank.emoji} ${rank.name}</span>
                <span class="message-time">${time}</span>
            </div>
            ${messageContent}
        </div>
    `;

    container.appendChild(messageDiv);
    scrollToBottom();
    console.log('✅ تم عرض الرسالة:', message);
}
// تحميل الرسائل
async function loadMessages() {
    try {
        const token = localStorage.getItem('chatToken');
        if (!token && !currentUser?.isGuest) return;

        const headers = {};
        if (token) {
            headers['Authorization'] = `Bearer ${token}`;
        }

        const response = await fetch(`/api/messages/${currentRoom}`, { headers });

        if (response.ok) {
            const messages = await response.json();
            const container = document.getElementById('messagesContainer');
            container.innerHTML = '';

            messages.forEach(message => {
                displayMessage(message);
            });

            scrollToBottom();
        }
    } catch (error) {
        console.error('خطأ في تحميل الرسائل:', error);
    }
}

// عرض رسالة
function displayMessage(message) {
    const container = document.getElementById('messagesContainer');
    const messageDiv = document.createElement('div');
    messageDiv.className = `message ${message.user_id === currentUser?.id ? 'own' : ''}`;
    messageDiv.setAttribute('data-message-id', message.id);

    const rank = RANKS[message.rank] || RANKS.visitor;
    const time = new Date(message.timestamp).toLocaleTimeString('ar-SA', {
        hour: '2-digit',
        minute: '2-digit'
    });

    let messageContent = '';

    // محتوى الرسالة
        if (message.message || message.content) {
        messageContent = `<div class="message-text">${escapeHtml(message.message)}</div>`;
    } else if (message.voice_url) {
        messageContent = `<audio class="message-audio" controls>
            <source src="${message.voice_url}" type="audio/webm">
            متصفحك لا يدعم تشغيل الصوت
        </audio>`;
    } else if (message.image_url) {
        messageContent = `<img class="message-image" src="${message.image_url}" alt="صورة" onclick="openImageModal('${message.image_url}')">`;
    }

    messageDiv.innerHTML = `
        <img class="message-avatar" src="${message.profile_image1 || 'https://images.pexels.com/photos/771742/pexels-photo-771742.jpeg?auto=compress&cs=tinysrgb&w=100&h=100&fit=crop'}" 
             alt="صورة ${message.display_name}" onclick="openUserProfile(${message.user_id})">
        <div class="message-content" style="${message.message_background ? `background-image: url(${message.message_background})` : ''}">
            <div class="message-header">
                <span class="message-author rank-${message.rank}" onclick="openUserProfile(${message.user_id})">${escapeHtml(message.display_name)}</span>
                <span class="message-rank">${rank.emoji} ${rank.name}</span>
                <span class="message-time">${time}</span>
            </div>
            ${messageContent}
        </div>
    `;

    container.appendChild(messageDiv);
    scrollToBottom();
}

// إرسال رسالة - الكود المُصحح
function sendMessage() {
    const input = document.getElementById('messageInput');
    const message = input.value.trim();

    if (!message) {
        console.warn('⚠️ الرسالة فارغة');
        return;
    }

    if (message.length > 1000) {
        showError('الرسالة طويلة جداً (الحد الأقصى 1000 حرف)');
        return;
    }

    if (!socket || !socket.connected) {
        showError('❌ لا يوجد اتصال بالخادم');
        console.error('Socket غير متصل:', socket);
        return;
    }

    console.log('📤 جاري إرسال الرسالة:', message);

    const messageData = {
        content: message,  // ✅ هذا هو الصحيح
        roomId: currentRoom
    };

    // إضافة الاقتباس إذا كان موجوداً
    if (quotedMessage) {
        messageData.quoted_message_id = quotedMessage.id;
        messageData.quoted_author = quotedMessage.author;
        messageData.quoted_content = quotedMessage.content;
    }

    socket.emit('sendMessage', messageData);
    input.value = '';
    cancelQuote();

    console.log('✅ تم إرسال الرسالة بنجاح');
}

// رفع صورة
function handleImageUpload(e) {
    const file = e.target.files[0];
    if (!file) return;

    if (!file.type.startsWith('image/')) {
        showError('يرجى اختيار صورة صحيحة');
        return;
    }

    if (file.size > 5 * 1024 * 1024) {
        showError('حجم الصورة كبير جداً (الحد الأقصى 5 ميجابايت)');
        return;
    }

    const formData = new FormData();
    formData.append('image', file);

    showLoading(true);

    fetch('/api/upload-image', {
        method: 'POST',
        headers: {
            'Authorization': `Bearer ${localStorage.getItem('chatToken')}`
        },
        body: formData
    })
    .then(response => response.json())
    .then(data => {
        if (data.image_url && socket) {
            socket.emit('sendMessage', {
                image_url: data.image_url,
                roomId: currentRoom
            });
        } else {
            showError('فشل في رفع الصورة');
        }
    })
    .catch(error => {
        showError('حدث خطأ في رفع الصورة');
    })
    .finally(() => {
        showLoading(false);
        e.target.value = '';
    });
}

// تسجيل صوتي
function toggleVoiceRecording() {
    if (isRecording) {
        stopRecording();
    } else {
        startRecording();
    }
}

// بدء التسجيل
async function startRecording() {
    try {
        const stream = await navigator.mediaDevices.getUserMedia({ audio: true });
        mediaRecorder = new MediaRecorder(stream);
        audioChunks = [];

        mediaRecorder.ondataavailable = (event) => {
            audioChunks.push(event.data);
        };

        mediaRecorder.onstop = () => {
            const audioBlob = new Blob(audioChunks, { type: 'audio/webm' });
            uploadVoiceMessage(audioBlob);
            stream.getTracks().forEach(track => track.stop());
        };

        mediaRecorder.start();
        isRecording = true;

        const voiceBtn = document.getElementById('voiceBtn');
        voiceBtn.classList.add('recording');
        voiceBtn.innerHTML = '<i class="fas fa-stop"></i>';

        showNotification('بدأ التسجيل...', 'info');
    } catch (error) {
        showError('لا يمكن الوصول للميكروفون');
    }
}

// إيقاف التسجيل
function stopRecording() {
    if (mediaRecorder && isRecording) {
        mediaRecorder.stop();
        isRecording = false;

        const voiceBtn = document.getElementById('voiceBtn');
        voiceBtn.classList.remove('recording');
        voiceBtn.innerHTML = '<i class="fas fa-microphone"></i>';

        showNotification('تم إيقاف التسجيل', 'success');
    }
}

// رفع رسالة صوتية
function uploadVoiceMessage(audioBlob) {
    const formData = new FormData();
    formData.append('voice', audioBlob, 'voice.webm');

    showLoading(true);

    fetch('/api/upload-voice', {
        method: 'POST',
        headers: {
            'Authorization': `Bearer ${localStorage.getItem('chatToken')}`
        },
        body: formData
    })
    .then(response => response.json())
    .then(data => {
        if (data.voice_url && socket) {
            socket.emit('sendMessage', {
                voice_url: data.voice_url,
                roomId: currentRoom
            });
        } else {
            showError('فشل في رفع التسجيل الصوتي');
        }
    })
    .catch(error => {
        showError('حدث خطأ في رفع التسجيل الصوتي');
    })
    .finally(() => {
        showLoading(false);
    });
}

// تحديث قائمة المستخدمين
function updateUsersList(users) {
    const container = document.getElementById('onlineUsersList');
    const countElement = document.getElementById('onlineCount');

    container.innerHTML = '';
    countElement.textContent = users.length;

    // ترتيب المستخدمين حسب الرتبة
    users.sort((a, b) => {
        const rankA = RANKS[a.rank] || RANKS.visitor;
        const rankB = RANKS[b.rank] || RANKS.visitor;
        return rankB.level - rankA.level;
    });

    users.forEach(user => {
        if (user.userId === currentUser?.id) return; // لا نعرض المستخدم الحالي

        const userDiv = document.createElement('div');
        userDiv.className = 'user-item';
        userDiv.onclick = () => openUserActions(user);

        const rank = RANKS[user.rank] || RANKS.visitor;

        userDiv.innerHTML = `
            <img class="user-avatar" src="https://images.pexels.com/photos/771742/pexels-photo-771742.jpeg?auto=compress&cs=tinysrgb&w=100&h=100&fit=crop" alt="${user.displayName}">
            <div class="user-details">
                <div class="user-display-name rank-${user.rank}">${escapeHtml(user.displayName)}</div>
                <div class="user-status">${rank.emoji} ${rank.name}</div>
            </div>
        `;

        container.appendChild(userDiv);
    });
}

// فتح إجراءات المستخدم
function openUserActions(user) {
    selectedUserId = user.userId;

    document.getElementById('actionUserName').textContent = user.displayName;
    document.getElementById('actionUserAvatar').src = 'https://images.pexels.com/photos/771742/pexels-photo-771742.jpeg?auto=compress&cs=tinysrgb&w=100&h=100&fit=crop';

    openModal('userActionsModal');
}

// بدء دردشة خاصة
function startPrivateChat() {
    if (!selectedUserId) return;

    chatMode = 'private';
    document.getElementById('chatModeText').textContent = 'خاص';

    // تحديث واجهة الدردشة الخاصة
    loadPrivateMessages();
    closeAllModals();

    showNotification('تم التبديل للدردشة الخاصة', 'info');
}

// تحميل الرسائل الخاصة
async function loadPrivateMessages() {
    if (!selectedUserId) return;

    try {
        const token = localStorage.getItem('chatToken');
        const response = await fetch(`/api/private-messages/${selectedUserId}`, {
            headers: {
                'Authorization': `Bearer ${token}`
            }
        });

        if (response.ok) {
            const messages = await response.json();
            const container = document.getElementById('messagesContainer');
            container.innerHTML = '';

            messages.forEach(message => {
                displayPrivateMessage(message);
            });

            scrollToBottom();
        }
    } catch (error) {
        console.error('خطأ في تحميل الرسائل الخاصة:', error);
    }
}

// عرض رسالة خاصة
function displayPrivateMessage(message) {
    const container = document.getElementById('messagesContainer');
    const messageDiv = document.createElement('div');
    messageDiv.className = `message ${message.user_id === currentUser?.id ? 'own' : ''}`;
    messageDiv.setAttribute('data-message-id', message.id);

    const rank = RANKS[message.rank] || RANKS.visitor;
    const time = new Date(message.timestamp).toLocaleTimeString('ar-SA', {
        hour: '2-digit',
        minute: '2-digit'
    });

    let messageContent = '';

    if (message.message || message.content) {
        messageContent = `<div class="message-text">${escapeHtml(message.message)}</div>`;
    } else if (message.voice_url) {
        messageContent = `<audio class="message-audio" controls>
            <source src="${message.voice_url}" type="audio/webm">
        </audio>`;
    } else if (message.image_url) {
        messageContent = `<img class="message-image" src="${message.image_url}" alt="صورة" onclick="openImageModal('${message.image_url}')">`;
    }

    messageDiv.innerHTML = `
        <img class="message-avatar" src="https://images.pexels.com/photos/771742/pexels-photo-771742.jpeg?auto=compress&cs=tinysrgb&w=100&h=100&fit=crop" alt="${message.display_name}">
        <div class="message-content">
            <div class="message-header">
                <span class="message-author rank-${message.rank}">${escapeHtml(message.display_name)}</span>
                <span class="message-rank">${rank.emoji} ${rank.name}</span>
                <span class="message-time">${time}</span>
            </div>
            ${messageContent}
        </div>
    `;

    container.appendChild(messageDiv);
    scrollToBottom();
}

// تبديل وضع الدردشة
function toggleChatMode() {
    if (chatMode === 'public') {
        // التبديل للخاص يتطلب اختيار مستخدم
        showNotification('اختر مستخدماً لبدء دردشة خاصة', 'info');
    } else {
        // العودة للعام
        chatMode = 'public';
        selectedUserId = null;
        document.getElementById('chatModeText').textContent = 'عام';
        loadMessages();
        showNotification('تم التبديل للدردشة العامة', 'info');
    }
}

// فتح القائمة الرئيسية
function openMainMenu() {
    openModal('mainMenuModal');
}

// إغلاق القائمة الرئيسية
function closeMainMenu() {
    closeModal('mainMenuModal');
}

const express = require('express');
const http = require('http');
const socketIo = require('socket.io');
const multer = require('multer');
const path = require('path');
const bodyParser = require('body-parser');

const app = express();
const server = http.createServer(app);
const io = socketIo(server, {
    cors: { origin: '*' } // للسماح بالاتصال من أي مصدر
});

app.use(bodyParser.json());
app.use(express.static('Uploads')); // لخدمة الملفات (صور، صوت) من مجلد Uploads

// إعداد Multer لتخزين الملفات مع حد للحجم
const storage = multer.diskStorage({
    destination: (req, file, cb) => cb(null, 'Uploads/'),
    filename: (req, file, cb) => cb(null, Date.now() + path.extname(file.originalname))
});
const upload = multer({ 
    storage,
    limits: { fileSize: 5 * 1024 * 1000 }, // حد 5 ميغابايت
    fileFilter: (req, file, cb) => {
        const filetypes = /jpeg|jpg|png|webm/;
        const extname = filetypes.test(path.extname(file.originalname).toLowerCase());
        const mimetype = filetypes.test(file.mimetype);
        if (extname && mimetype) {
            return cb(null, true);
        } else {
            cb(new Error('الملف يجب أن يكون صورة (jpeg/png) أو صوت (webm)'));
        }
    }
});

// مصفوفات مؤقتة لتخزين البيانات
let rooms = [
    { id: 1, name: 'الغرفة الرئيسية', description: 'غرفة دردشة عامة', background: null }
];

let users = [
    { id: 1, display_name: 'Admin', rank: 'admin', role: 'admin', email: 'admin@example.com', password: 'admin', profile_image1: null, profile_image2: null, message_background: null, age: null, gender: null, marital_status: null, about_me: null }
];

let messages = [];
let privateMessages = [];
let news = [];
let stories = [];
let bans = [];
let mutes = [];
let floodProtection = new Map(); // لحماية من الفيضانات
let competitions = [];
let comments = [];

// API لتسجيل الدخول
app.post('/api/login', (req, res) => {
    const { email, password } = req.body;
    const user = users.find(u => u.email === email && u.password === password);
    if (user) {
        const token = 'fake-token-' + user.id;
        res.json({ token, user });
    } else {
        res.status(401).json({ error: 'بيانات تسجيل الدخول غير صحيحة' });
    }
});

// API لإنشاء حساب
app.post('/api/register', (req, res) => {
    const { email, password, display_name } = req.body;
    if (users.find(u => u.email === email)) {
        return res.status(400).json({ error: 'البريد الإلكتروني موجود مسبقًا' });
    }
    const newUser = {
        id: users.length + 1,
        email,
        password,
        display_name,
        rank: 'visitor',
        role: 'user',
        profile_image1: null,
        profile_image2: null,
        message_background: null,
        age: null,
        gender: null,
        marital_status: null,
        about_me: null
    };
    users.push(newUser);
    const token = 'fake-token-' + newUser.id;
    res.json({ token, user: newUser });
});

// API للحصول على بيانات الملف الشخصي
app.get('/api/user/profile', (req, res) => {
    const token = req.headers.authorization?.split(' ')[1];
    const user = users.find(u => 'fake-token-' + u.id === token);
    if (user) res.json(user);
    else res.status(401).json({ error: 'غير مصرح له' });
});

// API لتحديث الملف الشخصي
app.put('/api/user/profile', upload.fields([
    { name: 'profileImage1', maxCount: 1 },
    { name: 'profileImage2', maxCount: 1 },
    { name: 'messageBackground', maxCount: 1 }
]), (req, res) => {
    const token = req.headers.authorization?.split(' ')[1];
    const user = users.find(u => 'fake-token-' + u.id === token);
    if (!user) return res.status(401).json({ error: 'غير مصرح له' });

    const { display_name, age, gender, marital_status, about_me } = req.body;
    if (display_name) user.display_name = display_name;
    if (age) user.age = parseInt(age);
    if (gender) user.gender = gender;
    if (marital_status) user.marital_status = marital_status;
    if (about_me) user.about_me = about_me;

    if (req.files['profileImage1']) user.profile_image1 = `/Uploads/${req.files['profileImage1'][0].filename}`;
    if (req.files['profileImage2']) user.profile_image2 = `/Uploads/${req.files['profileImage2'][0].filename}`;
    if (req.files['messageBackground']) user.message_background = `/Uploads/${req.files['messageBackground'][0].filename}`;

    res.json(user);
    io.emit('userUpdated', user);
});

// API للحصول على قائمة الغرف
app.get('/api/rooms', (req, res) => res.json(rooms));

// API لإنشاء غرفة جديدة
app.post('/api/rooms', upload.single('roomBackground'), (req, res) => {
    const token = req.headers.authorization?.split(' ')[1];
    const user = users.find(u => 'fake-token-' + u.id === token);
    if (!user || user.role !== 'admin') return res.status(403).json({ error: 'غير مسموح' });

    const { name, description } = req.body;
    const background = req.file ? `/Uploads/${req.file.filename}` : null;
    const newRoom = { id: rooms.length + 1, name, description, background };
    rooms.push(newRoom);
    io.emit('roomCreated', newRoom);
    res.json(newRoom);
});

// API لحذف غرفة
app.delete('/api/rooms/:id', (req, res) => {
    const token = req.headers.authorization?.split(' ')[1];
    const user = users.find(u => 'fake-token-' + u.id === token);
    if (!user || user.role !== 'admin') return res.status(403).json({ error: 'غير مسموح' });

    const roomId = parseInt(req.params.id);
    rooms = rooms.filter(r => r.id !== roomId);
    io.emit('roomDeleted', roomId);
    res.json({ message: 'تم حذف الغرفة' });
});

// API للحصول على رسائل الغرفة
app.get('/api/messages/:roomId', (req, res) => {
    res.json(messages.filter(m => m.roomId === parseInt(req.params.roomId)));
});

// API للحصول على الرسائل الخاصة
app.get('/api/private-messages/:userId', (req, res) => {
    const token = req.headers.authorization?.split(' ')[1];
    const current = users.find(u => 'fake-token-' + u.id === token);
    if (!current) return res.status(401).json({ error: 'غير مصرح له' });

    res.json(privateMessages.filter(pm => 
        (pm.senderId === current.id && pm.receiverId === parseInt(req.params.userId)) || 
        (pm.senderId === parseInt(req.params.userId) && pm.receiverId === current.id)
    ));
});

// API للحصول على الأخبار
app.get('/api/news', (req, res) => {
    res.json(news);
});

// API لنشر خبر جديد
app.post('/api/news', upload.single('newsFile'), (req, res) => {
    const token = req.headers.authorization?.split(' ')[1];
    const user = users.find(u => 'fake-token-' + u.id === token);
    if (!user) return res.status(401).json({ error: 'غير مصرح له' });

    const { content } = req.body;
    if (!content && !req.file) return res.status(400).json({ error: 'يجب إدخال محتوى أو ملف' });

    const media = req.file ? `/Uploads/${req.file.filename}` : null;
    const newNews = {
        id: news.length + 1,
        content,
        media,
        user_id: user.id,
        display_name: user.display_name,
        timestamp: new Date(),
        likes: [],
        pinned: false // ←←← التعديل المصحح
    };
    news.push(newNews);
    io.emit('newNews', newNews);
    res.json(newNews);
});

// API للحصول على الستوريات (قصص اليوم فقط)
app.get('/api/stories', (req, res) => {
    const oneDayAgo = new Date(Date.now() - 24 * 60 * 60 * 1000);
    res.json(stories.filter(s => new Date(s.timestamp) > oneDayAgo));
});

// API لنشر ستوري جديد
app.post('/api/stories', upload.single('storyImage'), (req, res) => {
    const token = req.headers.authorization?.split(' ')[1];
    const user = users.find(u => 'fake-token-' + u.id === token);
    if (!user) return res.status(401).json({ error: 'غير مصرح له' });

    if (!req.file) return res.status(400).json({ error: 'يجب رفع صورة' });

    const image = `/Uploads/${req.file.filename}`;
    const newStory = {
        id: stories.length + 1,
        image,
        user_id: user.id,
        display_name: user.display_name,
        timestamp: new Date()
    };
    stories.push(newStory);
    io.emit('newStory', newStory);
    res.json(newStory);
});

// API للتعليقات
app.post('/api/comments', (req, res) => {
    const token = req.headers.authorization?.split(' ')[1];
    const user = users.find(u => 'fake-token-' + u.id === token);
    if (!user) return res.status(401).json({ error: 'غير مصرح له' });

    const { postId, content, targetUserId } = req.body;
    const newComment = {
        id: comments.length + 1,
        postId: parseInt(postId),
        content,
        user_id: user.id,
        display_name: user.display_name,
        targetUserId: targetUserId ? parseInt(targetUserId) : null,
        timestamp: new Date()
    };
    comments.push(newComment);

    // إرسال إشعار للمستخدم المستهدف
    if (targetUserId) {
        io.emit('newComment', { ...newComment, targetUserId });
    }

    res.json(newComment);
});

// API للحصول على التعليقات
app.get('/api/comments/:postId', (req, res) => {
    const postComments = comments.filter(c => c.postId === parseInt(req.params.postId));
    res.json(postComments);
});

// API للمسابقات
app.post('/api/competitions', (req, res) => {
    const token = req.headers.authorization?.split(' ')[1];
    const user = users.find(u => 'fake-token-' + u.id === token);
    if (!user || user.role !== 'admin') return res.status(403).json({ error: 'غير مسموح' });

    const { title, duration } = req.body;
    const newCompetition = {
        id: competitions.length + 1,
        title,
        duration: parseInt(duration),
        startTime: new Date(),
        active: true
    };
    competitions.push(newCompetition);
    io.emit('newCompetition', newCompetition);
    res.json(newCompetition);
});

// API لتعيين رتبة
app.post('/api/assign-rank', (req, res) => {
    const token = req.headers.authorization?.split(' ')[1];
    const admin = users.find(u => 'fake-token-' + u.id === token);
    if (!admin || admin.role !== 'admin') return res.status(403).json({ error: 'غير مسموح' });

    const { userId, rank, reason } = req.body;
    const user = users.find(u => u.id === parseInt(userId));
    if (!user) return res.status(404).json({ error: 'المستخدم غير موجود' });

    user.rank = rank;
    res.json({ message: 'تم تعيين الرتبة' });
    io.emit('userUpdated', user);
});

// API للحصول على قائمة المستخدمين
app.get('/api/users', (req, res) => {
    res.json(users.map(u => ({
        id: u.id,
        display_name: u.display_name,
        rank: u.rank,
        profile_image1: u.profile_image1,
        age: u.age,
        gender: u.gender,
        marital_status: u.marital_status,
        about_me: u.about_me
    })));
});

// API للطرد
app.post('/api/ban', (req, res) => {
    const token = req.headers.authorization?.split(' ')[1];
    const admin = users.find(u => 'fake-token-' + u.id === token);
    if (!admin || admin.role !== 'admin') return res.status(403).json({ error: 'غير مسموح' });

    const { userId, reason, duration } = req.body;
    const user = users.find(u => u.id === parseInt(userId));
    if (!user) return res.status(404).json({ error: 'المستخدم غير موجود' });

    const ban = {
        id: bans.length + 1,
        user_id: user.id,
        reason,
        duration,
        timestamp: new Date()
    };
    bans.push(ban);
    io.emit('userBanned', { userId: user.id, reason, duration });
    res.json({ message: 'تم طرد المستخدم' });
});

// API للكتم
app.post('/api/mute', (req, res) => {
    const token = req.headers.authorization?.split(' ')[1];
    const admin = users.find(u => 'fake-token-' + u.id === token);
    if (!admin || admin.role !== 'admin') return res.status(403).json({ error: 'غير مسموح' });

    const { userId, reason, duration } = req.body;
    const user = users.find(u => u.id === parseInt(userId));
    if (!user) return res.status(404).json({ error: 'المستخدم غير موجود' });

    const mute = {
        id: mutes.length + 1,
        user_id: user.id,
        reason,
        duration,
        timestamp: new Date()
    };
    mutes.push(mute);
    io.emit('userMuted', { userId: user.id, reason, duration });
    res.json({ message: 'تم كتم المستخدم' });
});

// Socket.IO للتواصل الفوري
io.on('connection', (socket) => {
    console.log('مستخدم متصل: ' + socket.id);

    // الانضمام إلى غرفة
    socket.on('join', (data) => {
        socket.join(data.roomId);
        socket.user = data;
        io.emit('userList', users.filter(u => u.id !== socket.user.userId));
    });

    // إرسال رسالة عامة - الكود المُصحح
    socket.on('sendMessage', (data) => {
        console.log('📩 استلام رسالة من:', socket.user?.displayName, '| البيانات:', data);

        if (!socket.user) {
            console.error('❌ المستخدم غير مُعرّف');
            return socket.emit('error', 'يجب تسجيل الدخول أولاً');
        }

        const userId = socket.user.userId;
        const now = Date.now();

        // فحص الحماية من الفيضانات
        if (!floodProtection.has(userId)) {
            floodProtection.set(userId, []);
        }

        const userMessages = floodProtection.get(userId);
        const recentMessages = userMessages.filter(time => now - time < 10000);

        if (recentMessages.length >= 5) {
            const muteEndTime = new Date(now + 5 * 60 * 1000);
            const mute = {
                id: mutes.length + 1,
                user_id: userId,
                reason: 'الفيضانات - رسائل سريعة ومتكررة',
                duration: '5m',
                timestamp: new Date(),
                endTime: muteEndTime
            };
            mutes.push(mute);

            const muteMessage = {
                id: messages.length + 1,
                roomId: data.roomId,
                message: `تم كتم ${socket.user.displayName} بسبب الفيضانات`,
                type: 'system',
                timestamp: new Date()
            };
            messages.push(muteMessage);
            io.to(data.roomId).emit('newMessage', muteMessage);
            return socket.emit('error', 'تم كتمك لمدة 5 دقائق بسبب الرسائل السريعة والمتكررة');
        }

        recentMessages.push(now);
        floodProtection.set(userId, recentMessages);

        const isMuted = mutes.find(m => m.user_id === userId && 
            (m.duration === 'permanent' || (m.endTime && new Date() < new Date(m.endTime))));
        if (isMuted) {
            return socket.emit('error', 'أنت مكتوم ولا يمكنك إرسال الرسائل');
        }

        // ✅ إنشاء الرسالة
        const message = {
            id: messages.length + 1,
            roomId: data.roomId,
            user_id: userId,
            display_name: socket.user.displayName,
            rank: socket.user.rank,
            profile_image1: socket.user.profile_image1 || null,
            message: data.content,  // ✅ الحقل الصحيح
            timestamp: new Date()
        };

        messages.push(message);
        console.log('✅ تم حفظ الرسالة:', message);

        io.to(data.roomId).emit('newMessage', message);
        console.log('📡 تم إرسال الرسالة للغرفة:', data.roomId);
    });

    // إرسال رسالة خاصة
    socket.on('sendPrivateMessage', (data) => {
        const isMuted = mutes.find(m => m.user_id === socket.user.userId && 
            (m.duration === 'permanent' || new Date() - new Date(m.timestamp) < parseDuration(m.duration)));
        if (isMuted) return socket.emit('error', 'أنت مكتوم ولا يمكنك إرسال الرسائل');

        const message = { 
            id: privateMessages.length + 1, 
            senderId: socket.user.userId, 
            display_name: socket.user.display_name, 
            rank: socket.user.rank, 
            receiverId: data.receiverId, 
            content: data.content, 
            type: 'text', 
            timestamp: new Date() 
        };
        privateMessages.push(message);
        socket.to(data.receiverId).emit('newPrivateMessage', message);
        socket.emit('newPrivateMessage', message);
    });

    // إرسال صورة عامة
    socket.on('sendImage', (data, callback) => {
        upload.single('image')(data, {}, (err) => {
            if (err) {
                console.error('Error uploading image:', err.message);
                return callback({ error: 'فشل رفع الصورة: ' + err.message });
            }
            const isMuted = mutes.find(m => m.user_id === socket.user.userId && 
                (m.duration === 'permanent' || new Date() - new Date(m.timestamp) < parseDuration(m.duration)));
            if (isMuted) return callback({ error: 'أنت مكتوم ولا يمكنك إرسال الصور' });

            const imageUrl = `/Uploads/${data.file.filename}`;
            const message = { 
                id: messages.length + 1, 
                image_url: imageUrl, 
                type: 'image', 
                roomId: data.roomId, 
                user_id: socket.user.userId, 
                display_name: socket.user.display_name, 
                rank: socket.user.rank, 
                timestamp: new Date() 
            };
            messages.push(message);
            io.to(data.roomId).emit('newImage', message);
            callback({ success: true, imageUrl });
        });
    });

    // إرسال صورة خاصة
    socket.on('sendPrivateImage', (data, callback) => {
        upload.single('image')(data, {}, (err) => {
            if (err) {
                console.error('Error uploading private image:', err.message);
                return callback({ error: 'فشل رفع الصورة: ' + err.message });
            }
            const isMuted = mutes.find(m => m.user_id === socket.user.userId && 
                (m.duration === 'permanent' || new Date() - new Date(m.timestamp) < parseDuration(m.duration)));
            if (isMuted) return callback({ error: 'أنت مكتوم ولا يمكنك إرسال الصور' });

            const imageUrl = `/Uploads/${data.file.filename}`;
            const message = { 
                id: privateMessages.length + 1, 
                image_url: imageUrl, 
                type: 'image', 
                receiverId: data.receiverId, 
                user_id: socket.user.userId, 
                display_name: socket.user.display_name, 
                rank: socket.user.rank, 
                timestamp: new Date() 
            };
            privateMessages.push(message);
            socket.to(data.receiverId).emit('newPrivateImage', message);
            socket.emit('newPrivateImage', message);
            callback({ success: true, imageUrl });
        });
    });

    // إرسال رسالة صوتية عامة
    socket.on('sendVoice', (data, callback) => {
        upload.single('voice')(data, {}, (err) => {
            if (err) {
                console.error('Error uploading voice:', err.message);
                return callback({ error: 'فشل رفع التسجيل الصوتي: ' + err.message });
            }
            const isMuted = mutes.find(m => m.user_id === socket.user.userId && 
                (m.duration === 'permanent' || new Date() - new Date(m.timestamp) < parseDuration(m.duration)));
            if (isMuted) return callback({ error: 'أنت مكتوم ولا يمكنك إرسال الرسائل الصوتية' });

            const voiceUrl = `/Uploads/${data.file.filename}`;
            const message = { 
                id: messages.length + 1, 
                voice_url: voiceUrl, 
                type: 'voice', 
                roomId: data.roomId, 
                user_id: socket.user.userId, 
                display_name: socket.user.display_name, 
                rank: socket.user.rank, 
                timestamp: new Date() 
            };
            messages.push(message);
            io.to(data.roomId).emit('newVoice', message);
            callback({ success: true, voiceUrl });
        });
    });

    // إرسال رسالة صوتية خاصة
    socket.on('sendPrivateVoice', (data, callback) => {
        upload.single('voice')(data, {}, (err) => {
            if (err) {
                console.error('Error uploading private voice:', err.message);
                return callback({ error: 'فشل رفع التسجيل الصوتي: ' + err.message });
            }
            const isMuted = mutes.find(m => m.user_id === socket.user.userId && 
                (m.duration === 'permanent' || new Date() - new Date(m.timestamp) < parseDuration(m.duration)));
            if (isMuted) return callback({ error: 'أنت مكتوم ولا يمكنك إرسال الرسائل الصوتية' });

            const voiceUrl = `/Uploads/${data.file.filename}`;
            const message = { 
                id: privateMessages.length + 1, 
                voice_url: voiceUrl, 
                type: 'voice', 
                receiverId: data.receiverId, 
                user_id: socket.user.userId, 
                display_name: socket.user.display_name, 
                rank: socket.user.rank, 
                timestamp: new Date() 
            };
            privateMessages.push(message);
            socket.to(data.receiverId).emit('newPrivateVoice', message);
            socket.emit('newPrivateVoice', message);
            callback({ success: true, voiceUrl });
        });
    });

    // حذف غرفة
    socket.on('deleteRoom', (roomId) => {
        const user = users.find(u => u.id === socket.user.userId);
        if (user.role === 'admin') {
            rooms = rooms.filter(r => r.id !== roomId);
            io.emit('roomDeleted', roomId);
        }
    });

    // إرسال إشعار
    socket.on('sendNotification', (data) => {
        io.to(data.userId).emit('newNotification', data);
    });

    // تحميل المنشورات
    socket.on('loadNewsPosts', () => {
        socket.emit('loadNewsPosts', news);
    });

    // نشر خبر جديد
    socket.on('addNewsPost', (data) => {
        const user = socket.user;
        if (!user) return;
        const isMuted = mutes.find(m => m.user_id === user.userId && 
            (m.duration === 'permanent' || new Date() - new Date(m.timestamp) < parseDuration(m.duration)));
        if (isMuted) return socket.emit('error', 'أنت مكتوم ولا يمكنك نشر الأخبار');

        const newNews = {
            id: news.length + 1,
            content: data.content,
            media: data.media,
            user_id: user.userId,
            display_name: user.display_name,
            timestamp: new Date(),
            likes: [],
            pinned: false // ← حتى هنا أضفته للاتساق (لكنك لا تستخدمه حاليًا عبر Socket)
        };
        news.push(newNews);
        io.emit('updateNewsPost', newNews);
    });

    // إضافة تفاعل
    socket.on('addReaction', (data) => {
        const user = socket.user;
        if (!user) return;
        const post = news.find(n => n.id === parseInt(data.postId));
        if (post) {
            if (!post.reactions) post.reactions = { likes: [], dislikes: [], hearts: [] };

            // إزالة التفاعل السابق للمستخدم
            Object.keys(post.reactions).forEach(reactionType => {
                post.reactions[reactionType] = post.reactions[reactionType].filter(r => r.user_id !== user.userId);
            });

            // إضافة التفاعل الجديد
            if (data.type === 'like') {
                post.reactions.likes.push({ user_id: user.userId, display_name: user.display_name });
            } else if (data.type === 'dislike') {
                post.reactions.dislikes.push({ user_id: user.userId, display_name: user.display_name });
            } else if (data.type === 'heart') {
                post.reactions.hearts.push({ user_id: user.userId, display_name: user.display_name });
            }

            io.emit('updateNewsPost', post);
        }
    });

    // إضافة تعليق
    socket.on('addComment', (data) => {
        const user = socket.user;
        if (!user) return;

        const newComment = {
            id: comments.length + 1,
            postId: parseInt(data.postId),
            content: data.content,
            user_id: user.userId,
            display_name: user.display_name,
            targetUserId: data.targetUserId ? parseInt(data.targetUserId) : null,
            timestamp: new Date()
        };
        comments.push(newComment);

        // إرسال التعليق للجميع
        io.emit('newComment', newComment);

        // إرسال إشعار للمستخدم المستهدف
        if (data.targetUserId) {
            io.to(data.targetUserId).emit('commentNotification', {
                from: user.display_name,
                content: data.content,
                postId: data.postId
            });
        }
    });

    // إيقاف المسابقة
    socket.on('stopCompetition', (competitionId) => {
        const competition = competitions.find(c => c.id === parseInt(competitionId));
        if (competition) {
            competition.active = false;
            io.emit('competitionStopped', competitionId);
        }
    });

    // فصل الاتصال
    socket.on('disconnect', () => {
        console.log('مستخدم منفصل: ' + socket.id);
        io.emit('userList', users.filter(u => u.id !== socket.user?.userId));
    });
});

// دالة مساعدة لتحويل مدة الكتم/الطرد إلى ميلي ثانية
function parseDuration(duration) {
    const map = {
        '5m': 5 * 60 * 1000,
        '1h': 60 * 60 * 1000,
        '24h': 24 * 60 * 60 * 1000,
        '7d': 7 * 24 * 60 * 60 * 1000,
        'permanent': Infinity
    };
    return map[duration] || 0;
}

// تنظيف الحماية من الفيضانات كل دقيقة
setInterval(() => {
    const now = Date.now();
    for (const [userId, messages] of floodProtection.entries()) {
        const recentMessages = messages.filter(time => now - time < 60000);
        if (recentMessages.length === 0) {
            floodProtection.delete(userId);
        } else {
            floodProtection.set(userId, recentMessages);
        }
    }
}, 60000);

// تنظيف الكتم المنتهي
setInterval(() => {
    const now = new Date();
    mutes = mutes.filter(mute => {
        if (mute.endTime && now > new Date(mute.endTime)) {
            return false;
        }
        return true;
    });
}, 30000);

// تشغيل الخادم
const PORT = process.env.PORT || 3000;
server.listen(PORT, () => console.log(`Server running on port ${PORT}`));
// فتح قسم الألعاب
function openGamesSection() {
    console.log('فتح قسم الألعاب'); // للتشخيص
    openModal('gamesModal');
    loadGames();
    closeMainMenu();
}

// تحميل قائمة الألعاب
function loadGames() {
    console.log('تحميل الألعاب'); // للتشخيص
    const container = document.getElementById('gamesContainer');
    if (!container) {
        console.error('❌ عنصر gamesContainer غير موجود');
        showNotification('خطأ: عنصر الألعاب غير موجود', 'error');
        return;
    }

    container.innerHTML = `
        <h2>قسم الألعاب 🎮</h2>
        <p>العب واربح نقاط! كلما فزت أكثر، كلما حصلت على نقاط أعلى!</p>
        <div class="games-grid">
            <button class="game-btn" onclick="startGuessGame()">
                🎯 تخمين الرقم<br>
                <small>اربح 10 نقاط</small>
            </button>
            <button class="game-btn" onclick="startRPSGame()">
                ✂️ حجر-ورقة-مقص<br>
                <small>اربح 5 نقاط</small>
            </button>
            <button class="game-btn" onclick="startTicTacToe()">
                ⭕ X و O<br>
                <small>اربح 15 نقطة!</small>
            </button>
        </div>
        <div class="points-section">
            <p>نقاطك الحالية: <span id="pointsDisplay" class="points-value">${getPoints()}</span></p>
            <p>إجمالي الألعاب المكتملة: <span id="totalGames">${getTotalGames()}</span></p>
        </div>
        <div class="leaderboard">
            <h4>قائمة الأفضل</h4>
            <div id="leaderboardList"></div>
        </div>
    `;

    loadLeaderboard();
    console.log('✅ تم تحميل الألعاب بنجاح');
}

// بدء لعبة تخمين الرقم
function startGuessGame() {
    console.log('بدء لعبة تخمين الرقم');
    const secretNumber = Math.floor(Math.random() * 10) + 1;
    let attempts = 3;

    openModal('guessGameModal');
    const gameContainer = document.getElementById('guessGameContainer');
    if (!gameContainer) {
        console.error('❌ عنصر guessGameContainer غير موجود');
        showNotification('خطأ في تحميل اللعبة', 'error');
        return;
    }

    gameContainer.innerHTML = `
        <h3>🎯 تخمين الرقم (1-10)</h3>
        <p>لديك ${attempts} محاولات</p>
        <input type="number" id="guessInput" min="1" max="10" style="padding: 10px; margin: 5px;">
        <button onclick="submitGuess(${secretNumber}, ${attempts})" style="padding: 10px 20px; background: #007bff; color: white; border: none; border-radius: 5px; cursor: pointer;">تخمين</button>
        <p id="guessResult" style="color: #dc3545; font-weight: bold;"></p>
        <button onclick="closeModal('guessGameModal')" style="padding: 10px; background: #6c757d; color: white; border: none; border-radius: 5px; cursor: pointer;">إلغاء</button>
    `;
    incrementGamesCount();
}

// تقديم التخمين
function submitGuess(secret, attempts) {
    console.log(`تخمين: ${secret}, محاولات: ${attempts}`);
    const guess = parseInt(document.getElementById('guessInput').value);
    const result = document.getElementById('guessResult');

    if (isNaN(guess) || guess < 1 || guess > 10) {
        result.textContent = '❌ أدخل رقمًا بين 1 و10';
        result.style.color = '#dc3545';
        return;
    }

    attempts--;
    if (guess === secret) {
        result.textContent = '🎉 مبروك! فزت!';
        result.style.color = '#28a745';
        addPoints(10);
        updatePointsDisplay();
        setTimeout(() => closeModal('guessGameModal'), 2000);
    } else if (attempts > 0) {
        result.textContent = `❌ خطأ! المحاولات المتبقية: ${attempts}. ${guess > secret ? 'أصغر قليلاً' : 'أكبر قليلاً'}`;
        result.style.color = '#ffc107';

        // إعادة إنشاء الواجهة
        const gameContainer = document.getElementById('guessGameContainer');
        gameContainer.innerHTML = `
            <h3>🎯 تخمين الرقم (1-10)</h3>
            <p>لديك ${attempts} محاولات</p>
            <input type="number" id="guessInput" min="1" max="10" style="padding: 10px; margin: 5px;">
            <button onclick="submitGuess(${secret}, ${attempts})" style="padding: 10px 20px; background: #007bff; color: white; border: none; border-radius: 5px; cursor: pointer;">تخمين</button>
            <p id="guessResult" style="color: #ffc107; font-weight: bold;">${result.textContent}</p>
            <button onclick="closeModal('guessGameModal')" style="padding: 10px; background: #6c757d; color: white; border: none; border-radius: 5px; cursor: pointer;">إلغاء</button>
        `;
    } else {
        result.textContent = `😢 خسرت! الرقم كان ${secret}`;
        result.style.color = '#dc3545';
        setTimeout(() => closeModal('guessGameModal'), 2000);
    }
}

// بدء لعبة حجر-ورقة-مقص
function startRPSGame() {
    console.log('بدء لعبة حجر-ورقة-مقص');
    openModal('rpsGameModal');
    const gameContainer = document.getElementById('rpsGameContainer');
    if (!gameContainer) {
        console.error('❌ عنصر rpsGameContainer غير موجود');
        showNotification('خطأ في تحميل اللعبة', 'error');
        return;
    }

    gameContainer.innerHTML = `
        <h3>✂️ حجر-ورقة-مقص</h3>
        <div style="margin: 20px 0;">
            <button onclick="playRPS('rock')" style="padding: 15px 25px; margin: 5px; background: #dc3545; color: white; border: none; border-radius: 50px; cursor: pointer; font-size: 18px;">🪨 حجر</button>
            <button onclick="playRPS('paper')" style="padding: 15px 25px; margin: 5px; background: #ffc107; color: black; border: none; border-radius: 50px; cursor: pointer; font-size: 18px;">📄 ورقة</button>
            <button onclick="playRPS('scissors')" style="padding: 15px 25px; margin: 5px; background: #6c757d; color: white; border: none; border-radius: 50px; cursor: pointer; font-size: 18px;">✂️ مقص</button>
        </div>
        <p id="rpsResult" style="font-size: 18px; font-weight: bold; margin: 20px 0;"></p>
        <button onclick="closeModal('rpsGameModal')" style="padding: 10px 20px; background: #6c757d; color: white; border: none; border-radius: 5px; cursor: pointer;">إغلاق</button>
    `;
    incrementGamesCount();
}

// لعب دور في حجر-ورقة-مقص
function playRPS(playerChoice) {
    console.log(`اختيار اللاعب: ${playerChoice}`);
    const choices = ['rock', 'paper', 'scissors'];
    const computerChoice = choices[Math.floor(Math.random() * 3)];
    const result = document.getElementById('rpsResult');

    let resultText = '';
    let resultColor = '';

    if (playerChoice === computerChoice) {
        resultText = `🤝 تعادل! كلاكما اختار ${playerChoice === 'rock' ? 'الحجر' : playerChoice === 'paper' ? 'الورقة' : 'المقص'}`;
        resultColor = '#ffc107';
    } else if (
        (playerChoice === 'rock' && computerChoice === 'scissors') ||
        (playerChoice === 'paper' && computerChoice === 'rock') ||
        (playerChoice === 'scissors' && computerChoice === 'paper')
    ) {
        resultText = `🎉 فزت! أنت اخترت ${playerChoice === 'rock' ? 'الحجر' : playerChoice === 'paper' ? 'الورقة' : 'المقص'} والكمبيوتر اختار ${computerChoice === 'rock' ? 'الحجر' : computerChoice === 'paper' ? 'الورقة' : 'المقص'}`;
        resultColor = '#28a745';
        addPoints(5);
        updatePointsDisplay();
    } else {
        resultText = `😢 خسرت! أنت اخترت ${playerChoice === 'rock' ? 'الحجر' : playerChoice === 'paper' ? 'الورقة' : 'المقص'} والكمبيوتر اختار ${computerChoice === 'rock' ? 'الحجر' : computerChoice === 'paper' ? 'الورقة' : 'المقص'}`;
        resultColor = '#dc3545';
    }

    result.textContent = resultText;
    result.style.color = resultColor;

    setTimeout(() => closeModal('rpsGameModal'), 3000);
}

// باقي كود الألعاب (X و O وإدارة النقاط) - نفس الكود السابق
// [أضف باقي الدوال من الكود السابق هنا]

// إدارة النقاط
function getPoints() {
    return parseInt(localStorage.getItem('userPoints') || '0');
}

function addPoints(amount) {
    const current = getPoints();
    localStorage.setItem('userPoints', current + amount);
    console.log(`✅ تم إضافة ${amount} نقطة. الإجمالي: ${current + amount}`);
    updatePointsDisplay();
}

function updatePointsDisplay() {
    const displays = document.querySelectorAll('#pointsDisplay, #gamePoints');
    displays.forEach(display => {
        if (display) display.textContent = getPoints();
    });
}

function getTotalGames() {
    return parseInt(localStorage.getItem('totalGamesPlayed') || '0');
}

function incrementGamesCount() {
    const current = getTotalGames();
    localStorage.setItem('totalGamesPlayed', current + 1);
    updateTotalGamesDisplay();
}

function updateTotalGamesDisplay() {
    const display = document.getElementById('totalGames');
    if (display) display.textContent = getTotalGames();
}

function loadLeaderboard() {
    const leaderboardList = document.getElementById('leaderboardList');
    if (!leaderboardList) return;

    const mockLeaderboard = [
        { name: 'أحمد محمد', points: 245, games: 12 },
        { name: 'فاطمة علي', points: 198, games: 9 },
        { name: 'عمر خالد', points: 167, games: 15 },
        { name: 'نورا سعيد', points: 134, games: 8 },
        { name: 'خالد حسن', points: 89, games: 11 }
    ];

    leaderboardList.innerHTML = mockLeaderboard.map((player, index) => `
        <div class="leaderboard-item">
            <span class="rank">#${index + 1}</span>
            <span class="name">${player.name}</span>
            <span class="points">${player.points} نقطة</span>
            <span class="games">${player.games} لعبة</span>
        </div>
    `).join('');
}
// فتح غرفة المسابقات
function openQuizRoom() {
    openModal('quizRoomModal');
    startQuiz();
    closeMainMenu();
}

// بدء المسابقة
function startQuiz() {
    const randomQuestion = QUIZ_QUESTIONS[Math.floor(Math.random() * QUIZ_QUESTIONS.length)];
    displayQuizQuestion(randomQuestion);
    startQuizTimer();
}

// عرض سؤال المسابقة
function displayQuizQuestion(question) {
    document.getElementById('questionText').textContent = question.question;

    const optionsContainer = document.getElementById('questionOptions');
    optionsContainer.innerHTML = '';

    question.options.forEach((option, index) => {
        const button = document.createElement('button');
        button.className = 'option-btn';
        button.textContent = option;
        button.onclick = () => selectQuizAnswer(index, question.correct);
        optionsContainer.appendChild(button);
    });
}

// اختيار إجابة
function selectQuizAnswer(selected, correct) {
    const buttons = document.querySelectorAll('.option-btn');
    buttons.forEach((btn, index) => {
        btn.disabled = true;
        if (index === correct) {
            btn.style.background = 'var(--success-color)';
        } else if (index === selected && selected !== correct) {
            btn.style.background = 'var(--error-color)';
        }
    });

    if (selected === correct) {
        showNotification('إجابة صحيحة! +10 نقاط', 'success');
        updateUserCoins(10);
    } else {
        showNotification('إجابة خاطئة', 'error');
    }

    setTimeout(() => {
        startQuiz(); // سؤال جديد
    }, 3000);
}

// بدء مؤقت المسابقة
function startQuizTimer() {
    let timeLeft = 30;
    const timerElement = document.getElementById('quizTimer');

    const timer = setInterval(() => {
        timeLeft--;
        timerElement.textContent = timeLeft;

        if (timeLeft <= 0) {
            clearInterval(timer);
            showNotification('انتهى الوقت!', 'warning');
            setTimeout(() => {
                startQuiz();
            }, 2000);
        }
    }, 1000);
}

// إغلاق غرفة المسابقات
function closeQuizRoom() {
    closeModal('quizRoomModal');
}

// فتح إدارة الغرف
function openRoomsManager() {
    showNotification('إدارة الغرف متاحة في لوحة الإدارة', 'info');
    closeMainMenu();
}

// فتح متجر النقاط
function openCoinsShop() {
    showNotification('متجر النقاط قيد التطوير', 'info');
    closeMainMenu();
}

// فتح لوحة الإدارة
function openAdminPanel() {
    if (currentUser?.role !== 'admin' && currentUser?.role !== 'owner') {
        showError('غير مسموح - للإداريين فقط');
        return;
    }

    openModal('adminModal');
    loadAdminData();
    closeMainMenu();
}

// تحميل بيانات الإدارة
async function loadAdminData() {
    await loadAllUsers();
    loadRanks();
}

// تحميل جميع المستخدمين
async function loadAllUsers() {
    try {
        const response = await fetch('/api/all-users', {
            headers: {
                'Authorization': `Bearer ${localStorage.getItem('chatToken')}`
            }
        });

        if (response.ok) {
            const users = await response.json();
            displayAdminUsers(users);
        }
    } catch (error) {
        console.error('خطأ في تحميل المستخدمين:', error);
    }
}

// عرض المستخدمين في لوحة الإدارة
function displayAdminUsers(users) {
    const container = document.getElementById('adminUsersList');
    container.innerHTML = '';

    users.forEach(user => {
        const userDiv = document.createElement('div');
        userDiv.className = 'admin-user-item';

        const rank = RANKS[user.rank] || RANKS.visitor;
        const joinDate = new Date(user.created_at).toLocaleDateString('ar-SA');

        userDiv.innerHTML = `
            <div class="admin-user-info">
                <img class="admin-user-avatar" src="${user.profile_image1 || 'https://images.pexels.com/photos/771742/pexels-photo-771742.jpeg?auto=compress&cs=tinysrgb&w=100&h=100&fit=crop'}" alt="${user.display_name}">
                <div class="admin-user-details">
                    <h4>${escapeHtml(user.display_name)}</h4>
                    <div class="admin-user-rank">${rank.emoji} ${rank.name} • انضم في ${joinDate}</div>
                </div>
            </div>
            <div class="admin-user-actions">
                <button class="admin-action-btn btn-info" onclick="openAssignRankModal(${user.id}, '${user.display_name}')">
                    <i class="fas fa-crown"></i> رتبة
                </button>
                <button class="admin-action-btn btn-warning" onclick="openBanUserModal(${user.id}, '${user.display_name}')">
                    <i class="fas fa-ban"></i> حظر
                </button>
                <button class="admin-action-btn btn-success" onclick="openGiveCoinsModal(${user.id}, '${user.display_name}')">
                    <i class="fas fa-coins"></i> نقاط
                </button>
            </div>
        `;

        container.appendChild(userDiv);
    });
}

// تعريف المالك (الإيميل وكلمة المرور)
const OWNER_EMAIL = "njdj9985@mail.com";
const OWNER_PASSWORD = "Zxcvbnm.8";

// تحميل الرتب
function loadRanks() {
    const container = document.getElementById('ranksList');
    container.innerHTML = '';

    Object.entries(RANKS).forEach(([key, rank]) => {
        const rankDiv = document.createElement('div');
        rankDiv.className = 'rank-item';

        rankDiv.innerHTML = `
            <div class="rank-emoji">${rank.emoji}</div>
            <div class="rank-name">${rank.name}</div>
            <div class="rank-level">المستوى ${rank.level}</div>
        `;

        container.appendChild(rankDiv);
    });
}

// فتح مودال تعيين الرتبة
function openAssignRankModal(userId, userName) {
    document.getElementById('rankTargetUser').textContent = userName;
    document.getElementById('rankTargetUser').setAttribute('data-user-id', userId);

    // ملء قائمة الرتب
    const select = document.getElementById('newRankSelect');
    select.innerHTML = '';

    Object.entries(RANKS).forEach(([key, rank]) => {
        const option = document.createElement('option');
        option.value = key;
        option.textContent = `${rank.emoji} ${rank.name}`;
        select.appendChild(option);
    });

    openModal('assignRankModal');
}

// دالة مساعدة: التحقق إذا المستخدم الحالي يملك صلاحية المالك (إيميل أو كلمة مرور)
function verifyOwnerWithPromptIfNeeded() {
    const currentUserEmail = localStorage.getItem('userEmail');
    // إذا الإيميل مسجل ومطابق لإيميل المالك -> موافقة مباشرة
    if (currentUserEmail && currentUserEmail === OWNER_EMAIL) {
        return true;
    }
    // وإلا نطلب كلمة المرور
    const enteredPassword = prompt("ادخل كلمة مرور المالك لتأكيد العملية:");
    if (enteredPassword === OWNER_PASSWORD) {
        return true;
    }
    // فشل التحقق
    return false;
}

// تأكيد تعيين الرتبة
async function confirmAssignRank() {
    // تحقق المالك (إيميل أو باسورد)
    if (!verifyOwnerWithPromptIfNeeded()) {
        showError("❌ لا يمكنك تعيين الرتبة — الوصول مرفوض (إيميل أو كلمة مرور خاطئة)");
        return;
    }

    const userId = document.getElementById('rankTargetUser').getAttribute('data-user-id');
    const newRank = document.getElementById('newRankSelect').value;
    const reason = document.getElementById('rankChangeReason').value.trim();

    if (!newRank) {
        showError('يرجى اختيار رتبة');
        return;
    }

    try {
        showLoading(true);

        const response = await fetch('/api/assign-rank', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'Authorization': `Bearer ${localStorage.getItem('chatToken')}`
            },
            body: JSON.stringify({
                userId: parseInt(userId),
                newRank,
                reason
            })
        });

        const data = await response.json();

        if (response.ok) {
            closeAssignRankModal();
            loadAllUsers();
            showNotification(data.message, 'success');
        } else {
            showError(data.error || 'فشل في تعيين الرتبة');
        }
    } catch (error) {
        showError('حدث خطأ في تعيين الرتبة');
    } finally {
        showLoading(false);
    }
}

// إزالة الرتبة
async function removeRank(userId, username) {
    // تحقق المالك (إيميل أو باسورد)
    if (!verifyOwnerWithPromptIfNeeded()) {
        showError("❌ لا يمكنك إزالة الرتبة — الوصول مرفوض (إيميل أو كلمة مرور خاطئة)");
        return;
    }

    if (!confirm(`هل أنت متأكد من إزالة رتبة ${username}؟`)) {
        return;
    }

    try {
        showLoading(true);

        // استدعاء الـ API لإزالة الرتبة (عدل المسار إذا يختلف)
        const response = await fetch('/api/remove-rank', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'Authorization': `Bearer ${localStorage.getItem('chatToken')}`
            },
            body: JSON.stringify({
                userId: parseInt(userId)
            })
        });

        const data = await response.json();

        if (response.ok) {
            showNotification(data.message || 'تمت إزالة الرتبة', 'success');
            loadAllUsers();
        } else {
            showError(data.error || 'فشل في إزالة الرتبة');
        }
    } catch (error) {
        showError('حدث خطأ في إزالة الرتبة');
    } finally {
        showLoading(false);
    }
}

// إغلاق مودال تعيين الرتبة
function closeAssignRankModal() {
    closeModal('assignRankModal');
    document.getElementById('rankChangeReason').value = '';
}



// إغلاق مودال تعيين الرتبة
function closeAssignRankModal() {
    closeModal('assignRankModal');
    document.getElementById('rankChangeReason').value = '';
}

// فتح مودال حظر المستخدم
function openBanUserModal(userId, userName) {
    document.getElementById('banTargetUser').textContent = userName;
    document.getElementById('banTargetUser').setAttribute('data-user-id', userId);
    openModal('banUserModal');
}

// تأكيد حظر المستخدم
async function confirmBanUser() {
    const userId = document.getElementById('banTargetUser').getAttribute('data-user-id');
    const reason = document.getElementById('banReason').value.trim();
    const duration = document.getElementById('banDuration').value;

    if (!reason) {
        showError('يرجى كتابة سبب الحظر');
        return;
    }

    try {
        showLoading(true);

        const response = await fetch('/api/ban', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'Authorization': `Bearer ${localStorage.getItem('chatToken')}`
            },
            body: JSON.stringify({
                userId: parseInt(userId),
                reason,
                duration
            })
        });

        const data = await response.json();

        if (response.ok) {
            closeBanUserModal();
            loadAllUsers();
            showNotification(data.message, 'success');
        } else {
            showError(data.error);
        }
    } catch (error) {
        showError('حدث خطأ في حظر المستخدم');
    } finally {
        showLoading(false);
    }
}

// إغلاق مودال حظر المستخدم
function closeBanUserModal() {
    closeModal('banUserModal');
    document.getElementById('banReason').value = '';
}

// فتح مودال إهداء النقاط
function openGiveCoinsModal(userId, userName) {
    document.getElementById('coinsTargetUser').textContent = userName;
    document.getElementById('coinsTargetUser').setAttribute('data-user-id', userId);
    openModal('giveCoinsModal');
}

// إهداء النقاط
async function giveCoins() {
    const userId = document.getElementById('coinsTargetUser').getAttribute('data-user-id');
    const amount = document.getElementById('coinsAmount').value;
    const reason = document.getElementById('coinsReason').value;

    if (!amount || amount < 1 || amount > 10000) {
        showError('يرجى إدخال عدد صحيح من النقاط (1-10000)');
        return;
    }

    try {
        showLoading(true);

        const response = await fetch('/api/give-coins', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'Authorization': `Bearer ${localStorage.getItem('chatToken')}`
            },
            body: JSON.stringify({
                userId: parseInt(userId),
                amount: parseInt(amount),
                reason: reason
            })
        });

        const data = await response.json();

        if (response.ok) {
            closeGiveCoinsModal();
            loadAllUsers();
            showNotification(`تم إهداء ${amount} نقطة بنجاح`, 'success');
        } else {
            showError(data.error);
        }
    } catch (error) {
        showError('حدث خطأ في إهداء النقاط');
    } finally {
        showLoading(false);
    }
}

// إغلاق مودال إهداء النقاط
function closeGiveCoinsModal() {
    closeModal('giveCoinsModal');
    document.getElementById('coinsAmount').value = '';
    document.getElementById('coinsReason').value = '';
}

// إغلاق لوحة الإدارة
function closeAdminModal() {
    closeModal('adminModal');
}

// عرض تبويب الإدارة
function showAdminTab(tabName) {
    // إخفاء جميع التبويبات
    document.querySelectorAll('.admin-tab').forEach(tab => {
        tab.classList.remove('active');
    });

    // إزالة الفئة النشطة من جميع الأزرار
    document.querySelectorAll('.admin-tabs .tab-btn').forEach(btn => {
        btn.classList.remove('active');
    });

    // عرض التبويب المحدد
    document.getElementById(`admin${tabName.charAt(0).toUpperCase() + tabName.slice(1)}Tab`).classList.add('active');

    // تفعيل الزر المحدد
    event.target.classList.add('active');
}

// فتح الملف الشخصي
function openProfileModal() {
    if (!currentUser) return;

    // ملء البيانات الحالية
    document.getElementById('displayNameInput').value = currentUser.display_name || '';
    document.getElementById('emailInput').value = currentUser.email || '';
    document.getElementById('ageInput').value = currentUser.age || '';
    document.getElementById('genderInput').value = currentUser.gender || '';
    document.getElementById('maritalStatusInput').value = currentUser.marital_status || '';
    document.getElementById('aboutMeInput').value = currentUser.about_me || '';

    // عرض الصور الحالية
    if (currentUser.profile_image1) {
        document.getElementById('profileImg1').src = currentUser.profile_image1;
    }
    if (currentUser.profile_image2) {
        document.getElementById('profileImg2').src = currentUser.profile_image2;
    }

    // عرض الإحصائيات
    document.getElementById('profileCoins').textContent = currentUser.coins || 2000;
    document.getElementById('profileRank').textContent = RANKS[currentUser.rank]?.name || 'زائر';

    openModal('profileModal');
}

// إغلاق الملف الشخصي
function closeProfileModal() {
    closeModal('profileModal');
}

// عرض تبويب الملف الشخصي
function showProfileTab(tabName) {
    // إخفاء جميع التبويبات
    document.querySelectorAll('.profile-tab').forEach(tab => {
        tab.classList.remove('active');
    });

    // إزالة الفئة النشطة من جميع الأزرار
    document.querySelectorAll('.profile-tabs .tab-btn').forEach(btn => {
        btn.classList.remove('active');
    });

    // عرض التبويب المحدد
    document.getElementById(`profile${tabName.charAt(0).toUpperCase() + tabName.slice(1)}Tab`).classList.add('active');

    // تفعيل الزر المحدد
    event.target.classList.add('active');
}

// تحديث الملف الشخصي
async function updateProfile() {
    const formData = new FormData();

    const displayName = document.getElementById('displayNameInput').value.trim();
    const email = document.getElementById('emailInput').value.trim();
    const newPassword = document.getElementById('newPasswordInput').value;
    const age = document.getElementById('ageInput').value;
    const gender = document.getElementById('genderInput').value;
    const maritalStatus = document.getElementById('maritalStatusInput').value;
    const aboutMe = document.getElementById('aboutMeInput').value.trim();

    if (displayName) formData.append('display_name', displayName);
    if (email) formData.append('email', email);
    if (newPassword) formData.append('password', newPassword);
    if (age) formData.append('age', age);
    if (gender) formData.append('gender', gender);
    if (maritalStatus) formData.append('marital_status', maritalStatus);
    if (aboutMe) formData.append('about_me', aboutMe);

    // إضافة الصور إذا تم اختيارها
    const profileFile1 = document.getElementById('profileFile1').files[0];
    const profileFile2 = document.getElementById('profileFile2').files[0];

    if (profileFile1) formData.append('profileImage1', profileFile1);
    if (profileFile2) formData.append('profileImage2', profileFile2);

    try {
        showLoading(true);

        const response = await fetch('/api/user/profile', {
            method: 'PUT',
            headers: {
                'Authorization': `Bearer ${localStorage.getItem('chatToken')}`
            },
            body: formData
        });

        if (response.ok) {
            const updatedUser = await response.json();
            currentUser = { ...currentUser, ...updatedUser };
            updateUserInterface();
            showNotification('تم تحديث الملف الشخصي بنجاح', 'success');
        } else {
            const data = await response.json();
            showError(data.error || 'فشل في تحديث الملف الشخصي');
        }
    } catch (error) {
        showError('حدث خطأ في تحديث الملف الشخصي');
    } finally {
        showLoading(false);
    }
}

// فتح ملف شخصي لمستخدم آخر
function openUserProfile(userId) {
    // هذه الوظيفة ستكون متاحة لاحقاً
    showNotification('عرض الملف الشخصي قيد التطوير', 'info');
}

// فتح الإشعارات
function openNotifications() {
    openModal('notificationsModal');
    loadNotifications();
}

// تحميل الإشعارات
function loadNotifications() {
    const container = document.getElementById('notificationsList');
    container.innerHTML = '<p style="text-align: center; color: var(--text-secondary);">لا توجد إشعارات جديدة</p>';
}

// إغلاق الإشعارات
function closeNotificationsModal() {
    closeModal('notificationsModal');
}

// تحديث عدد الإشعارات
function updateNotificationCount() {
    const badge = document.getElementById('notificationCount');
    let count = parseInt(badge.textContent) || 0;
    count++;
    badge.textContent = count;
    badge.style.display = count > 0 ? 'block' : 'none';
}

// فتح الإعدادات
function openSettings() {
    openModal('settingsModal');
}

// إغلاق الإعدادات
function closeSettingsModal() {
    closeModal('settingsModal');
}

// حفظ الإعدادات
function saveSettings() {
    const soundNotifications = document.getElementById('soundNotifications').checked;
    const saveChatHistory = document.getElementById('saveChatHistory').checked;

    localStorage.setItem('soundNotifications', soundNotifications);
    localStorage.setItem('saveChatHistory', saveChatHistory);

    showNotification('تم حفظ الإعدادات', 'success');
    closeSettingsModal();
}

// الخروج من الدردشة
function exitChat() {
    if (confirm('هل أنت متأكد من الخروج؟')) {
        logout();
    }
}

// الخروج من الغرفة
function exitRoom() {
    currentRoom = 1;
    document.getElementById('roomSelect').value = 1;
    changeRoom();
    closeSettingsModal();
    showNotification('تم الخروج من الغرفة', 'info');
}

// فتح المساعدة
function openHelpModal() {
    showNotification('المساعدة قيد التطوير', 'info');
}

// عرض الرتب
function showRanks() {
    let ranksText = 'الرتب المتاحة:\n\n';
    Object.values(RANKS).forEach(rank => {
        ranksText += `${rank.emoji} ${rank.name} (المستوى ${rank.level})\n`;
    });

    alert(ranksText);
}

// تنظيف الغرف
async function cleanRooms() {
    if (currentUser?.role !== 'admin' && currentUser?.role !== 'owner') {
        showError('غير مسموح - للإداريين فقط');
        return;
    }

    if (confirm('هل أنت متأكد من تنظيف جميع الرسائل؟')) {
        try {
            const response = await fetch('/api/clean-rooms', {
                method: 'POST',
                headers: {
                    'Authorization': `Bearer ${localStorage.getItem('chatToken')}`
                }
            });

            if (response.ok) {
                document.getElementById('messagesContainer').innerHTML = '';
                showNotification('تم تنظيف الغرفة بنجاح', 'success');
            } else {
                showError('فشل في تنظيف الغرفة');
            }
        } catch (error) {
            showError('حدث خطأ في تنظيف الغرفة');
        }
    }
}

// فتح مشغل الراديو
function openRadioPlayer() {
    openModal('radioPlayerModal');
}

// إغلاق مشغل الراديو
function closeRadioPlayer() {
    closeModal('radioPlayerModal');
}

// تشغيل محطة راديو
function playRadioStation(station) {
    showNotification(`تم تشغيل ${station}`, 'success');
    // هنا يمكن إضافة كود تشغيل الراديو الفعلي
}

// تبديل الراديو
function toggleRadio() {
    const btn = document.getElementById('radioPlayBtn');
    const icon = btn.querySelector('i');

    if (icon.classList.contains('fa-play')) {
        icon.classList.remove('fa-play');
        icon.classList.add('fa-pause');
        showNotification('تم تشغيل الراديو', 'success');
    } else {
        icon.classList.remove('fa-pause');
        icon.classList.add('fa-play');
        showNotification('تم إيقاف الراديو', 'info');
    }
}

// رفع موسيقى مخصصة
function uploadCustomMusic() {
    const fileInput = document.getElementById('customMusicInput');
    if (fileInput.files.length === 0) {
        showError('يرجى اختيار ملفات صوتية');
        return;
    }

    showNotification('تم رفع الأغاني بنجاح', 'success');
    fileInput.value = '';
}

// تبديل مشغل الموسيقى
function toggleMusicPlayer() {
    const btn = document.getElementById('musicToggle');
    const nowPlaying = document.getElementById('nowPlaying');

    if (nowPlaying.style.display === 'none') {
        nowPlaying.style.display = 'block';
        nowPlaying.querySelector('.song-title').textContent = 'تشغيل الموسيقى...';
        showNotification('تم تشغيل الموسيقى', 'success');
    } else {
        nowPlaying.style.display = 'none';
        showNotification('تم إيقاف الموسيقى', 'info');
    }
}

// تسجيل الخروج
function logout() {
    localStorage.removeItem('chatToken');
    currentUser = null;

    if (socket) {
        socket.disconnect();
        socket = null;
    }

    showLoginScreen();
    showNotification('تم تسجيل الخروج', 'info');
}

// إعادة تحميل الصفحة
function reloadPage() {
    location.reload();
}

// تحديث نقاط المستخدم
function updateUserCoins(amount) {
    if (currentUser) {
        currentUser.coins = (currentUser.coins || 2000) + amount;
        document.getElementById('profileCoins').textContent = currentUser.coins;
    }
}// فتح منتقي الرموز التعبيرية المحسن
function openEmojiPicker() {
   const emojis = [
    // Smileys & Emotion
    '😀', '😃', '😄', '😁', '😆', '😅', '😂', '🤣', '😭', '😉', 
    '😗', '😙', '😚', '😘', '🥰', '😍', '🤩', '🥳', '🫠', '🙃', 
    '🙂', '🥲', '🥹', '😊', '☺️', '😌', '🙂‍↕️', '🙂‍↔️', '😏', '🤤', 
    '😋', '😛', '😝', '😜', '🤪', '🥴', '😔', '🥺', '😬', '😑', 
    '😐', '😶', '😶‍🌫️', '🫥', '🤐', '🫡', '🤔', '🤫', '🫢', '🤭', 
    '🥱', '🤗', '🫣', '😱', '🤨', '🧐', '😒', '🙄', '😮‍💨', '😤', 
    '😠', '😡', '🤬', '😞', '😓', '😟', '😥', '😢', '☹️', '🙁', 
    '🫤', '😕', '😰', '😨', '😧', '😦', '😮', '😯', '😲', '😳', 
    '🤯', '😖', '😣', '😩', '😫', '😵', '😵‍💫', '🫨', '🥶', '🥵', 
    '🤢', '🤮', '🫩', '😴', '😪', '🤧', '🤒', '🤒', '🤕', '😷', 
    '🤥', '😇', '🤠', '🤑', '🤓', '😎', '🤡', '🥸', '💩', '😈', 
    '👿', '👻', '💀', '☠️', '👹', '👺', '☃️', '⛄', '🎃', '🤖', 
    '👽', '👾', '🌚', '🌝', '🌞', '🌛', '🌜',

    // Cat faces
    '😺', '😸', '😹', '😻', '😼', '😽', '🙀', '😿', '😾',

    // Monkeys
    '🙈', '🙉', '🙊',

    // Hearts & symbols
    '💫', '⭐', '🌟', '✨', '⚡', '💥', '💢', '💨', '💦', '💤', 
    '🕳️', '🔥', '💯', '🎉', '🎊',

    // Hearts
    '❤️', '🧡', '💛', '💚', '🩵', '💙', '💜', '🤎', '🖤', '🩶', 
    '🤍', '🩷', '💘', '💝', '💖', '💗', '💓', '💞', '💕', '💌', 
    '💟', '♥️', '❣️', '❤️‍🩹', '💔', '❤️‍🔥',

    // Body parts & gestures
    '💋', '🫂', '👥', '👤', '🗣️', '🧠', '🫀', '👅', '🫦', '👄', 
    '👁️', '👀', '🦶', '🦵', '🦾', '💪', '👏', '👍', '👎', '🫶', 
    '🙌', '👐', '🤲', '🤜', '🤛', '✊', '👊', '🫳', '🫴', '🫱', 
    '🫲', '🫸', '🫷', '👋', '🤚', '🖐️', '✋', '🖖', '🤟', '🤘', 
    '✌️', '🤞', '🫰', '🤙', '🤌', '🤏', '👌', '🫵', '👉', '👈', 
    '☝️', '👆', '👇', '🖕', '✍️', '🤳', '🙏', '💅', '🤝',

    // People activities
    '🙇', '🙋', '💁', '🙆', '🙅', '🤷', '🤦', '🙍', '🙎', '🧏', 
    '💆', '💇', '🧖', '🛀', '🛌', '🧍', '💪', '🤳', '💅', '🤳', 
    '🧏‍♀️', '🧏‍♂️', '🧏', '🏃‍♀️', '🏃‍♂️', '🏃', '💃', '🕺', '🕴️', 
    '🧍‍♀️', '🧍‍♂️', '🧍', '🧎‍♀️', '🧎‍♂️', '🧎', '🚶‍♀️', '🚶‍♂️', '🚶',

    // Sports & activities
    '🏌️‍♀️', '🏌️‍♂️', '🏌️', '🏄‍♀️', '🏄‍♂️', '🏄', '🏊‍♀️', '🏊‍♂️', '🏊', 
    '🚣‍♀️', '🚣‍♂️', '🚣', '🚴‍♀️', '🚴‍♂️', '🚴', '🚵‍♀️', '🚵‍♂️', '🚵', 
    '🏇', '🧗‍♀️', '🧗‍♂️', '🧗', '🏋️‍♀️', '🏋️‍♂️', '🏋️', '🤼‍♀️', '🤼‍♂️', 
    '🤸‍♀️', '🤸‍♂️', '🤹‍♀️', '🤹‍♂️', '🧘‍♀️', '🧘‍♂️', '🛌', '🏄‍♀️', 
    '🛹', '🏂', '⛷️', '🎿', '🥌', '🎯', '🎳', '🏏', '🏑', '🏒', 
    '🏉', '🏈', '⚽', '⚾', '🥎', '🎾', '🏐', '🏓', '🏸', '🥊', 
    '🥋', '⛳', '🏹', '🎣', '🤿', '🛶', '🪂',

    // Places & nature
    '🏔️', '⛰️', '🌋', '🗻', '🏕️', '🏖️', '🏜️', '🏝️', '🏞️', '🏟️', 
    '🏛️', '🏗️', '🏘️', '🏚️', '🏠', '🏡', '🏢', '🏣', '🏤', '🏥', 
    '🏦', '🏨', '🏩', '🏪', '🏫', '🏬', '🏭', '🏯', '🏰', '💒', 
    '🗼', '🗽', '⛪', '🕌', '🕍', '⛩️', '🕋', '🛕', '🏛️', '🏗️',

    // Objects & items
    '🚏', '🛤️', '🛣️', '🛢️', '⛽', '🛎️', '🧳', '🛋️', '🛏️', '🛌', 
    '🪑', '🚪', '🪞', '🪟', '🛁', '🚿', '🪠', '🪤', '🪒', '🧴', 
    '🧹', '🧺', '🧻', '🪣', '🪤', '🪀', '🪁', '🪂',

    // Nature & weather
    '🪐', '🌑', '🌒', '🌓', '🌔', '🌕', '🌖', '🌗', '🌘', '🌙', 
    '🌚', '🌛', '🌜', '🌡️', '☀️', '🌝', '🌞', '⭐', '🌟', '💫', 
    '✨', '⚡', '☄️', '🌪️', '🌈', '🌤️', '⛅', '🌥️', '🌦️', '🌧️', 
    '🌨️', '🌩️', '⛈️', '🌫️', '🌬️', '🌀', '🌊', '💧', '💦', '🌊',

    // Flowers & nature
    '🥀', '🌹', '🌻', '🌼', '⚡', '💧', '🌟', '⭐', '🌙', '🌛', 
    '🌜', '🌚', '🌝', '🌞', '☀️', '✨', '☄️',

    // Animals
    '🐈', '🐈‍⬛', '🐎', '🫏', '🦂',

    // Books & objects
    '📔', '📙',

    // Symbols
    '🔔', '🔊', '🩷', '🩵', '🩶', '♥️', '❌', '⭕', '🔞', '⛔', 
    '🔕', '🔇',

    // Flag samples (just a few examples from your list)
    '🇦🇪', '🇧🇭', '🇨🇦', '🇪🇬', '🇪🇭', '🇩🇿', '🇸🇾', '🇾🇪', '🇺🇲', 
    '🇹🇷', '🇸🇩', '🇸🇦', '🇵🇸', '🇴🇲', '🇱🇾', '🇱🇧', '🇮🇶', '🇯🇴'
];

  // خريطة الأكواد للصور المتحركة (GIFs)
  const emojiMap = {
    ":177:": "emojis/177.gif",
    ":169:": "emojis/169.gif",
    ":167:": "emojis/167.gif",
    ":14554:": "emojis/14554.gif",
    ":13658:": "emojis/13658.gif",
    ":133:": "emojis/133.gif",
    ":127:": "emojis/127.gif",
    ":0085:": "emojis/85.gif",
    ":0048:": "emojis/48.gif",
    ":0045:": "emojis/45.gif",
    ":0036:": "emojis/36.gif",
    ":228:": "emojis/228.gif",
    ":225:": "emojis/225.gif",
    ":224:": "emojis/224.gif",
    ":222:": "emojis/222.gif",
    ":213:": "emojis/213.gif",
    ":202:": "emojis/202.gif",
    ":201:": "emojis/201.gif",
    ":19:": "emojis/19.gif",
    ":1886:": "emojis/1886.gif",
    ":178:": "emojis/178.gif",
    ":46:": "emojis/46.gif",
    ":42:": "emojis/42.gif",
    ":377:": "emojis/377.gif",
    ":36:": "emojis/36.gif",
    ":34:": "emojis/34.gif",
    ":325:": "emojis/325.gif"
  };
    const input = document.getElementById('messageInput');
    if (!input) {
        console.error('❌ لم يتم العثور على حقل الإدخال');
        return;
    }

    // إزالة المنتقي القديم
    const existingPanel = document.querySelector('.emoji-panel');
    if (existingPanel) {
        existingPanel.remove();
    }

    // إنشاء المنتقي
    const panel = document.createElement('div');
    panel.className = 'emoji-panel';
    panel.id = 'emojiPanel';

    // إضافة العنوان
    const title = document.createElement('div');
    title.className = 'emoji-panel-title';
    title.textContent = '🎨 اختر رمز تعبيري';
    panel.appendChild(title);

    // إضافة الرموز
    emojis.forEach(emoji => {
        const emojiSpan = document.createElement('span');
        emojiSpan.innerHTML = emoji;
        emojiSpan.title = emoji;
        emojiSpan.onclick = function() {
            addEmoji(emoji);
        };
        panel.appendChild(emojiSpan);
    });

    // إضافة زر الإغلاق
    const closeBtn = document.createElement('button');
    closeBtn.className = 'emoji-panel-close';
    closeBtn.innerHTML = '✕';
    closeBtn.onclick = function(e) {
        e.stopPropagation();
        panel.remove();
    };
    panel.appendChild(closeBtn);

    // إضافة المنتقي للـ container المناسب
    const buttonContainer = document.querySelector('.tool-buttons') || input.closest('.message-input-container') || input.parentNode;
    if (buttonContainer) {
        buttonContainer.style.position = 'relative';
        buttonContainer.appendChild(panel);

        // تحديد الموقع الدقيق
        const buttonRect = event.target.getBoundingClientRect();
        const panelRect = panel.getBoundingClientRect();

        // ضبط الموقع ليكون أسفل الزر
        panel.style.left = '10px';
        panel.style.right = 'auto';
        panel.style.bottom = `${buttonContainer.offsetHeight + 10}px`;
        panel.style.width = 'auto';
    } else {
        // fallback - إضافة للـ body
        document.body.appendChild(panel);
        panel.style.position = 'fixed';
        panel.style.top = '50%';
        panel.style.left = '50%';
        panel.style.transform = 'translate(-50%, -50%)';
    }

    // إغلاق عند الضغط خارج المنتقي
    setTimeout(() => {
        const closeOutside = function(e) {
            if (!panel.contains(e.target) && e.target !== input && !event.target.contains(e.target)) {
                panel.remove();
                document.removeEventListener('click', closeOutside);
            }
        };
        document.addEventListener('click', closeOutside);
    }, 100);

    input.focus();
    console.log('✅ تم فتح منتقي الرموز التعبيرية المحسن');
}

// إضافة رمز تعبيري
function addEmoji(emoji) {
    const input = document.getElementById('messageInput');
    if (input) {
        // الحفاظ على موضع الكورسور
        const start = input.selectionStart;
        const end = input.selectionEnd;
        const textBefore = input.value.substring(0, start);
        const textAfter = input.value.substring(end);
        input.value = textBefore + emoji + textAfter;

        // وضع الكورسور بعد الإيموجي
        const newPos = start + emoji.length;
        input.setSelectionRange(newPos, newPos);

        input.focus();

        // إرسال حدث input
        input.dispatchEvent(new Event('input', { bubbles: true }));

        // إغلاق المنتقي
        const panel = document.querySelector('.emoji-panel');
        if (panel) {
            panel.remove();
        }

        console.log(`✅ تم إضافة: ${emoji}`);
    }
}

// فتح منتقي الصور المتحركة
function openGifPicker() {
    const panel = document.createElement('div');
    panel.className = 'emoji-panel';
    panel.innerHTML = `
        <div class="emoji-panel-title">🎬 منتقي الصور المتحركة</div>
        <div style="text-align: center; padding: 20px; color: #7f8c8d;">
            🚧 قيد التطوير - سيتم إضافة قريباً
        </div>
        <button class="emoji-panel-close" onclick="this.parentElement.remove()">✕</button>
    `;

    const container = document.querySelector('.tool-buttons') || document.body;
    container.appendChild(panel);
}


// إضافة رمز تعبيري
function addEmoji(emoji) {
    const input = document.getElementById('messageInput');
    input.value += emoji;
    input.focus();

    // إزالة منتقي الرموز
    const picker = input.parentNode.querySelector('div');
    if (picker) picker.remove();
}

// فتح منتقي الصور المتحركة
function openGifPicker() {
    showNotification('منتقي الصور المتحركة قيد التطوير', 'info');
}

// اقتباس رسالة
function quoteMessage(messageId, author, content) {
    quotedMessage = { id: messageId, author, content };

    const quotedDiv = document.getElementById('quotedMessage');
    quotedDiv.style.display = 'flex';
    quotedDiv.querySelector('.quoted-author').textContent = author;
    quotedDiv.querySelector('.quoted-text').textContent = content.substring(0, 50) + (content.length > 50 ? '...' : '');

    document.getElementById('messageInput').focus();
}

// إلغاء الاقتباس
function cancelQuote() {
    quotedMessage = null;
    document.getElementById('quotedMessage').style.display = 'none';
}

// فتح صورة في مودال
function openImageModal(imageUrl) {
    const modal = document.createElement('div');
    modal.className = 'modal show';
    modal.innerHTML = `
        <div class="modal-content" style="max-width: 90vw; max-height: 90vh; padding: 0; background: transparent; border: none; box-shadow: none;">
            <img src="${imageUrl}" style="width: 100%; height: 100%; object-fit: contain; border-radius: 12px;" onclick="this.parentElement.parentElement.remove()">
        </div>
    `;

    modal.onclick = (e) => {
        if (e.target === modal) {
            modal.remove();
        }
    };

    document.body.appendChild(modal);
}

// 🧹 مسح الدردشة
async function clearChat() {
    if (currentUser?.role !== 'admin' && currentUser?.role !== 'owner') {
        showError('غير مسموح - للإداريين فقط');
        return;
    }

    if (!currentRoom) return showError('لم يتم تحديد الغرفة');

    if (confirm('هل أنت متأكد من مسح جميع الرسائل في هذه الغرفة؟')) {
        try {
            const response = await fetch(`/api/rooms/${currentRoom}/messages`, {
                method: 'DELETE',
                headers: {
                    'Authorization': `Bearer ${localStorage.getItem('chatToken')}`
                }
            });

            if (response.ok) {
                document.getElementById('messagesContainer').innerHTML = '';
                showNotification('تم مسح الدردشة بنجاح ✅', 'success');
            } else {
                const errorText = await response.text();
                showError('فشل في مسح الدردشة: ' + errorText);
            }
        } catch (error) {
            showError('حدث خطأ في الاتصال بالسيرفر');
        }
    }
}


// إظهار تبويبات تسجيل الدخول
function showLoginTab(tabName) {
    // إخفاء جميع النماذج
    document.querySelectorAll('.auth-form').forEach(form => {
        form.classList.remove('active');
    });

    // إزالة الفئة النشطة من جميع الأزرار
    document.querySelectorAll('.tab-btn').forEach(btn => {
        btn.classList.remove('active');
    });

    // عرض النموذج المحدد
    document.getElementById(`${tabName}Form`).classList.add('active');

    // تفعيل الزر المحدد
    event.target.classList.add('active');
}


// إظهار رسالة خطأ
function showError(message) {
    const errorDiv = document.getElementById('loginError');
    if (errorDiv) {
        errorDiv.textContent = message;
        errorDiv.classList.add('show');

        setTimeout(() => {
            errorDiv.classList.remove('show');
        }, 5000);
    } else {
        showNotification(message, 'error');
    }
}

// إظهار حالة التحميل
function showLoading(show) {
    const spinner = document.getElementById('loadingSpinner');
    if (spinner) {
        spinner.style.display = show ? 'flex' : 'none';
    }
}

// إظهار إشعار
function showNotification(message, type = 'info') {
    const container = document.getElementById('toastContainer');
    if (!container) return;

    const toast = document.createElement('div');
    toast.className = `toast ${type}`;
    toast.textContent = message;

    container.appendChild(toast);

    // إزالة الإشعار بعد 5 ثوان
    setTimeout(() => {
        toast.remove();
    }, 5000);
}

// فتح مودال
function openModal(modalId) {
    const modal = document.getElementById(modalId);
    if (modal) {
        modal.classList.add('show');
        document.body.style.overflow = 'hidden';
    }
}

// إغلاق مودال
function closeModal(modalId) {
    const modal = document.getElementById(modalId);
    if (modal) {
        modal.classList.remove('show');
        document.body.style.overflow = 'auto';
    }
}

// إغلاق جميع المودالات
function closeAllModals() {
    document.querySelectorAll('.modal').forEach(modal => {
        modal.classList.remove('show');
    });
    document.body.style.overflow = 'auto';
}

// إغلاق إجراءات المستخدم
function closeUserActionsModal() {
    closeModal('userActionsModal');
    selectedUserId = null;
}

// تهيئة الأصوات
function initializeAudio() {
    // تحميل الأصوات المحفوظة
    const soundEnabled = localStorage.getItem('soundNotifications');
    if (soundEnabled !== null) {
        document.getElementById('soundNotifications').checked = soundEnabled === 'true';
    }
}

// تشغيل صوت الإشعار
function playNotificationSound() {
    const soundEnabled = document.getElementById('soundNotifications')?.checked;
    if (soundEnabled !== false) {
        const audio = document.getElementById('notificationSound');
        if (audio) {
            audio.play().catch(() => {
                // تجاهل الأخطاء إذا لم يتمكن من تشغيل الصوت
            });
        }
    }
}

// تنظيف HTML
function escapeHtml(text) {
    const div = document.createElement('div');
    div.textContent = text;
    return div.innerHTML;
}

// معالج الأخطاء العامة
window.addEventListener('error', function(e) {
    console.error('خطأ في التطبيق:', e.error);
    showNotification('حدث خطأ غير متوقع', 'error');
});

// معالج الأخطاء غير المعالجة
window.addEventListener('unhandledrejection', function(e) {
    console.error('خطأ غير معالج:', e.reason);
    showNotification('حدث خطأ في الشبكة', 'error');
});

// ==================== الميزات الجديدة ====================

// متغيرات الإشعارات والميزات الجديدة
let onlineUsersList = [];
let allUsersList = [];
let notificationsList = [];
let privateChatMinimized = false;
let currentPrivateChatUser = null;

// متغيرات للميزات الجديدة
var currentMusicPlayer = null;
var isContestActive = false;
var contestTimer = null;

// وظائف إرسال الصور
function openImagePicker() {
    const imageInput = document.createElement('input');
    imageInput.type = 'file';
    imageInput.accept = 'image/*';
    imageInput.multiple = true;

    imageInput.onchange = function(event) {
        const files = event.target.files;
        if (files.length > 0) {
            for (let i = 0; i < files.length; i++) {
                uploadImage(files[i]);
            }
        }
    };

    imageInput.click();
}

function uploadImage(file) {
    if (file.size > 10 * 1024 * 1024) { // 10MB limit
        alert('حجم الصورة كبير جداً! الحد الأقصى 10 ميجابايت');
        return;
    }

    const formData = new FormData();
    formData.append('image', file);
    formData.append('roomId', currentRoomId);

    // عرض مؤشر التحميل
    showUploadProgress('جاري رفع الصورة...');

    fetch('/upload-image', {
        method: 'POST',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('token')
        },
        body: formData
    })
    .then(response => response.json())
    .then(data => {
        hideUploadProgress();
        if (data.success) {
            // إرسال رسالة مع رابط الصورة
            socket.emit('sendMessage', {
                message: '',
                imageUrl: data.imageUrl,
                roomId: currentRoomId,
                type: 'image'
            });
        } else {
            alert('فشل في رفع الصورة: ' + data.message);
        }
    })
    .catch(error => {
        hideUploadProgress();
        console.error('خطأ في رفع الصورة:', error);
        alert('حدث خطأ أثناء رفع الصورة');
    });
}

function openPrivateImagePicker(receiverId) {
    const imageInput = document.createElement('input');
    imageInput.type = 'file';
    imageInput.accept = 'image/*';

    imageInput.onchange = function(event) {
        const file = event.target.files[0];
        if (file) {
            uploadPrivateImage(file, receiverId);
        }
    };

    imageInput.click();
}

function uploadPrivateImage(file, receiverId) {
    if (file.size > 10 * 1024 * 1024) { 
        alert('حجم الصورة كبير جداً! الحد الأقصى 10 ميجابايت');
        return;
    }

    const formData = new FormData();
    formData.append('image', file);
    formData.append('receiverId', receiverId);

    showUploadProgress('جاري رفع الصورة الخاصة...');

    fetch('/upload-private-image', {
        method: 'POST',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('token')
        },
        body: formData
    })
    .then(response => response.json())
    .then(data => {
        hideUploadProgress();
        if (data.success) {
            socket.emit('sendPrivateMessage', {
                message: '',
                imageUrl: data.imageUrl,
                receiverId: receiverId,
                type: 'image'
            });
        } else {
            alert('فشل في رفع الصورة: ' + data.message);
        }
    })
    .catch(error => {
        hideUploadProgress();
        console.error('خطأ في رفع الصورة الخاصة:', error);
        alert('حدث خطأ أثناء رفع الصورة');
    });
}

function showUploadProgress(message) {
    const progressDiv = document.createElement('div');
    progressDiv.id = 'uploadProgress';
    progressDiv.className = 'upload-progress';
    progressDiv.innerHTML = `
        <div class="upload-progress-content">
            <div class="upload-spinner"></div>
            <span>${message}</span>
        </div>
    `;
    document.body.appendChild(progressDiv);
}

function hideUploadProgress() {
    const progressDiv = document.getElementById('uploadProgress');
    if (progressDiv) {
        progressDiv.remove();
    }
}

// وظائف معاينة فيديو يوتيوب
function detectAndProcessYouTubeLinks(message) {
    const youtubeRegex = /(?:https?:\/\/)?(?:www\.)?(?:youtube\.com\/watch\?v=|youtu\.be\/)([a-zA-Z0-9_-]{11})/g;
    const matches = message.match(youtubeRegex);

    if (matches) {
        matches.forEach(match => {
            const videoId = extractYouTubeVideoId(match);
            if (videoId) {
                message = message.replace(match, createYouTubeEmbed(videoId));
            }
        });
    }

    return message;
}

function extractYouTubeVideoId(url) {
    const regex = /(?:https?:\/\/)?(?:www\.)?(?:youtube\.com\/watch\?v=|youtu\.be\/)([a-zA-Z0-9_-]{11})/;
    const match = url.match(regex);
    return match ? match[1] : null;
}

function createYouTubeEmbed(videoId) {
    return `
        <div class="youtube-embed">
            <iframe 
                width="300" 
                height="200" 
                src="https://www.youtube.com/embed/${videoId}" 
                frameborder="0" 
                allowfullscreen>
            </iframe>
            <div class="youtube-info">
                <span>🎥 فيديو يوتيوب</span>
            </div>
        </div>
    `;
}

// وظائف حذف الرسائل
function deleteMessage(messageId, messageElement) {
    if (confirm('هل أنت متأكد من حذف هذه الرسالة؟')) {
        fetch('/delete-message', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'Authorization': 'Bearer ' + localStorage.getItem('token')
            },
            body: JSON.stringify({ messageId: messageId })
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                messageElement.innerHTML = '<em>تم حذف هذه الرسالة</em>';
                messageElement.classList.add('deleted-message');
            } else {
                alert('فشل في حذف الرسالة: ' + data.message);
            }
        })
        .catch(error => {
            console.error('خطأ في حذف الرسالة:', error);
        });
    }
}


// وظائف الطرد والكتم
function kickUser(userId, userName) {
    if (confirm(`هل تريد طرد ${userName} من الغرفة؟`)) {
        socket.emit('kickUser', {
            userId: userId,
            roomId: currentRoomId
        });
    }
}

function muteUser(userId, userName) {
    const duration = prompt(`كم دقيقة تريد كتم ${userName}؟ (اترك فارغاً للكتم الدائم)`, '10');

    if (duration !== null) {
        const muteMinutes = duration === '' ? null : parseInt(duration);

        socket.emit('muteUser', {
            userId: userId,
            roomId: currentRoomId,
            duration: muteMinutes
        });
    }
}

function unmuteUser(userId, userName) {
    if (confirm(`هل تريد إلغاء كتم ${userName}؟`)) {
        socket.emit('unmuteUser', {
            userId: userId,
            roomId: currentRoomId
        });
    }
}
// وظيفة لفتح نافذة إنشاء الغرفة
function openCreateRoomModal() {
    // التحقق مما إذا كان هناك نافذة منبثقة موجودة بالفعل
    if (document.getElementById('createRoomModal')) {
        return; // إذا كانت موجودة، لا تفتح واحدة جديدة
    }

    const modal = document.createElement('div');
    modal.className = 'modal active';
    modal.id = 'createRoomModal';

    modal.innerHTML = `
        <div class="modal-content">
            <span class="close" id="closeCreateRoomModalBtn">&times;</span>
            <h2>🏠 إنشاء غرفة جديدة</h2>
            <div class="room-form">
                <div class="form-group">
                    <label>اسم الغرفة:</label>
                    <input type="text" id="roomName" placeholder="ادخل اسم الغرفة" required>
                </div>
                <div class="form-group">
                    <label>وصف الغرفة:</label>
                    <textarea id="roomDescription" placeholder="ادخل وصف للغرفة"></textarea>
                </div>
                <div class="form-group">
                    <label>نوع الغرفة:</label>
                    <select id="roomType">
                        <option value="public">عامة</option>
                        <option value="private">خاصة</option>
                        <option value="contest">مسابقات</option>
                    </select>
                </div>
                <div class="form-group">
                    <label>الحد الأقصى للمستخدمين:</label>
                    <input type="number" id="maxUsers" value="50" min="2" max="200" required>
                </div>
                <div class="form-group">
                    <label>خلفية الغرفة (اختياري):</label>
                    <input type="file" id="roomBackgroundInput" accept="image/*">
                </div>
                <div class="room-actions">
                    <button id="saveRoomBtn" class="btn save-btn">إنشاء الغرفة</button>
                    <button id="cancelRoomBtn" class="btn cancel-btn">إلغاء</button>
                </div>
                <div id="errorMessage" class="error-message" style="color: red; display: none;"></div>
            </div>
        </div>
    `;

    document.body.appendChild(modal);

    // ⚠️ هنا نربط الأحداث بعد إنشاء العناصر
    document.getElementById('closeCreateRoomModalBtn').addEventListener('click', closeCreateRoomModal);
    document.getElementById('cancelRoomBtn').addEventListener('click', closeCreateRoomModal);
    document.getElementById('saveRoomBtn').addEventListener('click', createRoom);
}

// وظيفة لإغلاق النافذة المنبثقة
function closeCreateRoomModal() {
    const modal = document.getElementById('createRoomModal');
    if (modal) {
        modal.remove();
    }
}

// وظيفة لعرض رسائل الخطأ
function showError(message) {
    const errorMessage = document.getElementById('errorMessage');
    if (errorMessage) {
        errorMessage.textContent = message;
        errorMessage.style.display = 'block';
    } else {
        alert(message);
    }
}

// وظيفة لإنشاء الغرفة
async function createRoom() {
    const roomName = document.getElementById('roomName').value.trim();
    const roomDescription = document.getElementById('roomDescription').value.trim();
    const roomType = document.getElementById('roomType').value;
    const maxUsers = parseInt(document.getElementById('maxUsers').value);
    const backgroundFile = document.getElementById('roomBackgroundInput').files[0];
    const errorMessage = document.getElementById('errorMessage');

    // إعادة إخفاء رسالة الخطأ إن وجدت
    if (errorMessage) {
        errorMessage.style.display = 'none';
        errorMessage.textContent = '';
    }

    // التحقق من المدخلات
    if (!roomName) {
        showError('يرجى إدخال اسم الغرفة');
        return;
    }
    if (isNaN(maxUsers) || maxUsers < 2 || maxUsers > 200) {
        showError('يرجى إدخال عدد مستخدمين بين 2 و200');
        return;
    }

    // جلب التوكن من localStorage
    const token = localStorage.getItem('authToken');
    if (!token) {
        showError('يرجى تسجيل الدخول كمسؤول أولاً');
        return;
    }

    // إنشاء formData
    const formData = new FormData();
    formData.append('name', roomName);
    formData.append('description', roomDescription);
    if (backgroundFile) {
        formData.append('roomBackground', backgroundFile);
    }

    try {
        const response = await fetch('/api/rooms', {
            method: 'POST',
            headers: {
                'Authorization': `Bearer ${token}`
            },
            body: formData
        });

        const data = await response.json();

        if (response.ok) {
            alert('تم إنشاء الغرفة بنجاح!');
            closeCreateRoomModal();
            // يمكنك استدعاء loadRooms(); هنا إذا أردت
        } else {
            showError(data.error || 'فشل إنشاء الغرفة. تأكد من الصلاحيات.');
        }
    } catch (error) {
        console.error('خطأ في الاتصال:', error);
        showError('خطأ في الاتصال بالخادم');
    }
}


// ==================== وظائف الإشعارات ====================

// فتح مودال إرسال إشعار
function openSendNotificationModal() {
    if (currentUser?.role !== 'admin' && currentUser?.role !== 'owner') {
        showNotification('غير مسموح - للإداريين فقط', 'error');
        return;
    }

    openModal('sendNotificationModal');
    loadUsersForNotification();
    closeMainMenu();
}

// إغلاق مودال إرسال إشعار
function closeSendNotificationModal() {
    closeModal('sendNotificationModal');
    document.getElementById('notificationMessage').value = '';
    document.getElementById('notificationRecipient').value = '';
}

// تحميل المستخدمين لقائمة الإشعارات
async function loadUsersForNotification() {
    try {
        const response = await fetch('/api/all-users-list', {
            headers: {
                'Authorization': `Bearer ${localStorage.getItem('chatToken')}`
            }
        });

        if (response.ok) {
            const users = await response.json();
            const select = document.getElementById('notificationRecipient');
            select.innerHTML = '<option value="">اختر مستخدم...</option>';

            users.forEach(user => {
                const option = document.createElement('option');
                option.value = user.id;
                option.textContent = `${user.display_name} (${RANKS[user.rank]?.name || 'زائر'})`;
                select.appendChild(option);
            });
        }
    } catch (error) {
        console.error('خطأ في تحميل المستخدمين:', error);
    }
}

// ==================== وظائف الإشعارات (الكود الكامل والمعدل) ====================

// ملاحظة: السطرين التاليين يجب أن يكونا موجودين في بداية ملفك الرئيسي
// const socket = io(); // للاتصال بالخادم
// let currentUser = {}; // يجب تعبئة هذا المتغير بمعلومات المستخدم عند تسجيل الدخول

// --- الجزء الجديد والمهم: ربط المستخدم بالخادم والاستماع للإشعارات ---

// نتأكد من أننا نملك معلومات المستخدم قبل محاولة التسجيل
// يمكنك وضع هذا الكود داخل الدالة التي تعمل بعد نجاح تسجيل الدخول مباشرة
function initializeRealtimeConnection() {
    if (currentUser && currentUser.id) {
        // 1. تسجيل المستخدم لدى الخادم لربط هويته (userId) بالاتصال الحالي (socket.id)
        socket.emit('register', currentUser.id);

        // 2. الاستماع لحدث 'notification' القادم من الخادم
        socket.on('notification', (data) => {
            console.log('تم استلام إشعار جديد:', data);

            // 3. عرض الإشعار للمستخدم باستخدام دالتك الحالية
            showNotification(data.message, data.type);

            // يمكنك إضافة وظائف أخرى هنا مثل تحديث عدد الإشعارات غير المقروءة
        });
    }
}

// استدعِ هذه الدالة بعد تعبئة متغير currentUser بمعلومات المستخدم الذي سجل دخوله
// مثال:
// login().then(userData => {
//     currentUser = userData;
//     initializeRealtimeConnection();
// });


// ==================== الوظائف التي كانت لديك (تبقى كما هي) ====================

// فتح مودال إرسال إشعار
function openSendNotificationModal() {
    if (currentUser?.role !== 'admin' && currentUser?.role !== 'owner') {
        showNotification('غير مسموح - للإداريين فقط', 'error');
        return;
    }

    openModal('sendNotificationModal');
    loadUsersForNotification();
    closeMainMenu();
}

// إغلاق مودال إرسال إشعار
function closeSendNotificationModal() {
    closeModal('sendNotificationModal');
    document.getElementById('notificationMessage').value = '';
    document.getElementById('notificationRecipient').value = '';
}

// تحميل المستخدمين لقائمة الإشعارات
async function loadUsersForNotification() {
    try {
        const response = await fetch('/api/all-users-list', {
            headers: {
                'Authorization': `Bearer ${localStorage.getItem('chatToken')}`
            }
        });

        if (response.ok) {
            const users = await response.json();
            const select = document.getElementById('notificationRecipient');
            select.innerHTML = '<option value="">اختر مستخدم...</option>';

            users.forEach(user => {
                const option = document.createElement('option');
                option.value = user.id;
                option.textContent = `${user.display_name} (${RANKS[user.rank]?.name || 'زائر'})`;
                select.appendChild(option);
            });
        }
    } catch (error) {
        console.error('خطأ في تحميل المستخدمين:', error);
    }
}

// إرسال إشعار للمستخدم
async function sendNotificationToUser() {
    const recipientId = document.getElementById('notificationRecipient')?.value;
    const message = document.getElementById('notificationMessage')?.value.trim();
    const type = document.getElementById('notificationType')?.value;

    if (!recipientId) {
        showNotification('يرجى اختيار مستخدم صحيح', 'warning');
        return;
    }

    if (!message) {
        showNotification('يرجى كتابة رسالة الإشعار', 'warning');
        return;
    }

    if (!type) {
        showNotification('يرجى اختيار نوع الإشعار', 'warning');
        return;
    }

    try {
        showLoading(true);

        const response = await fetch('/api/send-notification', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'Authorization': `Bearer ${localStorage.getItem('chatToken')}`
            },
            body: JSON.stringify({
                recipientId: parseInt(recipientId),
                message,
                type
            })
        });

        const data = await response.json();

        if (response.ok) {
            showNotification('تم إرسال الإشعار بنجاح', 'success');
            closeSendNotificationModal();
        } else {
            showNotification(data.error || 'فشل في إرسال الإشعار', 'error');
        }

    } catch (error) {
        console.error('خطأ عند الإرسال:', error);
        showNotification('حدث خطأ أثناء إرسال الإشعار', 'error');
    } finally {
        showLoading(false);
    }
}



// ==================== قائمة المتصلين حالياً ====================

// فتح مودال المتصلين حالياً
function openOnlineUsersModal() {
    openModal('onlineUsersModal');
    displayOnlineUsers();
    closeMainMenu();
}

// إغلاق مودال المتصلين حالياً
function closeOnlineUsersModal() {
    closeModal('onlineUsersModal');
}

// عرض المتصلين حالياً
function displayOnlineUsers() {
    const container = document.getElementById('onlineUsersList');

    if (onlineUsersList.length === 0) {
        container.innerHTML = '<p style="text-align: center; color: var(--text-secondary); padding: 20px;">لا يوجد مستخدمين متصلين حالياً</p>';
        return;
    }

    container.innerHTML = '';

    onlineUsersList.forEach(user => {
        if (user.userId === currentUser?.id) return; // لا نعرض المستخدم الحالي

        const userDiv = document.createElement('div');
        userDiv.className = 'online-user-item';

        const rank = RANKS[user.rank] || RANKS.visitor;

        userDiv.innerHTML = `
            <div class="online-user-info">
                <div class="online-status-indicator"></div>
                <div class="user-details">
                    <span class="user-name">${escapeHtml(user.displayName)}</span>
                    <span class="user-rank">${rank.emoji} ${rank.name}</span>
                </div>
            </div>
            <div class="online-user-actions">
                <button onclick="startPrivateChat(${user.userId}, '${escapeHtml(user.displayName)}')" class="btn btn-sm btn-primary" title="دردشة خاصة">
                    <i class="fas fa-comment"></i>
                </button>
                ${currentUser?.role === 'admin' || currentUser?.role === 'owner' ? `
                    <button onclick="openNotificationModalForUser(${user.userId}, '${escapeHtml(user.displayName)}')" class="btn btn-sm btn-info" title="إرسال إشعار">
                        <i class="fas fa-bell"></i>
                    </button>
                ` : ''}
            </div>
        `;

        container.appendChild(userDiv);
    });
}

// بدء دردشة خاصة
function startPrivateChat(userId, userName) {
    currentPrivateChatUser = { id: userId, name: userName };
    openPrivateChatBox();
    closeOnlineUsersModal();

    // تحديث قائمة المستخدمين في صندوق الدردشة الخاصة
    const select = document.getElementById('privateChatUserSelect');
    select.value = userId;

    // تحديث عنوان صندوق الدردشة
    const titleSpan = document.querySelector('.chat-box-title span');
    titleSpan.textContent = `دردشة خاصة مع ${userName}`;

    // تحميل الرسائل الخاصة
    loadPrivateMessages(userId);
}

// ==================== صندوق الدردشة الخاصة ====================

// فتح صندوق الدردشة الخاصة
function openPrivateChatBox() {
    const chatBox = document.getElementById('privateChatBox');
    chatBox.style.display = 'block';
    privateChatMinimized = false;

    // تحميل المستخدمين في القائمة
    loadUsersForPrivateChat();
    closeMainMenu();
}

// إغلاق صندوق الدردشة الخاصة
function closePrivateChatBox() {
    const chatBox = document.getElementById('privateChatBox');
    chatBox.style.display = 'none';
    currentPrivateChatUser = null;
}

// تصغير صندوق الدردشة الخاصة
function minimizePrivateChatBox() {
    const chatBox = document.getElementById('privateChatBox');
    const body = chatBox.querySelector('.chat-box-body');

    if (privateChatMinimized) {
        body.style.display = 'block';
        privateChatMinimized = false;
    } else {
        body.style.display = 'none';
        privateChatMinimized = true;
    }
}

// تحميل المستخدمين للدردشة الخاصة
async function loadUsersForPrivateChat() {
    try {
        const response = await fetch('/api/all-users-list', {
            headers: {
                'Authorization': `Bearer ${localStorage.getItem('chatToken')}`
            }
        });

        if (response.ok) {
            const users = await response.json();
            const select = document.getElementById('privateChatUserSelect');
            select.innerHTML = '<option value="">اختر مستخدم...</option>';

            users.forEach(user => {
                const option = document.createElement('option');
                option.value = user.id;
                option.textContent = `${user.display_name} ${user.is_online ? '🟢' : '🔴'}`;
                select.appendChild(option);
            });
        }
    } catch (error) {
        console.error('خطأ في تحميل المستخدمين:', error);
    }
}

// إرسال رسالة خاصة
function sendPrivateChatMessage() {
    const input = document.getElementById('privateChatInput');
    const userSelect = document.getElementById('privateChatUserSelect');
    const message = input.value.trim();
    const receiverId = userSelect.value;

    if (!message) {
        showNotification('يرجى كتابة رسالة', 'warning');
        return;
    }

    if (!receiverId) {
        showNotification('يرجى اختيار مستخدم', 'warning');
        return;
    }

    if (socket) {
        socket.emit('sendPrivateMessage', {
            message: message,
            receiverId: parseInt(receiverId)
        });

        input.value = '';
    }
}

// عرض رسالة خاصة في صندوق الدردشة
function displayPrivateMessage(message) {
    const container = document.getElementById('privateChatMessages');
    const messageDiv = document.createElement('div');
    messageDiv.className = `private-message ${message.user_id === currentUser?.id ? 'own' : ''}`;

    const time = new Date(message.timestamp).toLocaleTimeString('ar-SA', {
        hour: '2-digit',
        minute: '2-digit'
    });

    messageDiv.innerHTML = `
        <div class="private-message-content">
            <div class="private-message-header">
                <span class="private-message-author">${escapeHtml(message.display_name)}</span>
                <span class="private-message-time">${time}</span>
            </div>
            <div class="private-message-text">${escapeHtml(message.message)}</div>
        </div>
    `;

    container.appendChild(messageDiv);
    container.scrollTop = container.scrollHeight;
}

// تحميل الرسائل الخاصة
async function loadPrivateMessages(userId) {
    try {
        const response = await fetch(`/api/private-messages/${userId}`, {
            headers: {
                'Authorization': `Bearer ${localStorage.getItem('chatToken')}`
            }
        });

        if (response.ok) {
            const messages = await response.json();
            const container = document.getElementById('privateChatMessages');
            container.innerHTML = '';

            if (messages.length === 0) {
                container.innerHTML = '<p style="text-align: center; color: var(--text-secondary); padding: 20px;">لا توجد رسائل بعد، ابدأ المحادثة!</p>';
            } else {
                messages.forEach(message => {
                    displayPrivateMessage(message);
                });
            }
        }
    } catch (error) {
        console.error('خطأ في تحميل الرسائل الخاصة:', error);
    }
}

// تشغيل الأغنية تلقائياً في البروفايل
function autoPlayProfileMusic(musicUrl) {
    if (musicUrl) {
        const audio = new Audio(musicUrl);
        audio.volume = 0.3;
        audio.loop = false;

        // محاولة تشغيل الأغنية
        audio.play().catch(error => {
            console.log('لا يمكن تشغيل الأغنية تلقائياً:', error);
            // إضافة زر تشغيل إذا فشل التشغيل التلقائي
            addManualPlayButton(audio);
        });

        return audio;
    }
}

function addManualPlayButton(audio) {
    const playButton = document.createElement('button');
    playButton.innerHTML = '🎵 تشغيل الأغنية';
    playButton.className = 'play-music-btn';
    playButton.onclick = () => {
        audio.play();
        playButton.style.display = 'none';
    };

    const profileModal = document.querySelector('.modal.active .modal-content');
    if (profileModal) {
        profileModal.appendChild(playButton);
    }
}
// ==================== نظام الإطارات والثيمات ====================

const FRAMES = {
    owner: [
        { id: 'owner_1', name: 'التاج الذهبي', image: 'frames/owner_1.png', price: 0, exclusive: true },
        { id: 'owner_2', name: 'النار المقدسة', image: 'frames/owner_2.png', price: 0, exclusive: true },
        { id: 'owner_3', name: 'النجم الماسي', image: 'frames/owner_3.png', price: 0, exclusive: true }
    ],
    admin: [
        { id: 'admin_1', name: 'الدرع الذهبي', image: 'frames/admin_1.png', price: 100000, rankRequired: 'admin' },
        { id: 'admin_2', name: 'السيف البرونزي', image: 'frames/admin_2.png', price: 100000, rankRequired: 'admin' },
        // أضف 8 إطارات أخرى هنا
    ],
    prince: [
        { id: 'prince_1', name: 'التاج الفضي', image: 'frames/prince_1.png', price: 2000, rankRequired: 'crown' },
        { id: 'prince_2', name: 'النجمة اللامعة', image: 'frames/prince_2.png', price: 2000, rankRequired: 'crown' },
        // أضف 18 إطار أخرى هنا
    ]
};

function openFramesShop() {
    if (!currentUser) {
        showError('يجب تسجيل الدخول أولاً');
        return;
    }

    const modal = document.createElement('div');
    modal.className = 'modal show';
    modal.id = 'framesShopModal';

    let framesHTML = '';

    // إطارات المالك (غير قابلة للشراء)
    if (isOwner) {
        framesHTML += '<h3>🏆 إطارات المالك الحصرية</h3><div class="frames-grid">';
        FRAMES.owner.forEach(frame => {
            framesHTML += `
                <div class="frame-item exclusive">
                    <img src="${frame.image}" alt="${frame.name}">
                    <p>${frame.name}</p>
                    <button onclick="equipFrame('${frame.id}')" class="btn btn-success">استخدام</button>
                </div>
            `;
        });
        framesHTML += '</div>';
    }

    // إطارات الإدارة
    if (currentUser.rank === 'admin' || currentUser.rank === 'moderator' || isOwner) {
        framesHTML += '<h3>⚡ إطارات الإدارة</h3><div class="frames-grid">';
        FRAMES.admin.forEach(frame => {
            const owned = purchasedFrames.includes(frame.id);
            framesHTML += `
                <div class="frame-item ${owned ? 'owned' : ''}">
                    <img src="${frame.image}" alt="${frame.name}">
                    <p>${frame.name}</p>
                    ${owned ? 
                        `<button onclick="equipFrame('${frame.id}')" class="btn btn-success">استخدام</button>` :
                        `<button onclick="buyFrame('${frame.id}', ${frame.price})" class="btn btn-primary">${frame.price.toLocaleString()} 💰</button>`
                    }
                </div>
            `;
        });
        framesHTML += '</div>';
    }

    // إطارات البرنس
    if (userLevel >= 5 || isOwner) {
        framesHTML += '<h3>👑 إطارات البرنس</h3><div class="frames-grid">';
        FRAMES.prince.forEach(frame => {
            const owned = purchasedFrames.includes(frame.id);
            framesHTML += `
                <div class="frame-item ${owned ? 'owned' : ''}">
                    <img src="${frame.image}" alt="${frame.name}">
                    <p>${frame.name}</p>
                    ${owned ? 
                        `<button onclick="equipFrame('${frame.id}')" class="btn btn-success">استخدام</button>` :
                        `<button onclick="buyFrame('${frame.id}', ${frame.price})" class="btn btn-primary">${frame.price.toLocaleString()} 💰</button>`
                    }
                </div>
            `;
        });
        framesHTML += '</div>';
    }

    modal.innerHTML = `
        <div class="modal-content" style="max-width: 900px;">
            <div class="modal-header">
                <h2>🖼️ متجر الإطارات</h2>
                <button class="close-btn" onclick="closeModal('framesShopModal')">&times;</button>
            </div>
            <div class="modal-body">
                <div class="user-balance">
                    <span>رصيدك: ${userCoins.toLocaleString()} 💰</span>
                </div>
                ${framesHTML}
            </div>
        </div>
    `;

    document.body.appendChild(modal);
}

function buyFrame(frameId, price) {
    if (userCoins < price) {
        showNotification('رصيدك غير كافٍ!', 'error');
        return;
    }

    if (confirm(`هل تريد شراء هذا الإطار بـ ${price.toLocaleString()} كونز؟`)) {
        userCoins -= price;
        purchasedFrames.push(frameId);

        // حفظ في السيرفر
        fetch('/api/buy-frame', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'Authorization': `Bearer ${localStorage.getItem('chatToken')}`
            },
            body: JSON.stringify({ frameId, price })
        });

        showNotification('تم شراء الإطار بنجاح!', 'success');
        closeModal('framesShopModal');
        openFramesShop();
    }
}

function equipFrame(frameId) {
    currentUser.activeFrame = frameId;

    fetch('/api/equip-frame', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
            'Authorization': `Bearer ${localStorage.getItem('chatToken')}`
        },
        body: JSON.stringify({ frameId })
    });

    showNotification('تم تفعيل الإطار!', 'success');
    updateUserInterface();
}
// ========================================
// 🎨 نظام الإطارات المتحركة - النسخة الكاملة مع إطارات أسطورية
// ========================================

// بيانات المستخدم
let userCoins = 100000; // رصيد كبير للتجربة
let userFrames = []; // الإطارات المملوكة
let activeFrame = null; // الإطار المفعل حالياً

// بيانات الإطارات
const framesData = {
    owner: [
        {
            id: 'owner_1',
            name: 'التنين الذهبي',
            rarity: 'owner',
            price: null,
            animation: 'golden-glow',
            gradient: 'linear-gradient(45deg, #ff1493, #ff69b4, #ffd700)',
            exclusive: true
        },
        {
            id: 'owner_2',
            name: 'العرش الملكي',
            rarity: 'owner',
            price: null,
            animation: 'royal-pulse',
            gradient: 'linear-gradient(45deg, #8b0000, #ff1493, #8b0000)',
            exclusive: true
        },
        {
            id: 'owner_3',
            name: 'نار الفينيق',
            rarity: 'owner',
            price: null,
            animation: 'dragon-fire',
            gradient: 'linear-gradient(45deg, #ff4500, #ffd700, #ff4500)',
            exclusive: true
        }
    ],
    admin: [
        {
            id: 'admin_1',
            name: 'الدرع الذهبي',
            rarity: 'admin',
            price: null,
            animation: 'admin-shine',
            gradient: 'linear-gradient(45deg, #ffd700, #ffed4e)',
            exclusive: true
        },
        {
            id: 'admin_2',
            name: 'التاج الفضي',
            rarity: 'admin',
            price: null,
            animation: 'silver-shine',
            gradient: 'linear-gradient(45deg, #c0c0c0, #e8e8e8)',
            exclusive: true
        },
        {
            id: 'admin_3',
            name: 'السيف المقدس',
            rarity: 'admin',
            price: null,
            animation: 'power-glow',
            gradient: 'linear-gradient(45deg, #007bff, #00bfff)',
            exclusive: true
        }
    ],
    prince: [
        {
            id: 'prince_1',
            name: 'جوهرة الأمير',
            rarity: 'prince',
            price: 5000,
            animation: 'prince-sparkle',
            gradient: 'linear-gradient(45deg, #9370db, #ba55d3)',
            exclusive: false
        },
        {
            id: 'prince_2',
            name: 'الهالة الملكية',
            rarity: 'prince',
            price: 8000,
            animation: 'prince-gold',
            gradient: 'linear-gradient(45deg, #daa520, #ffd700)',
            exclusive: false
        },
        {
            id: 'prince_3',
            name: 'نجمة البرنس',
            rarity: 'prince',
            price: 10000,
            animation: 'royal-pulse',
            gradient: 'linear-gradient(45deg, #4b0082, #9370db)',
            exclusive: false
        }
    ],
    legendary: [
        {
            id: 'legend_1',
            name: 'التاج الإمبراطوري',
            rarity: 'legendary',
            price: 15000,
            animation: 'imperial-glow',
            gradient: 'linear-gradient(135deg, #ffd700 0%, #ffed4e 25%, #ff6b6b 50%, #ffd700 75%, #ffed4e 100%)',
            exclusive: false
        },
        {
            id: 'legend_2',
            name: 'جواهر السلطان',
            rarity: 'legendary',
            price: 20000,
            animation: 'jewel-sparkle',
            gradient: 'linear-gradient(135deg, #ff1493 0%, #ffd700 25%, #00ff88 50%, #ffd700 75%, #ff1493 100%)',
            exclusive: false
        },
        {
            id: 'legend_3',
            name: 'العرش الذهبي',
            rarity: 'legendary',
            price: 25000,
            animation: 'royal-throne',
            gradient: 'linear-gradient(135deg, #ffaa00 0%, #ffd700 20%, #fff700 40%, #ffd700 60%, #ffaa00 80%, #ffd700 100%)',
            exclusive: false
        },
        {
            id: 'legend_4',
            name: 'نار الأساطير',
            rarity: 'legendary',
            price: 30000,
            animation: 'mystic-fire',
            gradient: 'linear-gradient(135deg, #ff4500 0%, #ffd700 25%, #ff1493 50%, #ffd700 75%, #ff4500 100%)',
            exclusive: false
        },
        {
            id: 'legend_5',
            name: 'ملك الملوك',
            rarity: 'legendary',
            price: 50000,
            animation: 'king-crown',
            gradient: 'linear-gradient(135deg, #ffd700 0%, #ff6b6b 20%, #ffd700 40%, #00ff88 60%, #ffd700 80%, #ff1493 100%)',
            exclusive: false
        },
        {
            id: 'legend_6',
            name: 'جوهرة الزمرد',
            rarity: 'legendary',
            price: 18000,
            animation: 'emerald-glow',
            gradient: 'linear-gradient(135deg, #00ff88 0%, #00d4aa 25%, #00ffcc 50%, #00d4aa 75%, #00ff88 100%)',
            exclusive: false
        },
        {
            id: 'legend_7',
            name: 'ياقوت الملوك',
            rarity: 'legendary',
            price: 22000,
            animation: 'ruby-sparkle',
            gradient: 'linear-gradient(135deg, #dc143c 0%, #ff1493 25%, #dc143c 50%, #ff1493 75%, #dc143c 100%)',
            exclusive: false
        },
        {
            id: 'legend_8',
            name: 'الماس الأزرق',
            rarity: 'legendary',
            price: 35000,
            animation: 'diamond-shine',
            gradient: 'linear-gradient(135deg, #00bfff 0%, #87ceeb 25%, #00bfff 50%, #87ceeb 75%, #00bfff 100%)',
            exclusive: false
        }
    ]
};

// ========================================
// 🏪 فتح وإغلاق المتجر
// ========================================

function openAppStore() {
    document.getElementById('appStoreModal').style.display = 'flex';
    loadAllFrames();
    updateCoinsDisplay();
}

function closeAppStore() {
    document.getElementById('appStoreModal').style.display = 'none';
}

// ========================================
// 📑 التبديل بين التبويبات
// ========================================

function switchStoreTab(tabName) {
    // إخفاء كل التبويبات
    document.querySelectorAll('.store-tab-content').forEach(tab => {
        tab.classList.remove('active');
    });

    // إزالة active من الأزرار
    document.querySelectorAll('.store-tab').forEach(btn => {
        btn.classList.remove('active');
    });

    // إظهار التبويب المحدد
    document.getElementById(`store${tabName.charAt(0).toUpperCase() + tabName.slice(1)}Tab`).classList.add('active');

    // تفعيل الزر
    event.target.classList.add('active');

    // تحديث المحتوى حسب التبويب
    if (tabName === 'myItems') {
        loadMyFrames();
    }
}

// ========================================
// 📦 تحميل الإطارات
// ========================================

function loadAllFrames() {
    loadFrameCategory('ownerFramesGrid', framesData.owner);
    loadFrameCategory('adminFramesGrid', framesData.admin);
    loadFrameCategory('princeFramesGrid', framesData.prince);
    loadFrameCategory('legendaryFramesGrid', framesData.legendary);
}

function loadFrameCategory(containerId, frames) {
    const container = document.getElementById(containerId);
    if (!container) return;

    container.innerHTML = frames.map(frame => createFrameCard(frame)).join('');
}

function createFrameCard(frame) {
    const isOwned = userFrames.includes(frame.id);
    const isActive = activeFrame === frame.id;
    const canPurchase = frame.price && userCoins >= frame.price;

    return `
        <div class="frame-card ${frame.rarity} ${isOwned ? 'owned' : ''}">
            ${isActive ? '<div class="active-indicator"><i class="fas fa-check"></i> مُفعّل</div>' : ''}

            <div class="frame-preview">
                <div class="frame-image ${frame.rarity}-frame animated-frame" data-animation="${frame.animation}" style="background: ${frame.gradient}; background-size: 200% 200%; animation: gradient-shift 3s ease infinite;">
                    <div class="sample-avatar">
                        <img src="https://images.pexels.com/photos/771742/pexels-photo-771742.jpeg?auto=compress&cs=tinysrgb&w=100" alt="صورة تجريبية">
                    </div>
                    <div class="frame-overlay ${frame.rarity}"></div>
                </div>
            </div>

            <div class="frame-info">
                <h4 class="frame-name">${frame.name}</h4>
                <span class="frame-rarity ${frame.rarity}">
                    ${frame.rarity === 'owner' ? '👑 المالك' : 
                      frame.rarity === 'admin' ? '🛡️ إداري' : 
                      frame.rarity === 'legendary' ? '⭐ أسطوري' : 
                      '💎 برنس'}
                </span>

                ${frame.price ? 
                    `<p class="frame-price"><i class="fas fa-coins"></i> ${frame.price} نقطة</p>` 
                    : 
                    `<p class="exclusive-tag">🔒 حصري</p>`
                }

                <div class="frame-actions">
                    ${!isOwned && frame.price ? 
                        `<button class="btn ${canPurchase ? 'btn-success' : 'btn-disabled'}" 
                                onclick="buyFrame('${frame.id}')" 
                                ${!canPurchase ? 'disabled' : ''}>
                            <i class="fas fa-shopping-cart"></i> شراء
                        </button>` 
                        : ''}

                    ${isOwned && !isActive ? 
                        `<button class="btn btn-primary" onclick="activateFrame('${frame.id}')">
                            <i class="fas fa-check-circle"></i> تفعيل
                        </button>` 
                        : ''}

                    ${isActive ? 
                        `<button class="btn btn-active" disabled>
                            <i class="fas fa-star"></i> مُفعّل الآن
                        </button>` 
                        : ''}

                    ${!isOwned && !frame.price ? 
                        `<button class="btn btn-disabled" disabled>
                            <i class="fas fa-lock"></i> غير متاح
                        </button>` 
                        : ''}
                </div>
            </div>
        </div>
    `;
}

// ========================================
// 💰 شراء الإطار
// ========================================

function buyFrame(frameId) {
    // البحث عن الإطار
    let frame = null;
    for (let category in framesData) {
        frame = framesData[category].find(f => f.id === frameId);
        if (frame) break;
    }

    if (!frame) {
        showToast('الإطار غير موجود!', 'error');
        return;
    }

    if (!frame.price) {
        showToast('هذا الإطار غير متاح للشراء!', 'error');
        return;
    }

    if (userCoins < frame.price) {
        showToast(`رصيدك غير كافٍ! تحتاج ${frame.price} نقطة`, 'error');
        return;
    }

    if (userFrames.includes(frameId)) {
        showToast('تمتلك هذا الإطار بالفعل!', 'info');
        return;
    }

    // خصم النقاط
    userCoins -= frame.price;
    userFrames.push(frameId);

    // حفظ في localStorage
    localStorage.setItem('userCoins', userCoins);
    localStorage.setItem('userFrames', JSON.stringify(userFrames));

    updateCoinsDisplay();
    loadAllFrames();

    showToast(`🎉 تم شراء "${frame.name}" بنجاح!`, 'success');
}

// ========================================
// ✨ تفعيل الإطار
// ========================================

function activateFrame(frameId) {
    if (!userFrames.includes(frameId)) {
        showToast('لا تمتلك هذا الإطار!', 'error');
        return;
    }

    activeFrame = frameId;
    localStorage.setItem('activeFrame', frameId);

    // تطبيق الإطار على صورة المستخدم في الشات
    applyFrameToChat(frameId);

    loadAllFrames();
    showToast('✨ تم تفعيل الإطار بنجاح!', 'success');
}

// ========================================
// 🖼️ تطبيق الإطار في الشات
// ========================================

function applyFrameToChat(frameId) {
    // البحث عن الإطار
    let frame = null;
    for (let category in framesData) {
        frame = framesData[category].find(f => f.id === frameId);
        if (frame) break;
    }

    if (!frame) return;

    // تطبيق على صورة المستخدم في الهيدر
    const headerAvatar = document.getElementById('headerUserAvatar');
    if (headerAvatar) {
        headerAvatar.className = `user-avatar-mini frame-${frame.rarity}`;
        headerAvatar.style.border = `3px solid transparent`;
        headerAvatar.style.background = frame.gradient;
        headerAvatar.style.backgroundSize = '200% 200%';
        headerAvatar.style.animation = 'gradient-shift 3s ease infinite';
        headerAvatar.style.padding = '3px';
        headerAvatar.style.borderRadius = '50%';
        headerAvatar.setAttribute('data-animation', frame.animation);
    }

    // تطبيق على كل رسائل المستخدم
    document.querySelectorAll('.message.own .user-avatar').forEach(avatar => {
        avatar.className = `user-avatar frame-${frame.rarity}`;
        avatar.style.border = `3px solid transparent`;
        avatar.style.background = frame.gradient;
        avatar.style.backgroundSize = '200% 200%';
        avatar.style.animation = 'gradient-shift 3s ease infinite';
        avatar.style.padding = '3px';
        avatar.style.borderRadius = '50%';
        avatar.setAttribute('data-animation', frame.animation);
    });
}

// ========================================
// 📊 تحديث عرض النقاط
// ========================================

function updateCoinsDisplay() {
    const coinsDisplay = document.getElementById('userCoinsDisplay');
    if (coinsDisplay) {
        coinsDisplay.textContent = userCoins;
    }

    // تحديث في البروفايل أيضاً
    const profileCoins = document.getElementById('profileCoins');
    if (profileCoins) {
        profileCoins.textContent = userCoins;
    }
}

// ========================================
// 🛍️ تحميل مشترياتي
// ========================================

function loadMyFrames() {
    const container = document.getElementById('myFramesGrid');
    if (!container) return;

    if (userFrames.length === 0) {
        container.innerHTML = `
            <div class="my-items-empty">
                <i class="fas fa-shopping-bag"></i>
                <h3>لا توجد إطارات</h3>
                <p>لم تقم بشراء أي إطار بعد</p>
            </div>
        `;
        return;
    }

    // جمع كل الإطارات المملوكة
    const ownedFrames = [];
    for (let category in framesData) {
        framesData[category].forEach(frame => {
            if (userFrames.includes(frame.id)) {
                ownedFrames.push(frame);
            }
        });
    }

    container.innerHTML = ownedFrames.map(frame => createFrameCard(frame)).join('');
}

// ========================================
// 🔔 إظهار رسائل التنبيه
// ========================================

function showToast(message, type = 'info') {
    const toast = document.createElement('div');
    toast.className = `toast toast-${type}`;
    toast.innerHTML = `
        <i class="fas fa-${type === 'success' ? 'check-circle' : type === 'error' ? 'times-circle' : 'info-circle'}"></i>
        <span>${message}</span>
    `;

    let container = document.querySelector('.toast-container');
    if (!container) {
        container = document.createElement('div');
        container.className = 'toast-container';
        document.body.appendChild(container);
    }

    container.appendChild(toast);

    setTimeout(() => {
        toast.remove();
    }, 3000);
}

// ========================================
// 🚀 تحميل البيانات عند بدء التشغيل
// ========================================

document.addEventListener('DOMContentLoaded', function() {
    // تحميل البيانات المحفوظة
    const savedCoins = localStorage.getItem('userCoins');
    const savedFrames = localStorage.getItem('userFrames');
    const savedActiveFrame = localStorage.getItem('activeFrame');

    if (savedCoins) userCoins = parseInt(savedCoins);
    if (savedFrames) userFrames = JSON.parse(savedFrames);
    if (savedActiveFrame) {
        activeFrame = savedActiveFrame;
        applyFrameToChat(activeFrame);
    }

    updateCoinsDisplay();
});

// إغلاق المودال عند النقر خارجه
window.onclick = function(event) {
    const modal = document.getElementById('appStoreModal');
    if (event.target === modal) {
        closeAppStore();
    }
}

// ⬇⬇⬇ دوال جديدة لإدارة نافذة الغرف ⬇⬇⬇

/**
 * دالة لتبديل ظهور وإخفاء نافذة الغرف
 */
function toggleRoomsSidebar() {
    const sidebar = document.getElementById('roomsSidebar');
    sidebar.classList.toggle('active');
    // إذا كانت النافذة مفتوحة، نحمل قائمة الغرف
    if (sidebar.classList.contains('active')) {
        loadRoomsList();
    }
}

/**
 * دالة لتحميل قائمة الغرف من الخادم أو من بيانات ثابتة
 */
function loadRoomsList() {
    const roomsList = document.getElementById('roomsList');
    // هنا يمكنك استبدال هذا بالبيانات الفعلية من الخادم
    const demoRooms = [
        { id: 1, name: 'الغرفة الرئيسية', icon: 'https://images.pexels.com/photos/771742/pexels-photo-771742.jpeg?auto=compress&cs=tinysrgb&w=40&h=40&fit=crop' },
        { id: 2, name: 'الغرفة العامة', icon: 'https://via.placeholder.com/40?text=GH' },
        { id: 3, name: 'المملكة والملوك', icon: 'https://via.placeholder.com/40?text=M' },
        { id: 4, name: 'فورم ميلر', icon: 'https://via.placeholder.com/40?text=F' },
        { id: 5, name: 'مملكة السلطانين', icon: 'https://via.placeholder.com/40?text=S' },
        { id: 6, name: 'الخليجي العربي', icon: 'https://via.placeholder.com/40?text=K' },
        { id: 7, name: 'عيد الاصدقاء', icon: 'https://via.placeholder.com/40?text=E' },
        { id: 8, name: 'فورم آيليم', icon: 'https://via.placeholder.com/40?text=A' },
        { id: 9, name: 'المصريين', icon: 'https://via.placeholder.com/40?text=M' },
        { id: 10, name: 'غرة الجزائر', icon: 'https://via.placeholder.com/40?text=G' },
        { id: 11, name: 'أردن ودربية', icon: 'https://via.placeholder.com/40?text=J' },
        { id: 12, name: 'اسلاميات', icon: 'https://via.placeholder.com/40?text=I' }
    ];

    roomsList.innerHTML = demoRooms.map(room => `
        <div class="room-item" onclick="joinRoom(${room.id})">
            <img src="${room.icon}" alt="${room.name}">
            <div class="room-info">
                <div class="room-name">${room.name}</div>
            </div>
        </div>
    `).join('');
}

/**
 * دالة للانضمام إلى غرفة معينة
 * @param {number} roomId - رقم الغرفة
 */
function joinRoom(roomId) {
    // تحديث قائمة الغرف (اختياري)
    const roomSelect = document.getElementById('roomSelect');
    roomSelect.value = roomId;

    // تحديث اسم الغرفة في الشاشة
    const selectedOption = roomSelect.options[roomSelect.selectedIndex];
    const currentRoomName = document.getElementById('currentRoomName');
    currentRoomName.textContent = selectedOption.textContent;

    // إغلاق نافذة الغرف
    toggleRoomsSidebar();

    // عرض رسالة للمستخدم
    showNotification(`تم الانضمام إلى غرفة: ${selectedOption.textContent}`, 'success');
}

// ⬆⬆⬆ نهاية الدوال الجديدة ⬆⬆⬆
function openUserProfile(userId) {
    fetch(`/api/user/profile/${userId}`, {
        headers: { 'Authorization': `Bearer ${localStorage.getItem('chatToken')}` }
    })
    .then(res => res.json())
    .then(user => {
        const modal = document.createElement('div');
        modal.className = 'modal show';
        modal.id = 'viewProfileModal';

        // التحقق من المالك
        const isOwner = currentUser?.email === 'njdj9985@mail.com';

        modal.innerHTML = `
            <div class="modal-content">
                <h2>${user.display_name}</h2>
                <p><strong>العمر:</strong> ${user.age || 'غير محدد'}</p>
                <p><strong>الجنس:</strong> ${user.gender || 'غير محدد'}</p>
                <p><strong>الدولة:</strong> ${user.country || 'غير محددة'}</p>
                <p><strong>نبذة:</strong> ${user.about_me || 'لا توجد نبذة'}</p>

                ${isOwner ? `
                    <button onclick="editUserProfile(${userId})" class="btn btn-warning">
                        ✏️ تعديل البروفايل
                    </button>
                    <button onclick="changeUserRank(${userId})" class="btn btn-primary">
                        👑 تغيير الرتبة
                    </button>
                    <button onclick="banUser(${userId})" class="btn btn-danger">
                        🚫 طرد المستخدم
                    </button>
                ` : ''}

                <button onclick="closeModal('viewProfileModal')" class="btn">إغلاق</button>
            </div>
        `;

        document.body.appendChild(modal);
    });
}
// ===== دالة عرض الهدايا =====
function loadGifts() {
    const giftsGrid = document.getElementById('giftsGrid');
    if (!giftsGrid) return;

    // بيانات الهدايا (يمكنك تعديلها أو جلبها من قاعدة بيانات لاحقاً)
    const gifts = [
        {
            id: 1,
            name: "وردة حمراء",
            description: "هدية رومانسية جميلة",
            price: 50,
            icon: "🌹",
            type: "romantic"
        },
        {
            id: 2,
            name: "قلادة ذهبية",
            description: "هدية فاخرة للمناسبات الخاصة",
            price: 200,
            icon: "📿",
            type: "luxury"
        },
        {
            id: 3,
            name: "كعكة عيد ميلاد",
            description: "احتفل بعيد ميلادك مع الجميع",
            price: 100,
            icon: "🎂",
            type: "celebration"
        },
        {
            id: 4,
            name: "بالونات",
            description: "أضف البهجة والمرح لغرفة الدردشة",
            price: 30,
            icon: "🎈",
            type: "fun"
        },
        {
            id: 5,
            name: "تاج ملكي",
            description: "أظهر أنك ملك/ملكة الغرفة",
            price: 150,
            icon: "👑",
            type: "royal"
        },
        {
            id: 6,
            name: "درع الحماية",
            description: "حماية مؤقتة من التحذيرات",
            price: 250,
            icon: "🛡️",
            type: "protection"
        }
    ];

    // عرض الهدايا في الشبكة
    giftsGrid.innerHTML = gifts.map(gift => `
        <div class="gift-card" onclick="buyGift(${gift.id})">
            <div class="gift-preview">
                <div class="gift-image">${gift.icon}</div>
            </div>
            <div class="gift-info">
                <div class="gift-name">${gift.name}</div>
                <div class="gift-description">${gift.description}</div>
                <div class="gift-price">
                    <i class="fas fa-coins"></i> ${gift.price} نقطة
                </div>
            </div>
            <div class="gift-actions">
                <button class="btn-buy" onclick="buyGift(${gift.id}); event.stopPropagation();">
                    <i class="fas fa-gift"></i> شراء
                </button>
            </div>
        </div>
    `).join('');
}

// دالة شراء الهدية
function buyGift(giftId) {
    const userCoins = parseInt(document.getElementById('userCoinsDisplay').textContent) || 0;

    // الحصول على بيانات الهدية
    const gifts = [
        { id: 1, name: "وردة حمراء", price: 50 },
        { id: 2, name: "قلادة ذهبية", price: 200 },
        { id: 3, name: "كعكة عيد ميلاد", price: 100 },
        { id: 4, name: "بالونات", price: 30 },
        { id: 5, name: "تاج ملكي", price: 150 },
        { id: 6, name: "درع الحماية", price: 250 }
    ];

    const selectedGift = gifts.find(g => g.id === giftId);

    if (!selectedGift) {
        showNotification("حدث خطأ في اختيار الهدية", "error");
        return;
    }

    // التحقق من ما إذا كان لدى المستخدم نقاط كافية
    if (userCoins < selectedGift.price) {
        showNotification("ليس لديك نقاط كافية لشراء هذه الهدية", "error");
        return;
    }

    // تقليل النقاط
    const newCoins = userCoins - selectedGift.price;
    document.getElementById('userCoinsDisplay').textContent = newCoins;
    localStorage.setItem('userCoins', newCoins); // حفظ النقاط في التخزين المحلي

    // إظهار تنبيه النجاح
    showNotification(`تم شراء ${selectedGift.name} بنجاح!`, "success");

    // يمكنك هنا إرسال الهدية إلى مستخدم آخر أو إضافتها إلى قائمة الهدايا المُرسلة
    // مثال: sendGiftToUser(selectedGift.id, targetUserId);
}

// تحديث دالة تبديل التبويبات لتحميل الهدايا عند فتح التبويب
function switchStoreTab(tabName) {
    // إخفاء جميع التبويبات
    document.querySelectorAll('.store-tab-content').forEach(tab => {
        tab.classList.remove('active');
    });
    document.querySelectorAll('.store-tab').forEach(tab => {
        tab.classList.remove('active');
    });

    // عرض التبويب المحدد
    document.getElementById(`store${tabName.charAt(0).toUpperCase() + tabName.slice(1)}Tab`).classList.add('active');
    document.querySelector(`.store-tab[onclick="switchStoreTab('${tabName}')"]`).classList.add('active');

    // إذا كان التبويب هو "الهدايا"، قم بتحميل الهدايا
    if (tabName === 'gifts') {
        loadGifts();
    }
    // إذا كان التبويب هو "مشترياتي"، قم بتحميل الهدايا المملوكة
    else if (tabName === 'myItems') {
        loadMyItems();
    }
}
